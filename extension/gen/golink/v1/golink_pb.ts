// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file golink/v1/golink.proto (package golink.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message golink.v1.Golink
 */
export class Golink extends Message<Golink> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string url = 2;
   */
  url = "";

  constructor(data?: PartialMessage<Golink>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "golink.v1.Golink";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Golink {
    return new Golink().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Golink {
    return new Golink().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Golink {
    return new Golink().fromJsonString(jsonString, options);
  }

  static equals(a: Golink | PlainMessage<Golink> | undefined, b: Golink | PlainMessage<Golink> | undefined): boolean {
    return proto3.util.equals(Golink, a, b);
  }
}

/**
 * @generated from message golink.v1.CreateGolinkRequest
 */
export class CreateGolinkRequest extends Message<CreateGolinkRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string url = 2;
   */
  url = "";

  constructor(data?: PartialMessage<CreateGolinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "golink.v1.CreateGolinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGolinkRequest {
    return new CreateGolinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGolinkRequest {
    return new CreateGolinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGolinkRequest {
    return new CreateGolinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateGolinkRequest | PlainMessage<CreateGolinkRequest> | undefined, b: CreateGolinkRequest | PlainMessage<CreateGolinkRequest> | undefined): boolean {
    return proto3.util.equals(CreateGolinkRequest, a, b);
  }
}

/**
 * @generated from message golink.v1.CreateGolinkResponse
 */
export class CreateGolinkResponse extends Message<CreateGolinkResponse> {
  /**
   * @generated from field: golink.v1.Golink golink = 1;
   */
  golink?: Golink;

  constructor(data?: PartialMessage<CreateGolinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "golink.v1.CreateGolinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "golink", kind: "message", T: Golink },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGolinkResponse {
    return new CreateGolinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGolinkResponse {
    return new CreateGolinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGolinkResponse {
    return new CreateGolinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateGolinkResponse | PlainMessage<CreateGolinkResponse> | undefined, b: CreateGolinkResponse | PlainMessage<CreateGolinkResponse> | undefined): boolean {
    return proto3.util.equals(CreateGolinkResponse, a, b);
  }
}

