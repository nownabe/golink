{"mappings":"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","sources":["<anon>","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/descriptor_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/message.js","node_modules/@bufbuild/protobuf/dist/cjs/proto2.js","node_modules/@bufbuild/protobuf/dist/cjs/private/proto-runtime.js","node_modules/@bufbuild/protobuf/dist/cjs/private/enum.js","node_modules/@bufbuild/protobuf/dist/cjs/private/assert.js","node_modules/@bufbuild/protobuf/dist/cjs/private/message-type.js","node_modules/@bufbuild/protobuf/dist/cjs/private/binary-format-proto2.js","node_modules/@bufbuild/protobuf/dist/cjs/field.js","node_modules/@bufbuild/protobuf/dist/cjs/private/binary-format-common.js","node_modules/@bufbuild/protobuf/dist/cjs/binary-encoding.js","node_modules/@bufbuild/protobuf/dist/cjs/google/varint.js","node_modules/@bufbuild/protobuf/dist/cjs/proto-int64.js","node_modules/process/browser.js","node_modules/@bufbuild/protobuf/dist/cjs/private/field-wrapper.js","node_modules/@bufbuild/protobuf/dist/cjs/private/scalars.js","node_modules/@bufbuild/protobuf/dist/cjs/private/util-common.js","node_modules/@bufbuild/protobuf/dist/cjs/private/field-list.js","node_modules/@bufbuild/protobuf/dist/cjs/private/field.js","node_modules/@bufbuild/protobuf/dist/cjs/private/names.js","node_modules/@bufbuild/protobuf/dist/cjs/private/json-format-proto2.js","node_modules/@bufbuild/protobuf/dist/cjs/private/json-format-common.js","node_modules/@bufbuild/protobuf/dist/cjs/proto-base64.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/timestamp_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/proto3.js","node_modules/@bufbuild/protobuf/dist/cjs/private/binary-format-proto3.js","node_modules/@bufbuild/protobuf/dist/cjs/private/json-format-proto3.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/duration_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/any_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/empty_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/field_mask_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/struct_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/wrappers_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/compiler/plugin_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/api_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/type_pb.js","node_modules/@bufbuild/protobuf/dist/cjs/google/protobuf/source_context_pb.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/headers.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/headers.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/headers.js","node_modules/@bufbuild/connect/dist/cjs/protocol/index.js","node_modules/@bufbuild/connect/dist/cjs/protocol/create-method-url.js","node_modules/@bufbuild/connect/dist/cjs/protocol/universal-handler-client.js","node_modules/@bufbuild/connect/dist/cjs/code.js","node_modules/@bufbuild/connect/dist/cjs/connect-error.js","node_modules/@bufbuild/protobuf/dist/cjs/index.js","node_modules/@bufbuild/protobuf/dist/cjs/proto-double.js","node_modules/@bufbuild/protobuf/dist/cjs/proto-delimited.js","node_modules/@bufbuild/protobuf/dist/cjs/codegen-info.js","node_modules/@bufbuild/protobuf/dist/cjs/private/reify-wkt.js","node_modules/@bufbuild/protobuf/dist/cjs/service-type.js","node_modules/@bufbuild/protobuf/dist/cjs/create-descriptor-set.js","node_modules/@bufbuild/protobuf/dist/cjs/create-registry.js","node_modules/@bufbuild/protobuf/dist/cjs/create-registry-from-desc.js","node_modules/@bufbuild/protobuf/dist/cjs/to-plain-message.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/code-string.js","node_modules/@bufbuild/connect/dist/cjs/protocol/async-iterable.js","node_modules/@bufbuild/connect/dist/cjs/protocol/envelope.js","node_modules/@bufbuild/connect/dist/cjs/protocol/compression.js","node_modules/@bufbuild/connect/dist/cjs/protocol/limit-io.js","node_modules/@bufbuild/connect/dist/cjs/protocol/signals.js","node_modules/@bufbuild/connect/dist/cjs/protocol/universal-fetch.js","node_modules/@bufbuild/connect/dist/cjs/protocol/run-call.js","node_modules/@bufbuild/connect/dist/cjs/protocol/serialization.js","node_modules/@bufbuild/connect/dist/cjs/protocol/content-type-matcher.js","node_modules/@bufbuild/connect/dist/cjs/protocol/invoke-implementation.js","node_modules/@bufbuild/connect/dist/cjs/protocol/universal.js","node_modules/@bufbuild/connect/dist/cjs/protocol/universal-handler.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/index.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/handler-factory.js","node_modules/@bufbuild/connect/dist/cjs/implementation.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/content-type.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/end-stream.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/error-json.js","node_modules/@bufbuild/connect/dist/cjs/http-headers.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/http-status.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/parse-timeout.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/query-params.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/trailer-mux.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/version.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/transport.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/request-header.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/validate-response.js","node_modules/@bufbuild/connect/dist/cjs/protocol-connect/get-request.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/index.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/handler-factory.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/trailer.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/content-type.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/parse-timeout.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/trailer-status.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/gen/status_pb.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/transport.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/validate-trailer.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/request-header.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc-web/validate-response.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/http-status.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/index.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/handler-factory.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/content-type.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/transport.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/request-header.js","node_modules/@bufbuild/connect/dist/cjs/protocol-grpc/validate-response.js","src/popup/popup.ts","node_modules/@bufbuild/connect/dist/cjs/index.js","node_modules/@bufbuild/connect/dist/cjs/callback-client.js","node_modules/@bufbuild/connect/dist/cjs/any-client.js","node_modules/@bufbuild/connect/dist/cjs/promise-client.js","node_modules/@bufbuild/connect/dist/cjs/router.js","node_modules/@bufbuild/connect/dist/cjs/cors.js","node_modules/@bufbuild/connect/dist/cjs/legacy-interceptor.js","node_modules/@bufbuild/connect/dist/cjs/router-transport.js","node_modules/@bufbuild/connect-web/dist/cjs/index.js","node_modules/@bufbuild/connect-web/dist/cjs/connect-transport.js","node_modules/@bufbuild/connect/protocol.js","node_modules/@bufbuild/connect/protocol-connect.js","node_modules/@bufbuild/connect-web/dist/cjs/assert-fetch-api.js","node_modules/@bufbuild/connect-web/dist/cjs/grpc-web-transport.js","node_modules/@bufbuild/connect/protocol-grpc-web.js","gen/golink/v1/golink_connect.ts","gen/golink/v1/golink_pb.ts"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\nparcelRequire.register(\"hi5gE\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.GeneratedCodeInfo_Annotation_Semantic = module.exports.GeneratedCodeInfo_Annotation = module.exports.GeneratedCodeInfo = module.exports.SourceCodeInfo_Location = module.exports.SourceCodeInfo = module.exports.UninterpretedOption_NamePart = module.exports.UninterpretedOption = module.exports.MethodOptions_IdempotencyLevel = module.exports.MethodOptions = module.exports.ServiceOptions = module.exports.EnumValueOptions = module.exports.EnumOptions = module.exports.OneofOptions = module.exports.FieldOptions_OptionTargetType = module.exports.FieldOptions_OptionRetention = module.exports.FieldOptions_JSType = module.exports.FieldOptions_CType = module.exports.FieldOptions = module.exports.MessageOptions = module.exports.FileOptions_OptimizeMode = module.exports.FileOptions = module.exports.MethodDescriptorProto = module.exports.ServiceDescriptorProto = module.exports.EnumValueDescriptorProto = module.exports.EnumDescriptorProto_EnumReservedRange = module.exports.EnumDescriptorProto = module.exports.OneofDescriptorProto = module.exports.FieldDescriptorProto_Label = module.exports.FieldDescriptorProto_Type = module.exports.FieldDescriptorProto = module.exports.ExtensionRangeOptions_Declaration = module.exports.ExtensionRangeOptions_VerificationState = module.exports.ExtensionRangeOptions = module.exports.DescriptorProto_ReservedRange = module.exports.DescriptorProto_ExtensionRange = module.exports.DescriptorProto = module.exports.FileDescriptorProto = module.exports.FileDescriptorSet = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $aYdaj = parcelRequire(\"aYdaj\");\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n *\n * @generated from message google.protobuf.FileDescriptorSet\n */ class $c968341c96f92984$var$FileDescriptorSet extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FileDescriptorProto file = 1;\n         */ this.file = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$FileDescriptorSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$FileDescriptorSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$FileDescriptorSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$FileDescriptorSet, a, b);\n    }\n}\nmodule.exports.FileDescriptorSet = $c968341c96f92984$var$FileDescriptorSet;\n$c968341c96f92984$var$FileDescriptorSet.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$FileDescriptorSet.typeName = \"google.protobuf.FileDescriptorSet\";\n$c968341c96f92984$var$FileDescriptorSet.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"file\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FileDescriptorProto,\n            repeated: true\n        }\n    ]);\n/**\n * Describes a complete .proto file.\n *\n * @generated from message google.protobuf.FileDescriptorProto\n */ class $c968341c96f92984$var$FileDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Names of files imported by this file.\n         *\n         * @generated from field: repeated string dependency = 3;\n         */ this.dependency = [];\n        /**\n         * Indexes of the public imported files in the dependency list above.\n         *\n         * @generated from field: repeated int32 public_dependency = 10;\n         */ this.publicDependency = [];\n        /**\n         * Indexes of the weak imported files in the dependency list.\n         * For Google-internal migration only. Do not use.\n         *\n         * @generated from field: repeated int32 weak_dependency = 11;\n         */ this.weakDependency = [];\n        /**\n         * All top-level definitions in this file.\n         *\n         * @generated from field: repeated google.protobuf.DescriptorProto message_type = 4;\n         */ this.messageType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 5;\n         */ this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.ServiceDescriptorProto service = 6;\n         */ this.service = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 7;\n         */ this.extension = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$FileDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$FileDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$FileDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$FileDescriptorProto, a, b);\n    }\n}\nmodule.exports.FileDescriptorProto = $c968341c96f92984$var$FileDescriptorProto;\n$c968341c96f92984$var$FileDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$FileDescriptorProto.typeName = \"google.protobuf.FileDescriptorProto\";\n$c968341c96f92984$var$FileDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"package\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"dependency\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        },\n        {\n            no: 10,\n            name: \"public_dependency\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            repeated: true\n        },\n        {\n            no: 11,\n            name: \"weak_dependency\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            repeated: true\n        },\n        {\n            no: 4,\n            name: \"message_type\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$DescriptorProto,\n            repeated: true\n        },\n        {\n            no: 5,\n            name: \"enum_type\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 6,\n            name: \"service\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$ServiceDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 7,\n            name: \"extension\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FieldDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 8,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FileOptions,\n            opt: true\n        },\n        {\n            no: 9,\n            name: \"source_code_info\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$SourceCodeInfo,\n            opt: true\n        },\n        {\n            no: 12,\n            name: \"syntax\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 13,\n            name: \"edition\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        }\n    ]);\n/**\n * Describes a message type.\n *\n * @generated from message google.protobuf.DescriptorProto\n */ class $c968341c96f92984$var$DescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto field = 2;\n         */ this.field = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 6;\n         */ this.extension = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto nested_type = 3;\n         */ this.nestedType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 4;\n         */ this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;\n         */ this.extensionRange = [];\n        /**\n         * @generated from field: repeated google.protobuf.OneofDescriptorProto oneof_decl = 8;\n         */ this.oneofDecl = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;\n         */ this.reservedRange = [];\n        /**\n         * Reserved field names, which may not be used by fields in the same message.\n         * A given name may only be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 10;\n         */ this.reservedName = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$DescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$DescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$DescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$DescriptorProto, a, b);\n    }\n}\nmodule.exports.DescriptorProto = $c968341c96f92984$var$DescriptorProto;\n$c968341c96f92984$var$DescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$DescriptorProto.typeName = \"google.protobuf.DescriptorProto\";\n$c968341c96f92984$var$DescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"field\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FieldDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 6,\n            name: \"extension\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FieldDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"nested_type\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$DescriptorProto,\n            repeated: true\n        },\n        {\n            no: 4,\n            name: \"enum_type\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 5,\n            name: \"extension_range\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$DescriptorProto_ExtensionRange,\n            repeated: true\n        },\n        {\n            no: 8,\n            name: \"oneof_decl\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$OneofDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 7,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$MessageOptions,\n            opt: true\n        },\n        {\n            no: 9,\n            name: \"reserved_range\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$DescriptorProto_ReservedRange,\n            repeated: true\n        },\n        {\n            no: 10,\n            name: \"reserved_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.DescriptorProto.ExtensionRange\n */ class $c968341c96f92984$var$DescriptorProto_ExtensionRange extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ExtensionRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ExtensionRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ExtensionRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$DescriptorProto_ExtensionRange, a, b);\n    }\n}\nmodule.exports.DescriptorProto_ExtensionRange = $c968341c96f92984$var$DescriptorProto_ExtensionRange;\n$c968341c96f92984$var$DescriptorProto_ExtensionRange.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$DescriptorProto_ExtensionRange.typeName = \"google.protobuf.DescriptorProto.ExtensionRange\";\n$c968341c96f92984$var$DescriptorProto_ExtensionRange.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"start\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"end\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$ExtensionRangeOptions,\n            opt: true\n        }\n    ]);\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n *\n * @generated from message google.protobuf.DescriptorProto.ReservedRange\n */ class $c968341c96f92984$var$DescriptorProto_ReservedRange extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$DescriptorProto_ReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$DescriptorProto_ReservedRange, a, b);\n    }\n}\nmodule.exports.DescriptorProto_ReservedRange = $c968341c96f92984$var$DescriptorProto_ReservedRange;\n$c968341c96f92984$var$DescriptorProto_ReservedRange.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$DescriptorProto_ReservedRange.typeName = \"google.protobuf.DescriptorProto.ReservedRange\";\n$c968341c96f92984$var$DescriptorProto_ReservedRange.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"start\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"end\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions\n */ class $c968341c96f92984$var$ExtensionRangeOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        /**\n         * go/protobuf-stripping-extension-declarations\n         * Like Metadata, but we use a repeated field to hold all extension\n         * declarations. This should avoid the size increases of transforming a large\n         * extension range into small ranges in generated binaries.\n         *\n         * @generated from field: repeated google.protobuf.ExtensionRangeOptions.Declaration declaration = 2;\n         */ this.declaration = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$ExtensionRangeOptions, a, b);\n    }\n}\nmodule.exports.ExtensionRangeOptions = $c968341c96f92984$var$ExtensionRangeOptions;\n$c968341c96f92984$var$ExtensionRangeOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$ExtensionRangeOptions.typeName = \"google.protobuf.ExtensionRangeOptions\";\n$c968341c96f92984$var$ExtensionRangeOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        },\n        {\n            no: 2,\n            name: \"declaration\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$ExtensionRangeOptions_Declaration,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"verification\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$ExtensionRangeOptions_VerificationState),\n            opt: true,\n            default: $c968341c96f92984$var$ExtensionRangeOptions_VerificationState.UNVERIFIED\n        }\n    ]);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */ var $c968341c96f92984$var$ExtensionRangeOptions_VerificationState;\n(function(ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */ ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */ ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})($c968341c96f92984$var$ExtensionRangeOptions_VerificationState || (module.exports.ExtensionRangeOptions_VerificationState = $c968341c96f92984$var$ExtensionRangeOptions_VerificationState = {}));\n// Retrieve enum metadata with: proto2.getEnumType(ExtensionRangeOptions_VerificationState)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$ExtensionRangeOptions_VerificationState, \"google.protobuf.ExtensionRangeOptions.VerificationState\", [\n    {\n        no: 0,\n        name: \"DECLARATION\"\n    },\n    {\n        no: 1,\n        name: \"UNVERIFIED\"\n    }\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions.Declaration\n */ class $c968341c96f92984$var$ExtensionRangeOptions_Declaration extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions_Declaration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions_Declaration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$ExtensionRangeOptions_Declaration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$ExtensionRangeOptions_Declaration, a, b);\n    }\n}\nmodule.exports.ExtensionRangeOptions_Declaration = $c968341c96f92984$var$ExtensionRangeOptions_Declaration;\n$c968341c96f92984$var$ExtensionRangeOptions_Declaration.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$ExtensionRangeOptions_Declaration.typeName = \"google.protobuf.ExtensionRangeOptions.Declaration\";\n$c968341c96f92984$var$ExtensionRangeOptions_Declaration.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"number\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"full_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"type\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"is_repeated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 5,\n            name: \"reserved\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 6,\n            name: \"repeated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        }\n    ]);\n/**\n * Describes a field within a message.\n *\n * @generated from message google.protobuf.FieldDescriptorProto\n */ class $c968341c96f92984$var$FieldDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$FieldDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$FieldDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$FieldDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$FieldDescriptorProto, a, b);\n    }\n}\nmodule.exports.FieldDescriptorProto = $c968341c96f92984$var$FieldDescriptorProto;\n$c968341c96f92984$var$FieldDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$FieldDescriptorProto.typeName = \"google.protobuf.FieldDescriptorProto\";\n$c968341c96f92984$var$FieldDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"number\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"label\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldDescriptorProto_Label),\n            opt: true\n        },\n        {\n            no: 5,\n            name: \"type\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldDescriptorProto_Type),\n            opt: true\n        },\n        {\n            no: 6,\n            name: \"type_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"extendee\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 7,\n            name: \"default_value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 9,\n            name: \"oneof_index\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 10,\n            name: \"json_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 8,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$FieldOptions,\n            opt: true\n        },\n        {\n            no: 17,\n            name: \"proto3_optional\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        }\n    ]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */ var $c968341c96f92984$var$FieldDescriptorProto_Type;\n(function(FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported in proto3. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */ FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})($c968341c96f92984$var$FieldDescriptorProto_Type || (module.exports.FieldDescriptorProto_Type = $c968341c96f92984$var$FieldDescriptorProto_Type = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Type)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldDescriptorProto_Type, \"google.protobuf.FieldDescriptorProto.Type\", [\n    {\n        no: 1,\n        name: \"TYPE_DOUBLE\"\n    },\n    {\n        no: 2,\n        name: \"TYPE_FLOAT\"\n    },\n    {\n        no: 3,\n        name: \"TYPE_INT64\"\n    },\n    {\n        no: 4,\n        name: \"TYPE_UINT64\"\n    },\n    {\n        no: 5,\n        name: \"TYPE_INT32\"\n    },\n    {\n        no: 6,\n        name: \"TYPE_FIXED64\"\n    },\n    {\n        no: 7,\n        name: \"TYPE_FIXED32\"\n    },\n    {\n        no: 8,\n        name: \"TYPE_BOOL\"\n    },\n    {\n        no: 9,\n        name: \"TYPE_STRING\"\n    },\n    {\n        no: 10,\n        name: \"TYPE_GROUP\"\n    },\n    {\n        no: 11,\n        name: \"TYPE_MESSAGE\"\n    },\n    {\n        no: 12,\n        name: \"TYPE_BYTES\"\n    },\n    {\n        no: 13,\n        name: \"TYPE_UINT32\"\n    },\n    {\n        no: 14,\n        name: \"TYPE_ENUM\"\n    },\n    {\n        no: 15,\n        name: \"TYPE_SFIXED32\"\n    },\n    {\n        no: 16,\n        name: \"TYPE_SFIXED64\"\n    },\n    {\n        no: 17,\n        name: \"TYPE_SINT32\"\n    },\n    {\n        no: 18,\n        name: \"TYPE_SINT64\"\n    }\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */ var $c968341c96f92984$var$FieldDescriptorProto_Label;\n(function(FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */ FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */ FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */ FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n})($c968341c96f92984$var$FieldDescriptorProto_Label || (module.exports.FieldDescriptorProto_Label = $c968341c96f92984$var$FieldDescriptorProto_Label = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Label)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldDescriptorProto_Label, \"google.protobuf.FieldDescriptorProto.Label\", [\n    {\n        no: 1,\n        name: \"LABEL_OPTIONAL\"\n    },\n    {\n        no: 2,\n        name: \"LABEL_REQUIRED\"\n    },\n    {\n        no: 3,\n        name: \"LABEL_REPEATED\"\n    }\n]);\n/**\n * Describes a oneof.\n *\n * @generated from message google.protobuf.OneofDescriptorProto\n */ class $c968341c96f92984$var$OneofDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$OneofDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$OneofDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$OneofDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$OneofDescriptorProto, a, b);\n    }\n}\nmodule.exports.OneofDescriptorProto = $c968341c96f92984$var$OneofDescriptorProto;\n$c968341c96f92984$var$OneofDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$OneofDescriptorProto.typeName = \"google.protobuf.OneofDescriptorProto\";\n$c968341c96f92984$var$OneofDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$OneofOptions,\n            opt: true\n        }\n    ]);\n/**\n * Describes an enum type.\n *\n * @generated from message google.protobuf.EnumDescriptorProto\n */ class $c968341c96f92984$var$EnumDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.EnumValueDescriptorProto value = 2;\n         */ this.value = [];\n        /**\n         * Range of reserved numeric values. Reserved numeric values may not be used\n         * by enum values in the same enum declaration. Reserved ranges may not\n         * overlap.\n         *\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;\n         */ this.reservedRange = [];\n        /**\n         * Reserved enum value names, which may not be reused. A given name may only\n         * be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 5;\n         */ this.reservedName = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$EnumDescriptorProto, a, b);\n    }\n}\nmodule.exports.EnumDescriptorProto = $c968341c96f92984$var$EnumDescriptorProto;\n$c968341c96f92984$var$EnumDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$EnumDescriptorProto.typeName = \"google.protobuf.EnumDescriptorProto\";\n$c968341c96f92984$var$EnumDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"value\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumValueDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumOptions,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"reserved_range\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange,\n            repeated: true\n        },\n        {\n            no: 5,\n            name: \"reserved_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        }\n    ]);\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n *\n * @generated from message google.protobuf.EnumDescriptorProto.EnumReservedRange\n */ class $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange, a, b);\n    }\n}\nmodule.exports.EnumDescriptorProto_EnumReservedRange = $c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange;\n$c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange.typeName = \"google.protobuf.EnumDescriptorProto.EnumReservedRange\";\n$c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"start\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"end\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        }\n    ]);\n/**\n * Describes a value within an enum.\n *\n * @generated from message google.protobuf.EnumValueDescriptorProto\n */ class $c968341c96f92984$var$EnumValueDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$EnumValueDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$EnumValueDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$EnumValueDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$EnumValueDescriptorProto, a, b);\n    }\n}\nmodule.exports.EnumValueDescriptorProto = $c968341c96f92984$var$EnumValueDescriptorProto;\n$c968341c96f92984$var$EnumValueDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$EnumValueDescriptorProto.typeName = \"google.protobuf.EnumValueDescriptorProto\";\n$c968341c96f92984$var$EnumValueDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"number\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$EnumValueOptions,\n            opt: true\n        }\n    ]);\n/**\n * Describes a service.\n *\n * @generated from message google.protobuf.ServiceDescriptorProto\n */ class $c968341c96f92984$var$ServiceDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.MethodDescriptorProto method = 2;\n         */ this.method = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$ServiceDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$ServiceDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$ServiceDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$ServiceDescriptorProto, a, b);\n    }\n}\nmodule.exports.ServiceDescriptorProto = $c968341c96f92984$var$ServiceDescriptorProto;\n$c968341c96f92984$var$ServiceDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$ServiceDescriptorProto.typeName = \"google.protobuf.ServiceDescriptorProto\";\n$c968341c96f92984$var$ServiceDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"method\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$MethodDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$ServiceOptions,\n            opt: true\n        }\n    ]);\n/**\n * Describes a method of a service.\n *\n * @generated from message google.protobuf.MethodDescriptorProto\n */ class $c968341c96f92984$var$MethodDescriptorProto extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$MethodDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$MethodDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$MethodDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$MethodDescriptorProto, a, b);\n    }\n}\nmodule.exports.MethodDescriptorProto = $c968341c96f92984$var$MethodDescriptorProto;\n$c968341c96f92984$var$MethodDescriptorProto.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$MethodDescriptorProto.typeName = \"google.protobuf.MethodDescriptorProto\";\n$c968341c96f92984$var$MethodDescriptorProto.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"input_type\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"output_type\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"options\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$MethodOptions,\n            opt: true\n        },\n        {\n            no: 5,\n            name: \"client_streaming\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 6,\n            name: \"server_streaming\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        }\n    ]);\n/**\n * @generated from message google.protobuf.FileOptions\n */ class $c968341c96f92984$var$FileOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here.\n         * See the documentation for the \"Options\" section above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$FileOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$FileOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$FileOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$FileOptions, a, b);\n    }\n}\nmodule.exports.FileOptions = $c968341c96f92984$var$FileOptions;\n$c968341c96f92984$var$FileOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$FileOptions.typeName = \"google.protobuf.FileOptions\";\n$c968341c96f92984$var$FileOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"java_package\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 8,\n            name: \"java_outer_classname\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 10,\n            name: \"java_multiple_files\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 20,\n            name: \"java_generate_equals_and_hash\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 27,\n            name: \"java_string_check_utf8\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 9,\n            name: \"optimize_for\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FileOptions_OptimizeMode),\n            opt: true,\n            default: $c968341c96f92984$var$FileOptions_OptimizeMode.SPEED\n        },\n        {\n            no: 11,\n            name: \"go_package\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 16,\n            name: \"cc_generic_services\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 17,\n            name: \"java_generic_services\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 18,\n            name: \"py_generic_services\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 42,\n            name: \"php_generic_services\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 23,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 31,\n            name: \"cc_enable_arenas\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: true\n        },\n        {\n            no: 36,\n            name: \"objc_class_prefix\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 37,\n            name: \"csharp_namespace\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 39,\n            name: \"swift_prefix\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 40,\n            name: \"php_class_prefix\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 41,\n            name: \"php_namespace\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 44,\n            name: \"php_metadata_namespace\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 45,\n            name: \"ruby_package\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */ var $c968341c96f92984$var$FileOptions_OptimizeMode;\n(function(FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */ FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */ FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */ FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})($c968341c96f92984$var$FileOptions_OptimizeMode || (module.exports.FileOptions_OptimizeMode = $c968341c96f92984$var$FileOptions_OptimizeMode = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FileOptions_OptimizeMode)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FileOptions_OptimizeMode, \"google.protobuf.FileOptions.OptimizeMode\", [\n    {\n        no: 1,\n        name: \"SPEED\"\n    },\n    {\n        no: 2,\n        name: \"CODE_SIZE\"\n    },\n    {\n        no: 3,\n        name: \"LITE_RUNTIME\"\n    }\n]);\n/**\n * @generated from message google.protobuf.MessageOptions\n */ class $c968341c96f92984$var$MessageOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$MessageOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$MessageOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$MessageOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$MessageOptions, a, b);\n    }\n}\nmodule.exports.MessageOptions = $c968341c96f92984$var$MessageOptions;\n$c968341c96f92984$var$MessageOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$MessageOptions.typeName = \"google.protobuf.MessageOptions\";\n$c968341c96f92984$var$MessageOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"message_set_wire_format\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 2,\n            name: \"no_standard_descriptor_accessor\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 3,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 7,\n            name: \"map_entry\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 11,\n            name: \"deprecated_legacy_json_field_conflicts\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.FieldOptions\n */ class $c968341c96f92984$var$FieldOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.OptionTargetType targets = 19;\n         */ this.targets = [];\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$FieldOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$FieldOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$FieldOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$FieldOptions, a, b);\n    }\n}\nmodule.exports.FieldOptions = $c968341c96f92984$var$FieldOptions;\n$c968341c96f92984$var$FieldOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$FieldOptions.typeName = \"google.protobuf.FieldOptions\";\n$c968341c96f92984$var$FieldOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"ctype\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldOptions_CType),\n            opt: true,\n            default: $c968341c96f92984$var$FieldOptions_CType.STRING\n        },\n        {\n            no: 2,\n            name: \"packed\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 6,\n            name: \"jstype\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldOptions_JSType),\n            opt: true,\n            default: $c968341c96f92984$var$FieldOptions_JSType.JS_NORMAL\n        },\n        {\n            no: 5,\n            name: \"lazy\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 15,\n            name: \"unverified_lazy\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 3,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 10,\n            name: \"weak\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 16,\n            name: \"debug_redact\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 17,\n            name: \"retention\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldOptions_OptionRetention),\n            opt: true\n        },\n        {\n            no: 18,\n            name: \"target\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldOptions_OptionTargetType),\n            opt: true\n        },\n        {\n            no: 19,\n            name: \"targets\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$FieldOptions_OptionTargetType),\n            repeated: true\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */ var $c968341c96f92984$var$FieldOptions_CType;\n(function(FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */ FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */ FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */ FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})($c968341c96f92984$var$FieldOptions_CType || (module.exports.FieldOptions_CType = $c968341c96f92984$var$FieldOptions_CType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_CType)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldOptions_CType, \"google.protobuf.FieldOptions.CType\", [\n    {\n        no: 0,\n        name: \"STRING\"\n    },\n    {\n        no: 1,\n        name: \"CORD\"\n    },\n    {\n        no: 2,\n        name: \"STRING_PIECE\"\n    }\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */ var $c968341c96f92984$var$FieldOptions_JSType;\n(function(FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */ FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */ FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */ FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})($c968341c96f92984$var$FieldOptions_JSType || (module.exports.FieldOptions_JSType = $c968341c96f92984$var$FieldOptions_JSType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_JSType)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldOptions_JSType, \"google.protobuf.FieldOptions.JSType\", [\n    {\n        no: 0,\n        name: \"JS_NORMAL\"\n    },\n    {\n        no: 1,\n        name: \"JS_STRING\"\n    },\n    {\n        no: 2,\n        name: \"JS_NUMBER\"\n    }\n]);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n * Note: as of January 2023, support for this is in progress and does not yet\n * have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */ var $c968341c96f92984$var$FieldOptions_OptionRetention;\n(function(FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */ FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */ FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */ FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})($c968341c96f92984$var$FieldOptions_OptionRetention || (module.exports.FieldOptions_OptionRetention = $c968341c96f92984$var$FieldOptions_OptionRetention = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionRetention)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldOptions_OptionRetention, \"google.protobuf.FieldOptions.OptionRetention\", [\n    {\n        no: 0,\n        name: \"RETENTION_UNKNOWN\"\n    },\n    {\n        no: 1,\n        name: \"RETENTION_RUNTIME\"\n    },\n    {\n        no: 2,\n        name: \"RETENTION_SOURCE\"\n    }\n]);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity. Note: as of January 2023, support for this is\n * in progress and does not yet have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */ var $c968341c96f92984$var$FieldOptions_OptionTargetType;\n(function(FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */ FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})($c968341c96f92984$var$FieldOptions_OptionTargetType || (module.exports.FieldOptions_OptionTargetType = $c968341c96f92984$var$FieldOptions_OptionTargetType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionTargetType)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$FieldOptions_OptionTargetType, \"google.protobuf.FieldOptions.OptionTargetType\", [\n    {\n        no: 0,\n        name: \"TARGET_TYPE_UNKNOWN\"\n    },\n    {\n        no: 1,\n        name: \"TARGET_TYPE_FILE\"\n    },\n    {\n        no: 2,\n        name: \"TARGET_TYPE_EXTENSION_RANGE\"\n    },\n    {\n        no: 3,\n        name: \"TARGET_TYPE_MESSAGE\"\n    },\n    {\n        no: 4,\n        name: \"TARGET_TYPE_FIELD\"\n    },\n    {\n        no: 5,\n        name: \"TARGET_TYPE_ONEOF\"\n    },\n    {\n        no: 6,\n        name: \"TARGET_TYPE_ENUM\"\n    },\n    {\n        no: 7,\n        name: \"TARGET_TYPE_ENUM_ENTRY\"\n    },\n    {\n        no: 8,\n        name: \"TARGET_TYPE_SERVICE\"\n    },\n    {\n        no: 9,\n        name: \"TARGET_TYPE_METHOD\"\n    }\n]);\n/**\n * @generated from message google.protobuf.OneofOptions\n */ class $c968341c96f92984$var$OneofOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$OneofOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$OneofOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$OneofOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$OneofOptions, a, b);\n    }\n}\nmodule.exports.OneofOptions = $c968341c96f92984$var$OneofOptions;\n$c968341c96f92984$var$OneofOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$OneofOptions.typeName = \"google.protobuf.OneofOptions\";\n$c968341c96f92984$var$OneofOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.EnumOptions\n */ class $c968341c96f92984$var$EnumOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$EnumOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$EnumOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$EnumOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$EnumOptions, a, b);\n    }\n}\nmodule.exports.EnumOptions = $c968341c96f92984$var$EnumOptions;\n$c968341c96f92984$var$EnumOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$EnumOptions.typeName = \"google.protobuf.EnumOptions\";\n$c968341c96f92984$var$EnumOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 2,\n            name: \"allow_alias\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 6,\n            name: \"deprecated_legacy_json_field_conflicts\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.EnumValueOptions\n */ class $c968341c96f92984$var$EnumValueOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$EnumValueOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$EnumValueOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$EnumValueOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$EnumValueOptions, a, b);\n    }\n}\nmodule.exports.EnumValueOptions = $c968341c96f92984$var$EnumValueOptions;\n$c968341c96f92984$var$EnumValueOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$EnumValueOptions.typeName = \"google.protobuf.EnumValueOptions\";\n$c968341c96f92984$var$EnumValueOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.ServiceOptions\n */ class $c968341c96f92984$var$ServiceOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$ServiceOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$ServiceOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$ServiceOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$ServiceOptions, a, b);\n    }\n}\nmodule.exports.ServiceOptions = $c968341c96f92984$var$ServiceOptions;\n$c968341c96f92984$var$ServiceOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$ServiceOptions.typeName = \"google.protobuf.ServiceOptions\";\n$c968341c96f92984$var$ServiceOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 33,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.MethodOptions\n */ class $c968341c96f92984$var$MethodOptions extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */ this.uninterpretedOption = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$MethodOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$MethodOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$MethodOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$MethodOptions, a, b);\n    }\n}\nmodule.exports.MethodOptions = $c968341c96f92984$var$MethodOptions;\n$c968341c96f92984$var$MethodOptions.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$MethodOptions.typeName = \"google.protobuf.MethodOptions\";\n$c968341c96f92984$var$MethodOptions.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 33,\n            name: \"deprecated\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            opt: true,\n            default: false\n        },\n        {\n            no: 34,\n            name: \"idempotency_level\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$MethodOptions_IdempotencyLevel),\n            opt: true,\n            default: $c968341c96f92984$var$MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN\n        },\n        {\n            no: 999,\n            name: \"uninterpreted_option\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption,\n            repeated: true\n        }\n    ]);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */ var $c968341c96f92984$var$MethodOptions_IdempotencyLevel;\n(function(MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */ MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */ MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */ MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})($c968341c96f92984$var$MethodOptions_IdempotencyLevel || (module.exports.MethodOptions_IdempotencyLevel = $c968341c96f92984$var$MethodOptions_IdempotencyLevel = {}));\n// Retrieve enum metadata with: proto2.getEnumType(MethodOptions_IdempotencyLevel)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$MethodOptions_IdempotencyLevel, \"google.protobuf.MethodOptions.IdempotencyLevel\", [\n    {\n        no: 0,\n        name: \"IDEMPOTENCY_UNKNOWN\"\n    },\n    {\n        no: 1,\n        name: \"NO_SIDE_EFFECTS\"\n    },\n    {\n        no: 2,\n        name: \"IDEMPOTENT\"\n    }\n]);\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n *\n * @generated from message google.protobuf.UninterpretedOption\n */ class $c968341c96f92984$var$UninterpretedOption extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.UninterpretedOption.NamePart name = 2;\n         */ this.name = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$UninterpretedOption().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$UninterpretedOption().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$UninterpretedOption().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$UninterpretedOption, a, b);\n    }\n}\nmodule.exports.UninterpretedOption = $c968341c96f92984$var$UninterpretedOption;\n$c968341c96f92984$var$UninterpretedOption.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$UninterpretedOption.typeName = \"google.protobuf.UninterpretedOption\";\n$c968341c96f92984$var$UninterpretedOption.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 2,\n            name: \"name\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$UninterpretedOption_NamePart,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"identifier_value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"positive_int_value\",\n            kind: \"scalar\",\n            T: 4 /* ScalarType.UINT64 */ ,\n            opt: true\n        },\n        {\n            no: 5,\n            name: \"negative_int_value\",\n            kind: \"scalar\",\n            T: 3 /* ScalarType.INT64 */ ,\n            opt: true\n        },\n        {\n            no: 6,\n            name: \"double_value\",\n            kind: \"scalar\",\n            T: 1 /* ScalarType.DOUBLE */ ,\n            opt: true\n        },\n        {\n            no: 7,\n            name: \"string_value\",\n            kind: \"scalar\",\n            T: 12 /* ScalarType.BYTES */ ,\n            opt: true\n        },\n        {\n            no: 8,\n            name: \"aggregate_value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        }\n    ]);\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n * \"foo.(bar.baz).moo\".\n *\n * @generated from message google.protobuf.UninterpretedOption.NamePart\n */ class $c968341c96f92984$var$UninterpretedOption_NamePart extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$UninterpretedOption_NamePart().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$UninterpretedOption_NamePart().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$UninterpretedOption_NamePart().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$UninterpretedOption_NamePart, a, b);\n    }\n}\nmodule.exports.UninterpretedOption_NamePart = $c968341c96f92984$var$UninterpretedOption_NamePart;\n$c968341c96f92984$var$UninterpretedOption_NamePart.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$UninterpretedOption_NamePart.typeName = \"google.protobuf.UninterpretedOption.NamePart\";\n$c968341c96f92984$var$UninterpretedOption_NamePart.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name_part\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"is_extension\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ \n        }\n    ]);\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n *\n * @generated from message google.protobuf.SourceCodeInfo\n */ class $c968341c96f92984$var$SourceCodeInfo extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * A Location identifies a piece of source code in a .proto file which\n         * corresponds to a particular definition.  This information is intended\n         * to be useful to IDEs, code indexers, documentation generators, and similar\n         * tools.\n         *\n         * For example, say we have a file like:\n         *   message Foo {\n         *     optional string foo = 1;\n         *   }\n         * Let's look at just the field definition:\n         *   optional string foo = 1;\n         *   ^       ^^     ^^  ^  ^^^\n         *   a       bc     de  f  ghi\n         * We have the following locations:\n         *   span   path               represents\n         *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n         *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n         *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n         *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n         *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n         *\n         * Notes:\n         * - A location may refer to a repeated field itself (i.e. not to any\n         *   particular index within it).  This is used whenever a set of elements are\n         *   logically enclosed in a single code segment.  For example, an entire\n         *   extend block (possibly containing multiple extension definitions) will\n         *   have an outer location whose path refers to the \"extensions\" repeated\n         *   field without an index.\n         * - Multiple locations may have the same path.  This happens when a single\n         *   logical declaration is spread out across multiple places.  The most\n         *   obvious example is the \"extend\" block again -- there may be multiple\n         *   extend blocks in the same scope, each of which will have the same path.\n         * - A location's span is not always a subset of its parent's span.  For\n         *   example, the \"extendee\" of an extension declaration appears at the\n         *   beginning of the \"extend\" block and is shared by all extensions within\n         *   the block.\n         * - Just because a location's span is a subset of some other location's span\n         *   does not mean that it is a descendant.  For example, a \"group\" defines\n         *   both a type and a field in a single declaration.  Thus, the locations\n         *   corresponding to the type and field and their components will overlap.\n         * - Code which tries to interpret locations should probably be designed to\n         *   ignore those that it doesn't understand, as more types of locations could\n         *   be recorded in the future.\n         *\n         * @generated from field: repeated google.protobuf.SourceCodeInfo.Location location = 1;\n         */ this.location = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$SourceCodeInfo, a, b);\n    }\n}\nmodule.exports.SourceCodeInfo = $c968341c96f92984$var$SourceCodeInfo;\n$c968341c96f92984$var$SourceCodeInfo.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$SourceCodeInfo.typeName = \"google.protobuf.SourceCodeInfo\";\n$c968341c96f92984$var$SourceCodeInfo.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"location\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$SourceCodeInfo_Location,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.SourceCodeInfo.Location\n */ class $c968341c96f92984$var$SourceCodeInfo_Location extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Identifies which part of the FileDescriptorProto was defined at this\n         * location.\n         *\n         * Each element is a field number or an index.  They form a path from\n         * the root FileDescriptorProto to the place where the definition occurs.\n         * For example, this path:\n         *   [ 4, 3, 2, 7, 1 ]\n         * refers to:\n         *   file.message_type(3)  // 4, 3\n         *       .field(7)         // 2, 7\n         *       .name()           // 1\n         * This is because FileDescriptorProto.message_type has field number 4:\n         *   repeated DescriptorProto message_type = 4;\n         * and DescriptorProto.field has field number 2:\n         *   repeated FieldDescriptorProto field = 2;\n         * and FieldDescriptorProto.name has field number 1:\n         *   optional string name = 1;\n         *\n         * Thus, the above path gives the location of a field name.  If we removed\n         * the last element:\n         *   [ 4, 3, 2, 7 ]\n         * this path refers to the whole field declaration (from the beginning\n         * of the label to the terminating semicolon).\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */ this.path = [];\n        /**\n         * Always has exactly three or four elements: start line, start column,\n         * end line (optional, otherwise assumed same as start line), end column.\n         * These are packed into a single field for efficiency.  Note that line\n         * and column numbers are zero-based -- typically you will want to add\n         * 1 to each before displaying to a user.\n         *\n         * @generated from field: repeated int32 span = 2 [packed = true];\n         */ this.span = [];\n        /**\n         * @generated from field: repeated string leading_detached_comments = 6;\n         */ this.leadingDetachedComments = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo_Location().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo_Location().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$SourceCodeInfo_Location().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$SourceCodeInfo_Location, a, b);\n    }\n}\nmodule.exports.SourceCodeInfo_Location = $c968341c96f92984$var$SourceCodeInfo_Location;\n$c968341c96f92984$var$SourceCodeInfo_Location.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$SourceCodeInfo_Location.typeName = \"google.protobuf.SourceCodeInfo.Location\";\n$c968341c96f92984$var$SourceCodeInfo_Location.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"path\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            repeated: true,\n            packed: true\n        },\n        {\n            no: 2,\n            name: \"span\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            repeated: true,\n            packed: true\n        },\n        {\n            no: 3,\n            name: \"leading_comments\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"trailing_comments\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 6,\n            name: \"leading_detached_comments\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        }\n    ]);\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n *\n * @generated from message google.protobuf.GeneratedCodeInfo\n */ class $c968341c96f92984$var$GeneratedCodeInfo extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * An Annotation connects some span of text in generated code to an element\n         * of its generating .proto file.\n         *\n         * @generated from field: repeated google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;\n         */ this.annotation = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$GeneratedCodeInfo, a, b);\n    }\n}\nmodule.exports.GeneratedCodeInfo = $c968341c96f92984$var$GeneratedCodeInfo;\n$c968341c96f92984$var$GeneratedCodeInfo.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$GeneratedCodeInfo.typeName = \"google.protobuf.GeneratedCodeInfo\";\n$c968341c96f92984$var$GeneratedCodeInfo.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"annotation\",\n            kind: \"message\",\n            T: $c968341c96f92984$var$GeneratedCodeInfo_Annotation,\n            repeated: true\n        }\n    ]);\n/**\n * @generated from message google.protobuf.GeneratedCodeInfo.Annotation\n */ class $c968341c96f92984$var$GeneratedCodeInfo_Annotation extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Identifies the element in the original source .proto file. This field\n         * is formatted the same as SourceCodeInfo.Location.path.\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */ this.path = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo_Annotation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo_Annotation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $c968341c96f92984$var$GeneratedCodeInfo_Annotation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($c968341c96f92984$var$GeneratedCodeInfo_Annotation, a, b);\n    }\n}\nmodule.exports.GeneratedCodeInfo_Annotation = $c968341c96f92984$var$GeneratedCodeInfo_Annotation;\n$c968341c96f92984$var$GeneratedCodeInfo_Annotation.runtime = $aYdaj.proto2;\n$c968341c96f92984$var$GeneratedCodeInfo_Annotation.typeName = \"google.protobuf.GeneratedCodeInfo.Annotation\";\n$c968341c96f92984$var$GeneratedCodeInfo_Annotation.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"path\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            repeated: true,\n            packed: true\n        },\n        {\n            no: 2,\n            name: \"source_file\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"begin\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"end\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 5,\n            name: \"semantic\",\n            kind: \"enum\",\n            T: $aYdaj.proto2.getEnumType($c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic),\n            opt: true\n        }\n    ]);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */ var $c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic;\n(function(GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */ GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */ GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */ GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})($c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic || (module.exports.GeneratedCodeInfo_Annotation_Semantic = $c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic = {}));\n// Retrieve enum metadata with: proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic)\n$aYdaj.proto2.util.setEnumType($c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic, \"google.protobuf.GeneratedCodeInfo.Annotation.Semantic\", [\n    {\n        no: 0,\n        name: \"NONE\"\n    },\n    {\n        no: 1,\n        name: \"SET\"\n    },\n    {\n        no: 2,\n        name: \"ALIAS\"\n    }\n]);\n\n});\nparcelRequire.register(\"daMMc\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Message = void 0;\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */ class $99720b8711cb5cb4$var$Message {\n    /**\n     * Compare with a message of the same type.\n     */ equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */ clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */ fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */ fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */ fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        } catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */ toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */ toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */ toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */ toJSON() {\n        return this.toJson({\n            emitDefaultValues: true\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */ getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\nmodule.exports.Message = $99720b8711cb5cb4$var$Message;\n\n});\n\nparcelRequire.register(\"aYdaj\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.proto2 = void 0;\n\nvar $lZ0Gt = parcelRequire(\"lZ0Gt\");\n\nvar $dNiWp = parcelRequire(\"dNiWp\");\n\nvar $4kBo5 = parcelRequire(\"4kBo5\");\n\nvar $hbbeO = parcelRequire(\"hbbeO\");\n\nvar $gamDJ = parcelRequire(\"gamDJ\");\n\nvar $hxoip = parcelRequire(\"hxoip\");\n\nvar $daMbB = parcelRequire(\"daMbB\");\n/**\n * Provides functionality for messages defined with the proto2 syntax.\n */ module.exports.proto2 = (0, $lZ0Gt.makeProtoRuntime)(\"proto2\", (0, $daMbB.makeJsonFormatProto2)(), (0, $dNiWp.makeBinaryFormatProto2)(), Object.assign(Object.assign({}, (0, $4kBo5.makeUtilCommon)()), {\n    newFieldList (fields) {\n        return new $hbbeO.InternalFieldList(fields, $7fc9b85bccb8cdbf$var$normalizeFieldInfosProto2);\n    },\n    initFields (target) {\n        for (const member of target.getType().fields.byMember()){\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch(member.kind){\n                case \"oneof\":\n                    t[name] = {\n                        case: undefined\n                    };\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                case \"enum\":\n                case \"message\":\n                    break;\n            }\n        }\n    }\n}));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */ function $7fc9b85bccb8cdbf$var$normalizeFieldInfosProto2(fieldInfos) {\n    var _a, _b, _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\" ? fieldInfos() : fieldInfos){\n        const f = field;\n        f.localName = (0, $hxoip.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0, $hxoip.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // In contrast to proto3, repeated fields are unpacked except when explicitly specified.\n        f.packed = (_c = field.packed) !== null && _c !== void 0 ? _c : false;\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) o = new $gamDJ.InternalOneofInfo(ooname);\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n\n});\nparcelRequire.register(\"lZ0Gt\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeProtoRuntime = void 0;\n\nvar $jlOnx = parcelRequire(\"jlOnx\");\n\nvar $dNCE8 = parcelRequire(\"dNCE8\");\nfunction $0421499a0b2a69ae$var$makeProtoRuntime(syntax, json, bin, util) {\n    return {\n        syntax: syntax,\n        json: json,\n        bin: bin,\n        util: util,\n        makeMessageType (typeName, fields, opt) {\n            return (0, $dNCE8.makeMessageType)(this, typeName, fields, opt);\n        },\n        makeEnum: $jlOnx.makeEnum,\n        makeEnumType: $jlOnx.makeEnumType,\n        getEnumType: $jlOnx.getEnumType\n    };\n}\nmodule.exports.makeProtoRuntime = $0421499a0b2a69ae$var$makeProtoRuntime;\n\n});\nparcelRequire.register(\"jlOnx\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeEnum = module.exports.makeEnumType = module.exports.setEnumType = module.exports.getEnumType = void 0;\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\nconst $e1670e9cbe146218$var$enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */ function $e1670e9cbe146218$var$getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[$e1670e9cbe146218$var$enumTypeSymbol];\n    (0, $2RXcp.assert)(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\nmodule.exports.getEnumType = $e1670e9cbe146218$var$getEnumType;\n/**\n * Sets reflection information on a generated enum.\n */ function $e1670e9cbe146218$var$setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[$e1670e9cbe146218$var$enumTypeSymbol] = $e1670e9cbe146218$var$makeEnumType(typeName, values.map((v)=>({\n            no: v.no,\n            name: v.name,\n            localName: enumObject[v.no]\n        })), opt);\n}\nmodule.exports.setEnumType = $e1670e9cbe146218$var$setEnumType;\n/**\n * Create a new EnumType with the given values.\n */ function $e1670e9cbe146218$var$makeEnumType(typeName, values, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values){\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = $e1670e9cbe146218$var$normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName: typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName (name) {\n            return names[name];\n        },\n        findNumber (no) {\n            return numbers[no];\n        }\n    };\n}\nmodule.exports.makeEnumType = $e1670e9cbe146218$var$makeEnumType;\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */ function $e1670e9cbe146218$var$makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values){\n        const n = $e1670e9cbe146218$var$normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    $e1670e9cbe146218$var$setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nmodule.exports.makeEnum = $e1670e9cbe146218$var$makeEnum;\nfunction $e1670e9cbe146218$var$normalizeEnumValue(value) {\n    if (\"localName\" in value) return value;\n    return Object.assign(Object.assign({}, value), {\n        localName: value.name\n    });\n}\n\n});\nparcelRequire.register(\"2RXcp\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.assertFloat32 = module.exports.assertUInt32 = module.exports.assertInt32 = module.exports.assert = void 0;\n/**\n * Assert that condition is truthy or throw error (with message)\n */ function $216e73bb5cdaded0$var$assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) throw new Error(msg);\n}\nmodule.exports.assert = $216e73bb5cdaded0$var$assert;\nconst $216e73bb5cdaded0$var$FLOAT32_MAX = 3.4028234663852886e38, $216e73bb5cdaded0$var$FLOAT32_MIN = -340282346638528860000000000000000000000, $216e73bb5cdaded0$var$UINT32_MAX = 0xffffffff, $216e73bb5cdaded0$var$INT32_MAX = 0x7fffffff, $216e73bb5cdaded0$var$INT32_MIN = -2147483648;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */ function $216e73bb5cdaded0$var$assertInt32(arg) {\n    if (typeof arg !== \"number\") throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > $216e73bb5cdaded0$var$INT32_MAX || arg < $216e73bb5cdaded0$var$INT32_MIN) throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nmodule.exports.assertInt32 = $216e73bb5cdaded0$var$assertInt32;\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */ function $216e73bb5cdaded0$var$assertUInt32(arg) {\n    if (typeof arg !== \"number\") throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > $216e73bb5cdaded0$var$UINT32_MAX || arg < 0) throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nmodule.exports.assertUInt32 = $216e73bb5cdaded0$var$assertUInt32;\n/**\n * Assert a valid protobuf float value.\n */ function $216e73bb5cdaded0$var$assertFloat32(arg) {\n    if (typeof arg !== \"number\") throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg)) return;\n    if (arg > $216e73bb5cdaded0$var$FLOAT32_MAX || arg < $216e73bb5cdaded0$var$FLOAT32_MIN) throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nmodule.exports.assertFloat32 = $216e73bb5cdaded0$var$assertFloat32;\n\n});\n\n\nparcelRequire.register(\"dNCE8\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeMessageType = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n/**\n * Create a new message type using the given runtime.\n */ function $a0bdd453e70350e2$var$makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function(data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        }\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new $daMMc.Message());\n    Object.assign(type, {\n        runtime: runtime,\n        typeName: typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary (bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson (jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString (jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals (a, b) {\n            return runtime.util.equals(type, a, b);\n        }\n    });\n    return type;\n}\nmodule.exports.makeMessageType = $a0bdd453e70350e2$var$makeMessageType;\n\n});\n\n\nparcelRequire.register(\"dNiWp\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeBinaryFormatProto2 = void 0;\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $cwy9l = parcelRequire(\"cwy9l\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, no-case-declarations, prefer-const */ function $a0ae8b424872f45d$var$makeBinaryFormatProto2() {\n    return Object.assign(Object.assign({}, (0, $cwy9l.makeBinaryFormatCommon)()), {\n        writeMessage (message, writer, options) {\n            const type = message.getType();\n            let field;\n            try {\n                for (field of type.fields.byNumber()){\n                    let value, repeated = field.repeated, localName = field.localName;\n                    if (field.oneof) {\n                        const oneof = message[field.oneof.localName];\n                        if (oneof.case !== localName) continue; // field is not selected, skip\n                        value = oneof.value;\n                    } else {\n                        value = message[localName];\n                        // In contrast to proto3, we raise an error if a non-optional (proto2 required)\n                        // field is missing a value.\n                        if (value === undefined && !field.oneof && !field.opt) throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    switch(field.kind){\n                        case \"scalar\":\n                        case \"enum\":\n                            let scalarType = field.kind == \"enum\" ? $9mVQy.ScalarType.INT32 : field.T;\n                            if (repeated) {\n                                if (field.packed) (0, $cwy9l.writePacked)(writer, scalarType, field.no, value);\n                                else for (const item of value)(0, $cwy9l.writeScalar)(writer, scalarType, field.no, item, true);\n                            } else if (value !== undefined) // In contrast to proto3, we do not skip intrinsic default values.\n                            // Explicit default values are not special cased either.\n                            (0, $cwy9l.writeScalar)(writer, scalarType, field.no, value, true);\n                            break;\n                        case \"message\":\n                            if (repeated) for (const item of value)(0, $cwy9l.writeMessageField)(writer, options, field.T, field.no, item);\n                            else (0, $cwy9l.writeMessageField)(writer, options, field.T, field.no, value);\n                            break;\n                        case \"map\":\n                            for (const [key, val] of Object.entries(value))(0, $cwy9l.writeMapEntry)(writer, options, field, key, val);\n                            break;\n                    }\n                }\n            } catch (e) {\n                let m = field ? `cannot encode field ${type.typeName}.${field === null || field === void 0 ? void 0 : field.name} to binary` : `cannot encode message ${type.typeName} to binary`;\n                let r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            if (options.writeUnknownFields) this.writeUnknownFields(message, writer);\n            return writer;\n        }\n    });\n}\nmodule.exports.makeBinaryFormatProto2 = $a0ae8b424872f45d$var$makeBinaryFormatProto2;\n\n});\nparcelRequire.register(\"9mVQy\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.ScalarType = void 0;\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */ var $6d230a47d21f361f$var$ScalarType;\n(function(ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})($6d230a47d21f361f$var$ScalarType || (module.exports.ScalarType = $6d230a47d21f361f$var$ScalarType = {}));\n\n});\n\nparcelRequire.register(\"cwy9l\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.writePacked = module.exports.writeScalar = module.exports.writeMessageField = module.exports.writeMapEntry = module.exports.makeBinaryFormatCommon = void 0;\n\nvar $1D0pI = parcelRequire(\"1D0pI\");\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $2fBvO = parcelRequire(\"2fBvO\");\n\nvar $bQjda = parcelRequire(\"bQjda\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unnecessary-condition, no-case-declarations, prefer-const */ const $91e2f69c12db0a74$var$unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst $91e2f69c12db0a74$var$readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes)=>new $1D0pI.BinaryReader(bytes)\n};\n// Default options for serializing binary data.\nconst $91e2f69c12db0a74$var$writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: ()=>new $1D0pI.BinaryWriter()\n};\nfunction $91e2f69c12db0a74$var$makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, $91e2f69c12db0a74$var$readDefaults), options) : $91e2f69c12db0a74$var$readDefaults;\n}\nfunction $91e2f69c12db0a74$var$makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, $91e2f69c12db0a74$var$writeDefaults), options) : $91e2f69c12db0a74$var$writeDefaults;\n}\nfunction $91e2f69c12db0a74$var$makeBinaryFormatCommon() {\n    return {\n        makeReadOptions: $91e2f69c12db0a74$var$makeReadOptions,\n        makeWriteOptions: $91e2f69c12db0a74$var$makeWriteOptions,\n        listUnknownFields (message) {\n            var _a;\n            return (_a = message[$91e2f69c12db0a74$var$unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields (message) {\n            delete message[$91e2f69c12db0a74$var$unknownFieldsSymbol];\n        },\n        writeUnknownFields (message, writer) {\n            const m = message;\n            const c = m[$91e2f69c12db0a74$var$unknownFieldsSymbol];\n            if (c) for (const f of c)writer.tag(f.no, f.wireType).raw(f.data);\n        },\n        onUnknownField (message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[$91e2f69c12db0a74$var$unknownFieldsSymbol])) m[$91e2f69c12db0a74$var$unknownFieldsSymbol] = [];\n            m[$91e2f69c12db0a74$var$unknownFieldsSymbol].push({\n                no: no,\n                wireType: wireType,\n                data: data\n            });\n        },\n        readMessage (message, reader, length, options) {\n            const type = message.getType();\n            const end = length === undefined ? reader.len : reader.pos + length;\n            while(reader.pos < end){\n                const [fieldNo, wireType] = reader.tag(), field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType);\n                    if (options.readUnknownFields) this.onUnknownField(message, fieldNo, wireType, data);\n                    continue;\n                }\n                let target = message, repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    target = target[field.oneof.localName];\n                    if (target.case != localName) delete target.value;\n                    target.case = localName;\n                    localName = \"value\";\n                }\n                switch(field.kind){\n                    case \"scalar\":\n                    case \"enum\":\n                        const scalarType = field.kind == \"enum\" ? $9mVQy.ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                            if (wireType == $1D0pI.WireType.LengthDelimited && scalarType != $9mVQy.ScalarType.STRING && scalarType != $9mVQy.ScalarType.BYTES) {\n                                let e = reader.uint32() + reader.pos;\n                                while(reader.pos < e)arr.push($91e2f69c12db0a74$var$readScalar(reader, scalarType));\n                            } else arr.push($91e2f69c12db0a74$var$readScalar(reader, scalarType));\n                        } else target[localName] = $91e2f69c12db0a74$var$readScalar(reader, scalarType);\n                        break;\n                    case \"message\":\n                        const messageType = field.T;\n                        if (repeated) // safe to assume presence of array, oneof cannot contain repeated values\n                        target[localName].push($91e2f69c12db0a74$var$readMessageField(reader, new messageType(), options));\n                        else if (target[localName] instanceof $daMMc.Message) $91e2f69c12db0a74$var$readMessageField(reader, target[localName], options);\n                        else {\n                            target[localName] = $91e2f69c12db0a74$var$readMessageField(reader, new messageType(), options);\n                            if (messageType.fieldWrapper && !field.oneof && !field.repeated) target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                        }\n                        break;\n                    case \"map\":\n                        let [mapKey, mapVal] = $91e2f69c12db0a74$var$readMapEntry(field, reader, options);\n                        // safe to assume presence of map object, oneof cannot contain repeated values\n                        target[localName][mapKey] = mapVal;\n                        break;\n                }\n            }\n        }\n    };\n}\nmodule.exports.makeBinaryFormatCommon = $91e2f69c12db0a74$var$makeBinaryFormatCommon;\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction $91e2f69c12db0a74$var$readMessageField(reader, message, options) {\n    const format = message.getType().runtime.bin;\n    format.readMessage(message, reader, reader.uint32(), options);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction $91e2f69c12db0a74$var$readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while(reader.pos < end){\n        let [fieldNo] = reader.tag();\n        switch(fieldNo){\n            case 1:\n                key = $91e2f69c12db0a74$var$readScalar(reader, field.K);\n                break;\n            case 2:\n                switch(field.V.kind){\n                    case \"scalar\":\n                        val = $91e2f69c12db0a74$var$readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = $91e2f69c12db0a74$var$readMessageField(reader, new field.V.T(), options);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        let keyRaw = (0, $bQjda.scalarDefaultValue)(field.K);\n        key = field.K == $9mVQy.ScalarType.BOOL ? keyRaw.toString() : keyRaw;\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") key = key.toString();\n    if (val === undefined) switch(field.V.kind){\n        case \"scalar\":\n            val = (0, $bQjda.scalarDefaultValue)(field.V.T);\n            break;\n        case \"enum\":\n            val = 0;\n            break;\n        case \"message\":\n            val = new field.V.T();\n            break;\n    }\n    return [\n        key,\n        val\n    ];\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction $91e2f69c12db0a74$var$readScalar(reader, type) {\n    switch(type){\n        case $9mVQy.ScalarType.STRING:\n            return reader.string();\n        case $9mVQy.ScalarType.BOOL:\n            return reader.bool();\n        case $9mVQy.ScalarType.DOUBLE:\n            return reader.double();\n        case $9mVQy.ScalarType.FLOAT:\n            return reader.float();\n        case $9mVQy.ScalarType.INT32:\n            return reader.int32();\n        case $9mVQy.ScalarType.INT64:\n            return reader.int64();\n        case $9mVQy.ScalarType.UINT64:\n            return reader.uint64();\n        case $9mVQy.ScalarType.FIXED64:\n            return reader.fixed64();\n        case $9mVQy.ScalarType.BYTES:\n            return reader.bytes();\n        case $9mVQy.ScalarType.FIXED32:\n            return reader.fixed32();\n        case $9mVQy.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case $9mVQy.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case $9mVQy.ScalarType.SINT64:\n            return reader.sint64();\n        case $9mVQy.ScalarType.UINT32:\n            return reader.uint32();\n        case $9mVQy.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction $91e2f69c12db0a74$var$writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, $1D0pI.WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch(field.K){\n        case $9mVQy.ScalarType.INT32:\n        case $9mVQy.ScalarType.FIXED32:\n        case $9mVQy.ScalarType.UINT32:\n        case $9mVQy.ScalarType.SFIXED32:\n        case $9mVQy.ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case $9mVQy.ScalarType.BOOL:\n            (0, $2RXcp.assert)(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    $91e2f69c12db0a74$var$writeScalar(writer, field.K, 1, keyValue, true);\n    // write value, expecting value field number = 2\n    switch(field.V.kind){\n        case \"scalar\":\n            $91e2f69c12db0a74$var$writeScalar(writer, field.V.T, 2, value, true);\n            break;\n        case \"enum\":\n            $91e2f69c12db0a74$var$writeScalar(writer, $9mVQy.ScalarType.INT32, 2, value, true);\n            break;\n        case \"message\":\n            $91e2f69c12db0a74$var$writeMessageField(writer, options, field.V.T, 2, value);\n            break;\n    }\n    writer.join();\n}\nmodule.exports.writeMapEntry = $91e2f69c12db0a74$var$writeMapEntry;\nfunction $91e2f69c12db0a74$var$writeMessageField(writer, options, type, fieldNo, value) {\n    if (value !== undefined) {\n        const message = (0, $2fBvO.wrapField)(type, value);\n        writer.tag(fieldNo, $1D0pI.WireType.LengthDelimited).bytes(message.toBinary(options));\n    }\n}\nmodule.exports.writeMessageField = $91e2f69c12db0a74$var$writeMessageField;\nfunction $91e2f69c12db0a74$var$writeScalar(writer, type, fieldNo, value, emitIntrinsicDefault) {\n    let [wireType, method, isIntrinsicDefault] = (0, $bQjda.scalarTypeInfo)(type, value);\n    if (!isIntrinsicDefault || emitIntrinsicDefault) writer.tag(fieldNo, wireType)[method](value);\n}\nmodule.exports.writeScalar = $91e2f69c12db0a74$var$writeScalar;\nfunction $91e2f69c12db0a74$var$writePacked(writer, type, fieldNo, value) {\n    if (!value.length) return;\n    writer.tag(fieldNo, $1D0pI.WireType.LengthDelimited).fork();\n    let [, method] = (0, $bQjda.scalarTypeInfo)(type);\n    for(let i = 0; i < value.length; i++)writer[method](value[i]);\n    writer.join();\n}\nmodule.exports.writePacked = $91e2f69c12db0a74$var$writePacked;\n\n});\nparcelRequire.register(\"1D0pI\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.BinaryReader = module.exports.BinaryWriter = module.exports.WireType = void 0;\n\nvar $9NeDz = parcelRequire(\"9NeDz\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */ /**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */ var $12f9c123e4583420$var$WireType;\n(function(WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */ WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */ WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */ WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */ WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */ WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */ WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})($12f9c123e4583420$var$WireType || (module.exports.WireType = $12f9c123e4583420$var$WireType = {}));\nclass $12f9c123e4583420$var$BinaryWriter {\n    constructor(textEncoder){\n        /**\n         * Previous fork states.\n         */ this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */ finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for(let i = 0; i < this.chunks.length; i++)len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for(let i = 0; i < this.chunks.length; i++){\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */ fork() {\n        this.stack.push({\n            chunks: this.chunks,\n            buf: this.buf\n        });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */ join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev) throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */ tag(fieldNo, type) {\n        return this.uint32((fieldNo << 3 | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */ raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */ uint32(value) {\n        (0, $2RXcp.assertUInt32)(value);\n        // write value as varint 32, inlined for speed\n        while(value > 0x7f){\n            this.buf.push(value & 0x7f | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */ int32(value) {\n        (0, $2RXcp.assertInt32)(value);\n        (0, $9NeDz.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */ bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */ bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */ string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */ float(value) {\n        (0, $2RXcp.assertFloat32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */ double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */ fixed32(value) {\n        (0, $2RXcp.assertUInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */ sfixed32(value) {\n        (0, $2RXcp.assertInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */ sint32(value) {\n        (0, $2RXcp.assertInt32)(value);\n        // zigzag encode\n        value = (value << 1 ^ value >> 31) >>> 0;\n        (0, $9NeDz.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */ sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = $dkRgk.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */ fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = $dkRgk.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */ int64(value) {\n        let tc = $dkRgk.protoInt64.enc(value);\n        (0, $9NeDz.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */ sint64(value) {\n        let tc = $dkRgk.protoInt64.enc(value), // zigzag encode\n        sign = tc.hi >> 31, lo = tc.lo << 1 ^ sign, hi = (tc.hi << 1 | tc.lo >>> 31) ^ sign;\n        (0, $9NeDz.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */ uint64(value) {\n        let tc = $dkRgk.protoInt64.uEnc(value);\n        (0, $9NeDz.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nmodule.exports.BinaryWriter = $12f9c123e4583420$var$BinaryWriter;\nclass $12f9c123e4583420$var$BinaryReader {\n    constructor(buf, textDecoder){\n        this.varint64 = $9NeDz.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */ this.uint32 = $9NeDz.varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */ tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5) throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [\n            fieldNo,\n            wireType\n        ];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */ skip(wireType) {\n        let start = this.pos;\n        switch(wireType){\n            case $12f9c123e4583420$var$WireType.Varint:\n                while(this.buf[this.pos++] & 0x80);\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case $12f9c123e4583420$var$WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case $12f9c123e4583420$var$WireType.Bit32:\n                this.pos += 4;\n                break;\n            case $12f9c123e4583420$var$WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case $12f9c123e4583420$var$WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while((t = this.tag()[1]) !== $12f9c123e4583420$var$WireType.EndGroup)this.skip(t);\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */ assertBounds() {\n        if (this.pos > this.len) throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */ int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */ sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return zze >>> 1 ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */ int64() {\n        return $dkRgk.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */ uint64() {\n        return $dkRgk.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */ sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = (lo >>> 1 | (hi & 1) << 31) ^ s;\n        hi = hi >>> 1 ^ s;\n        return $dkRgk.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */ bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */ fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */ sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */ fixed64() {\n        return $dkRgk.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */ sfixed64() {\n        return $dkRgk.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */ float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */ double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */ bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */ string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\nmodule.exports.BinaryReader = $12f9c123e4583420$var$BinaryReader;\n\n});\nparcelRequire.register(\"9NeDz\", function(module, exports) {\n\"use strict\";\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.varint32read = module.exports.varint32write = module.exports.uInt64ToString = module.exports.int64ToString = module.exports.int64FromString = module.exports.varint64write = module.exports.varint64read = void 0;\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */ /**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */ function $72140b4c92fafb45$var$varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for(let shift = 0; shift < 28; shift += 7){\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [\n                lowBits,\n                highBits\n            ];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [\n            lowBits,\n            highBits\n        ];\n    }\n    for(let shift = 3; shift <= 31; shift += 7){\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [\n                lowBits,\n                highBits\n            ];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\nmodule.exports.varint64read = $72140b4c92fafb45$var$varint64read;\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */ function $72140b4c92fafb45$var$varint64write(lo, hi, bytes) {\n    for(let i = 0; i < 28; i = i + 7){\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) return;\n    }\n    const splitBits = lo >>> 28 & 0x0f | (hi & 0x07) << 4;\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) return;\n    for(let i = 3; i < 31; i = i + 7){\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) return;\n    }\n    bytes.push(hi >>> 31 & 0x01);\n}\nmodule.exports.varint64write = $72140b4c92fafb45$var$varint64write;\n// constants for binary math\nconst $72140b4c92fafb45$var$TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */ function $72140b4c92fafb45$var$int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) dec = dec.slice(1);\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= $72140b4c92fafb45$var$TWO_PWR_32_DBL) {\n            highBits = highBits + (lowBits / $72140b4c92fafb45$var$TWO_PWR_32_DBL | 0);\n            lowBits = lowBits % $72140b4c92fafb45$var$TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? $72140b4c92fafb45$var$negate(lowBits, highBits) : $72140b4c92fafb45$var$newBits(lowBits, highBits);\n}\nmodule.exports.int64FromString = $72140b4c92fafb45$var$int64FromString;\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */ function $72140b4c92fafb45$var$int64ToString(lo, hi) {\n    let bits = $72140b4c92fafb45$var$newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) bits = $72140b4c92fafb45$var$negate(bits.lo, bits.hi);\n    const result = $72140b4c92fafb45$var$uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\nmodule.exports.int64ToString = $72140b4c92fafb45$var$int64ToString;\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */ function $72140b4c92fafb45$var$uInt64ToString(lo, hi) {\n    ({ lo: lo, hi: hi } = $72140b4c92fafb45$var$toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) return String($72140b4c92fafb45$var$TWO_PWR_32_DBL * hi + lo);\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = (lo >>> 24 | hi << 8) & 0xFFFFFF;\n    const high = hi >> 16 & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + $72140b4c92fafb45$var$decimalFrom1e7WithLeadingZeros(digitB) + $72140b4c92fafb45$var$decimalFrom1e7WithLeadingZeros(digitA);\n}\nmodule.exports.uInt64ToString = $72140b4c92fafb45$var$uInt64ToString;\nfunction $72140b4c92fafb45$var$toUnsigned(lo, hi) {\n    return {\n        lo: lo >>> 0,\n        hi: hi >>> 0\n    };\n}\nfunction $72140b4c92fafb45$var$newBits(lo, hi) {\n    return {\n        lo: lo | 0,\n        hi: hi | 0\n    };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */ function $72140b4c92fafb45$var$negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) lowBits = ~lowBits + 1;\n    else // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n    // adding 1 to that, results in 0x100000000, which leaves\n    // the low bits 0x0 and simply adds one to the high bits.\n    highBits += 1;\n    return $72140b4c92fafb45$var$newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */ const $72140b4c92fafb45$var$decimalFrom1e7WithLeadingZeros = (digit1e7)=>{\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */ function $72140b4c92fafb45$var$varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while(value > 0x7f){\n            bytes.push(value & 0x7f | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    } else {\n        for(let i = 0; i < 9; i++){\n            bytes.push(value & 127 | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\nmodule.exports.varint32write = $72140b4c92fafb45$var$varint32write;\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */ function $72140b4c92fafb45$var$varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for(let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)b = this.buf[this.pos++];\n    if ((b & 0x80) != 0) throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\nmodule.exports.varint32read = $72140b4c92fafb45$var$varint32read;\n\n});\n\nparcelRequire.register(\"dkRgk\", function(module, exports) {\n\nvar $hPtJY = parcelRequire(\"hPtJY\");\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.protoInt64 = void 0;\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $9NeDz = parcelRequire(\"9NeDz\");\nfunction $9b567569ee6bb48a$var$makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" && typeof dv.getBigInt64 === \"function\" && typeof dv.getBigUint64 === \"function\" && typeof dv.setBigInt64 === \"function\" && typeof dv.setBigUint64 === \"function\" && (typeof $hPtJY != \"object\" || typeof $hPtJY.env != \"object\" || true);\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse (value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) throw new Error(`int64 invalid: ${value}`);\n                return bi;\n            },\n            uParse (value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) throw new Error(`uint64 invalid: ${value}`);\n                return bi;\n            },\n            enc (value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true)\n                };\n            },\n            uEnc (value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true)\n                };\n            },\n            dec (lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec (lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            }\n        };\n    }\n    const assertInt64String = (value)=>(0, $2RXcp.assert)(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value)=>(0, $2RXcp.assert)(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse (value) {\n            if (typeof value != \"string\") value = value.toString();\n            assertInt64String(value);\n            return value;\n        },\n        uParse (value) {\n            if (typeof value != \"string\") value = value.toString();\n            assertUInt64String(value);\n            return value;\n        },\n        enc (value) {\n            if (typeof value != \"string\") value = value.toString();\n            assertInt64String(value);\n            return (0, $9NeDz.int64FromString)(value);\n        },\n        uEnc (value) {\n            if (typeof value != \"string\") value = value.toString();\n            assertUInt64String(value);\n            return (0, $9NeDz.int64FromString)(value);\n        },\n        dec (lo, hi) {\n            return (0, $9NeDz.int64ToString)(lo, hi);\n        },\n        uDec (lo, hi) {\n            return (0, $9NeDz.uInt64ToString)(lo, hi);\n        }\n    };\n}\nmodule.exports.protoInt64 = $9b567569ee6bb48a$var$makeInt64Support();\n\n});\nparcelRequire.register(\"hPtJY\", function(module, exports) {\n// shim for using process in browser\nvar $cfae44f0dfdf62c0$var$process = module.exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $cfae44f0dfdf62c0$var$cachedSetTimeout;\nvar $cfae44f0dfdf62c0$var$cachedClearTimeout;\nfunction $cfae44f0dfdf62c0$var$defaultSetTimout() {\n    throw new Error(\"setTimeout has not been defined\");\n}\nfunction $cfae44f0dfdf62c0$var$defaultClearTimeout() {\n    throw new Error(\"clearTimeout has not been defined\");\n}\n(function() {\n    try {\n        if (typeof setTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        else $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = $cfae44f0dfdf62c0$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === \"function\") $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        else $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    } catch (e) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = $cfae44f0dfdf62c0$var$defaultClearTimeout;\n    }\n})();\nfunction $cfae44f0dfdf62c0$var$runTimeout(fun) {\n    if ($cfae44f0dfdf62c0$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedSetTimeout === $cfae44f0dfdf62c0$var$defaultSetTimout || !$cfae44f0dfdf62c0$var$cachedSetTimeout) && setTimeout) {\n        $cfae44f0dfdf62c0$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $cfae44f0dfdf62c0$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $cfae44f0dfdf62c0$var$runClearTimeout(marker) {\n    if ($cfae44f0dfdf62c0$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($cfae44f0dfdf62c0$var$cachedClearTimeout === $cfae44f0dfdf62c0$var$defaultClearTimeout || !$cfae44f0dfdf62c0$var$cachedClearTimeout) && clearTimeout) {\n        $cfae44f0dfdf62c0$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $cfae44f0dfdf62c0$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $cfae44f0dfdf62c0$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $cfae44f0dfdf62c0$var$queue = [];\nvar $cfae44f0dfdf62c0$var$draining = false;\nvar $cfae44f0dfdf62c0$var$currentQueue;\nvar $cfae44f0dfdf62c0$var$queueIndex = -1;\nfunction $cfae44f0dfdf62c0$var$cleanUpNextTick() {\n    if (!$cfae44f0dfdf62c0$var$draining || !$cfae44f0dfdf62c0$var$currentQueue) return;\n    $cfae44f0dfdf62c0$var$draining = false;\n    if ($cfae44f0dfdf62c0$var$currentQueue.length) $cfae44f0dfdf62c0$var$queue = $cfae44f0dfdf62c0$var$currentQueue.concat($cfae44f0dfdf62c0$var$queue);\n    else $cfae44f0dfdf62c0$var$queueIndex = -1;\n    if ($cfae44f0dfdf62c0$var$queue.length) $cfae44f0dfdf62c0$var$drainQueue();\n}\nfunction $cfae44f0dfdf62c0$var$drainQueue() {\n    if ($cfae44f0dfdf62c0$var$draining) return;\n    var timeout = $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$cleanUpNextTick);\n    $cfae44f0dfdf62c0$var$draining = true;\n    var len = $cfae44f0dfdf62c0$var$queue.length;\n    while(len){\n        $cfae44f0dfdf62c0$var$currentQueue = $cfae44f0dfdf62c0$var$queue;\n        $cfae44f0dfdf62c0$var$queue = [];\n        while(++$cfae44f0dfdf62c0$var$queueIndex < len)if ($cfae44f0dfdf62c0$var$currentQueue) $cfae44f0dfdf62c0$var$currentQueue[$cfae44f0dfdf62c0$var$queueIndex].run();\n        $cfae44f0dfdf62c0$var$queueIndex = -1;\n        len = $cfae44f0dfdf62c0$var$queue.length;\n    }\n    $cfae44f0dfdf62c0$var$currentQueue = null;\n    $cfae44f0dfdf62c0$var$draining = false;\n    $cfae44f0dfdf62c0$var$runClearTimeout(timeout);\n}\n$cfae44f0dfdf62c0$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $cfae44f0dfdf62c0$var$queue.push(new $cfae44f0dfdf62c0$var$Item(fun, args));\n    if ($cfae44f0dfdf62c0$var$queue.length === 1 && !$cfae44f0dfdf62c0$var$draining) $cfae44f0dfdf62c0$var$runTimeout($cfae44f0dfdf62c0$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $cfae44f0dfdf62c0$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$cfae44f0dfdf62c0$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$cfae44f0dfdf62c0$var$process.title = \"browser\";\n$cfae44f0dfdf62c0$var$process.browser = true;\n$cfae44f0dfdf62c0$var$process.env = {};\n$cfae44f0dfdf62c0$var$process.argv = [];\n$cfae44f0dfdf62c0$var$process.version = \"\"; // empty string to avoid regexp issues\n$cfae44f0dfdf62c0$var$process.versions = {};\nfunction $cfae44f0dfdf62c0$var$noop() {}\n$cfae44f0dfdf62c0$var$process.on = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.addListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.once = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.off = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.removeAllListeners = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.emit = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.prependOnceListener = $cfae44f0dfdf62c0$var$noop;\n$cfae44f0dfdf62c0$var$process.listeners = function(name) {\n    return [];\n};\n$cfae44f0dfdf62c0$var$process.binding = function(name) {\n    throw new Error(\"process.binding is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.cwd = function() {\n    return \"/\";\n};\n$cfae44f0dfdf62c0$var$process.chdir = function(dir) {\n    throw new Error(\"process.chdir is not supported\");\n};\n$cfae44f0dfdf62c0$var$process.umask = function() {\n    return 0;\n};\n\n});\n\n\n\nparcelRequire.register(\"2fBvO\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.getUnwrappedFieldType = module.exports.wrapField = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */ function $1a3a14955b4bf421$var$wrapField(type, value) {\n    if (value instanceof $daMMc.Message || !type.fieldWrapper) return value;\n    return type.fieldWrapper.wrapField(value);\n}\nmodule.exports.wrapField = $1a3a14955b4bf421$var$wrapField;\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */ function $1a3a14955b4bf421$var$getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") return undefined;\n    if (field.repeated) return undefined;\n    if (field.oneof != undefined) return undefined;\n    return $1a3a14955b4bf421$var$wktWrapperToScalarType[field.message.typeName];\n}\nmodule.exports.getUnwrappedFieldType = $1a3a14955b4bf421$var$getUnwrappedFieldType;\nconst $1a3a14955b4bf421$var$wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": $9mVQy.ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": $9mVQy.ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": $9mVQy.ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": $9mVQy.ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": $9mVQy.ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": $9mVQy.ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": $9mVQy.ScalarType.BOOL,\n    \"google.protobuf.StringValue\": $9mVQy.ScalarType.STRING,\n    \"google.protobuf.BytesValue\": $9mVQy.ScalarType.BYTES\n};\n\n});\n\nparcelRequire.register(\"bQjda\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.scalarTypeInfo = module.exports.scalarDefaultValue = module.exports.scalarEquals = void 0;\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $1D0pI = parcelRequire(\"1D0pI\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n/* eslint-disable @typescript-eslint/no-explicit-any */ /**\n * Returns true if both scalar values are equal.\n */ function $89f37407f81a32ae$var$scalarEquals(type, a, b) {\n    if (a === b) // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n    return true;\n    // Special case BYTES - we need to compare each byte individually\n    if (type == $9mVQy.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) return false;\n        if (a.length !== b.length) return false;\n        for(let i = 0; i < a.length; i++){\n            if (a[i] !== b[i]) return false;\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch(type){\n        case $9mVQy.ScalarType.UINT64:\n        case $9mVQy.ScalarType.FIXED64:\n        case $9mVQy.ScalarType.INT64:\n        case $9mVQy.ScalarType.SFIXED64:\n        case $9mVQy.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\nmodule.exports.scalarEquals = $89f37407f81a32ae$var$scalarEquals;\n/**\n * Returns the default value for the given scalar type, following\n * proto3 semantics.\n */ function $89f37407f81a32ae$var$scalarDefaultValue(type) {\n    switch(type){\n        case $9mVQy.ScalarType.BOOL:\n            return false;\n        case $9mVQy.ScalarType.UINT64:\n        case $9mVQy.ScalarType.FIXED64:\n        case $9mVQy.ScalarType.INT64:\n        case $9mVQy.ScalarType.SFIXED64:\n        case $9mVQy.ScalarType.SINT64:\n            return $dkRgk.protoInt64.zero;\n        case $9mVQy.ScalarType.DOUBLE:\n        case $9mVQy.ScalarType.FLOAT:\n            return 0.0;\n        case $9mVQy.ScalarType.BYTES:\n            return new Uint8Array(0);\n        case $9mVQy.ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\nmodule.exports.scalarDefaultValue = $89f37407f81a32ae$var$scalarDefaultValue;\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */ function $89f37407f81a32ae$var$scalarTypeInfo(type, value) {\n    const isUndefined = value === undefined;\n    let wireType = $1D0pI.WireType.Varint;\n    let isIntrinsicDefault = value === 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch(type){\n        case $9mVQy.ScalarType.STRING:\n            isIntrinsicDefault = isUndefined || !value.length;\n            wireType = $1D0pI.WireType.LengthDelimited;\n            break;\n        case $9mVQy.ScalarType.BOOL:\n            isIntrinsicDefault = value === false;\n            break;\n        case $9mVQy.ScalarType.DOUBLE:\n            wireType = $1D0pI.WireType.Bit64;\n            break;\n        case $9mVQy.ScalarType.FLOAT:\n            wireType = $1D0pI.WireType.Bit32;\n            break;\n        case $9mVQy.ScalarType.INT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case $9mVQy.ScalarType.UINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case $9mVQy.ScalarType.FIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = $1D0pI.WireType.Bit64;\n            break;\n        case $9mVQy.ScalarType.BYTES:\n            isIntrinsicDefault = isUndefined || !value.byteLength;\n            wireType = $1D0pI.WireType.LengthDelimited;\n            break;\n        case $9mVQy.ScalarType.FIXED32:\n            wireType = $1D0pI.WireType.Bit32;\n            break;\n        case $9mVQy.ScalarType.SFIXED32:\n            wireType = $1D0pI.WireType.Bit32;\n            break;\n        case $9mVQy.ScalarType.SFIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = $1D0pI.WireType.Bit64;\n            break;\n        case $9mVQy.ScalarType.SINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n    }\n    const method = $9mVQy.ScalarType[type].toLowerCase();\n    return [\n        wireType,\n        method,\n        isUndefined || isIntrinsicDefault\n    ];\n}\nmodule.exports.scalarTypeInfo = $89f37407f81a32ae$var$scalarTypeInfo;\n\n});\n\n\n\nparcelRequire.register(\"4kBo5\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeUtilCommon = void 0;\n\nvar $jlOnx = parcelRequire(\"jlOnx\");\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $bQjda = parcelRequire(\"bQjda\");\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */ function $3276080af4c6fcf5$var$makeUtilCommon() {\n    return {\n        setEnumType: $jlOnx.setEnumType,\n        initPartial (source, target) {\n            if (source === undefined) return;\n            const type = target.getType();\n            for (const member of type.fields.byMember()){\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] === undefined) continue;\n                switch(member.kind){\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) continue;\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField && sourceField.kind == \"message\" && !(val instanceof sourceField.T)) val = new sourceField.T(val);\n                        t[localName] = {\n                            case: sk,\n                            value: val\n                        };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        t[localName] = s[localName];\n                        break;\n                    case \"map\":\n                        switch(member.V.kind){\n                            case \"scalar\":\n                            case \"enum\":\n                                Object.assign(t[localName], s[localName]);\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])){\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) // We only take partial input for messages that are not a wrapper type.\n                                    // For those messages, we recursively normalize the partial input.\n                                    val = new messageType(val);\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) t[localName] = s[localName].map((val)=>val instanceof mt ? val : new mt(val));\n                        else if (s[localName] !== undefined) {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) t[localName] = val;\n                            else t[localName] = val instanceof mt ? val : new mt(val);\n                        }\n                        break;\n                }\n            }\n        },\n        equals (type, a, b) {\n            if (a === b) return true;\n            if (!a || !b) return false;\n            return type.fields.byMember().every((m)=>{\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) return false;\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch(m.kind){\n                        case \"message\":\n                            return va.every((a, i)=>m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i)=>(0, $bQjda.scalarEquals)(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i)=>(0, $bQjda.scalarEquals)($9mVQy.ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch(m.kind){\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return (0, $bQjda.scalarEquals)($9mVQy.ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return (0, $bQjda.scalarEquals)(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) return false;\n                        const s = m.findField(va.case);\n                        if (s === undefined) return true;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch(s.kind){\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return (0, $bQjda.scalarEquals)($9mVQy.ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return (0, $bQjda.scalarEquals)(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch(m.V.kind){\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k)=>messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k)=>(0, $bQjda.scalarEquals)($9mVQy.ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k)=>(0, $bQjda.scalarEquals)(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        clone (message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()){\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) copy = source.map((e)=>$3276080af4c6fcf5$var$cloneSingularField(member, e));\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source))copy[key] = $3276080af4c6fcf5$var$cloneSingularField(member.V, v);\n                } else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f ? {\n                        case: source.case,\n                        value: $3276080af4c6fcf5$var$cloneSingularField(f, source.value)\n                    } : {\n                        case: undefined\n                    };\n                } else copy = $3276080af4c6fcf5$var$cloneSingularField(member, source);\n                any[member.localName] = copy;\n            }\n            return target;\n        }\n    };\n}\nmodule.exports.makeUtilCommon = $3276080af4c6fcf5$var$makeUtilCommon;\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction $3276080af4c6fcf5$var$cloneSingularField(field, value) {\n    if (value === undefined) return value;\n    if (value instanceof $daMMc.Message) return value.clone();\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n\n});\n\nparcelRequire.register(\"hbbeO\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.InternalFieldList = void 0;\nclass $c81c2e5b1a69dc41$var$InternalFieldList {\n    constructor(fields, normalizer){\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list())t[f.jsonName] = t[f.name] = f;\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list())t[f.no] = f;\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) this.all = this._normalizer(this._fields);\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) this.numbersAsc = this.list().concat().sort((a, b)=>a.no - b.no);\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()){\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                } else a.push(f);\n            }\n        }\n        return this.members;\n    }\n}\nmodule.exports.InternalFieldList = $c81c2e5b1a69dc41$var$InternalFieldList;\n\n});\n\nparcelRequire.register(\"gamDJ\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.InternalOneofInfo = void 0;\n\nvar $hxoip = parcelRequire(\"hxoip\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\nclass $bc4f2455284d38e1$var$InternalOneofInfo {\n    constructor(name){\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = (0, $hxoip.localOneofName)(name);\n    }\n    addField(field) {\n        (0, $2RXcp.assert)(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for(let i = 0; i < this.fields.length; i++)this._lookup[this.fields[i].localName] = this.fields[i];\n        }\n        return this._lookup[localName];\n    }\n}\nmodule.exports.InternalOneofInfo = $bc4f2455284d38e1$var$InternalOneofInfo;\n\n});\nparcelRequire.register(\"hxoip\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.safeIdentifier = module.exports.safeObjectProperty = module.exports.findEnumSharedPrefix = module.exports.fieldJsonName = module.exports.localOneofName = module.exports.localFieldName = module.exports.localName = void 0;\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */ function $cc485d605498fdf6$var$localName(desc) {\n    switch(desc.kind){\n        case \"field\":\n            return $cc485d605498fdf6$var$localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return $cc485d605498fdf6$var$localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n            {\n                const pkg = desc.file.proto.package;\n                const offset = pkg === undefined ? 0 : pkg.length + 1;\n                const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n                // For services, we only care about safe identifiers, not safe object properties,\n                // but we have shipped v1 with a bug that respected object properties, and we\n                // do not want to introduce a breaking change, so we continue to escape for\n                // safe object properties.\n                // See https://github.com/bufbuild/protobuf-es/pull/391\n                return (0, module.exports.safeObjectProperty)((0, module.exports.safeIdentifier)(name));\n            }\n        case \"enum_value\":\n            {\n                const sharedPrefix = desc.parent.sharedPrefix;\n                if (sharedPrefix === undefined) return desc.name;\n                const name = desc.name.substring(sharedPrefix.length);\n                return (0, module.exports.safeObjectProperty)(name);\n            }\n        case \"rpc\":\n            {\n                let name = desc.name;\n                if (name.length == 0) return name;\n                name = name[0].toLowerCase() + name.substring(1);\n                return (0, module.exports.safeObjectProperty)(name);\n            }\n    }\n}\nmodule.exports.localName = $cc485d605498fdf6$var$localName;\n/**\n * Returns the name of a field in generated code.\n */ function $cc485d605498fdf6$var$localFieldName(protoName, inOneof) {\n    const name = $cc485d605498fdf6$var$protoCamelCase(protoName);\n    if (inOneof) // oneof member names are not properties, but values of the `case` property.\n    return name;\n    return (0, module.exports.safeObjectProperty)($cc485d605498fdf6$var$safeMessageProperty(name));\n}\nmodule.exports.localFieldName = $cc485d605498fdf6$var$localFieldName;\n/**\n * Returns the name of a oneof group in generated code.\n */ function $cc485d605498fdf6$var$localOneofName(protoName) {\n    return $cc485d605498fdf6$var$localFieldName(protoName, false);\n}\nmodule.exports.localOneofName = $cc485d605498fdf6$var$localOneofName;\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */ module.exports.fieldJsonName = $cc485d605498fdf6$var$protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */ function $cc485d605498fdf6$var$findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = $cc485d605498fdf6$var$camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames){\n        if (!name.toLowerCase().startsWith(prefix)) return undefined;\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) return undefined;\n        if (/^\\d/.test(shortName)) // identifiers must not start with numbers\n        return undefined;\n    }\n    return prefix;\n}\nmodule.exports.findEnumSharedPrefix = $cc485d605498fdf6$var$findEnumSharedPrefix;\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */ function $cc485d605498fdf6$var$camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c)=>\"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */ function $cc485d605498fdf6$var$protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for(let i = 0; i < snakeCase.length; i++){\n        let c = snakeCase.charAt(i);\n        switch(c){\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */ const $cc485d605498fdf6$var$reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\"\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */ const $cc485d605498fdf6$var$reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\"\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */ const $cc485d605498fdf6$var$reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\"\n]);\nconst $cc485d605498fdf6$var$fallback = (name)=>`${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */ const $cc485d605498fdf6$var$safeMessageProperty = (name)=>{\n    if ($cc485d605498fdf6$var$reservedMessageProperties.has(name)) return $cc485d605498fdf6$var$fallback(name);\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */ const $cc485d605498fdf6$var$safeObjectProperty = (name)=>{\n    if ($cc485d605498fdf6$var$reservedObjectProperties.has(name)) return $cc485d605498fdf6$var$fallback(name);\n    return name;\n};\nmodule.exports.safeObjectProperty = $cc485d605498fdf6$var$safeObjectProperty;\n/**\n * Names that can be used for identifiers or class properties\n */ const $cc485d605498fdf6$var$safeIdentifier = (name)=>{\n    if ($cc485d605498fdf6$var$reservedIdentifiers.has(name)) return $cc485d605498fdf6$var$fallback(name);\n    return name;\n};\nmodule.exports.safeIdentifier = $cc485d605498fdf6$var$safeIdentifier;\n\n});\n\n\nparcelRequire.register(\"daMbB\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeJsonFormatProto2 = void 0;\n\nvar $2fBvO = parcelRequire(\"2fBvO\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $74iHn = parcelRequire(\"74iHn\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */ function $9971964cd270a60e$var$makeJsonFormatProto2() {\n    return (0, $74iHn.makeJsonFormatCommon)((writeEnum, writeScalar)=>{\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch(field.V.kind){\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)){\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            (0, $2RXcp.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value))// JSON standard allows only (double quoted) string as property key\n                        jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)){\n                            (0, $2RXcp.assert)(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            (0, $2RXcp.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0 ? jsonObj : undefined;\n            } else if (field.repeated) {\n                const jsonArr = [];\n                switch(field.kind){\n                    case \"scalar\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push(writeScalar(field.T, value[i], true));\n                        break;\n                    case \"enum\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        break;\n                    case \"message\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push(value[i].toJson(options));\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0 ? jsonArr : undefined;\n            } else {\n                // In contrast to proto3, we raise an error if a non-optional (proto2 required)\n                // field is missing a value.\n                if (value === undefined) {\n                    if (!field.oneof && !field.opt) throw `required field not set`;\n                    return undefined;\n                }\n                switch(field.kind){\n                    case \"scalar\":\n                        // In contrast to proto3, we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeScalar(field.T, value, true);\n                    case \"enum\":\n                        // In contrast to proto3, we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeEnum(field.T, value, true, options.enumAsInteger);\n                    case \"message\":\n                        return (0, $2fBvO.wrapField)(field.T, value).toJson(options);\n                }\n            }\n        };\n    });\n}\nmodule.exports.makeJsonFormatProto2 = $9971964cd270a60e$var$makeJsonFormatProto2;\n\n});\nparcelRequire.register(\"74iHn\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeJsonFormatCommon = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n\nvar $9BP9U = parcelRequire(\"9BP9U\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */ // Default options for parsing JSON.\nconst $525769473ca78db0$var$jsonReadDefaults = {\n    ignoreUnknownFields: false\n};\n// Default options for serializing to JSON.\nconst $525769473ca78db0$var$jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0\n};\nfunction $525769473ca78db0$var$makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, $525769473ca78db0$var$jsonReadDefaults), options) : $525769473ca78db0$var$jsonReadDefaults;\n}\nfunction $525769473ca78db0$var$makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, $525769473ca78db0$var$jsonWriteDefaults), options) : $525769473ca78db0$var$jsonWriteDefaults;\n}\nfunction $525769473ca78db0$var$makeJsonFormatCommon(makeWriteField) {\n    const writeField = makeWriteField($525769473ca78db0$var$writeEnum, $525769473ca78db0$var$writeScalar);\n    return {\n        makeReadOptions: $525769473ca78db0$var$makeReadOptions,\n        makeWriteOptions: $525769473ca78db0$var$makeWriteOptions,\n        readMessage (type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") throw new Error(`cannot decode message ${type.typeName} from JSON: ${this.debug(json)}`);\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = {};\n            for (const [jsonKey, jsonValue] of Object.entries(json)){\n                const field = type.fields.findJsonName(jsonKey);\n                if (!field) {\n                    if (!options.ignoreUnknownFields) throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    continue;\n                }\n                let localName = field.localName;\n                let target = message;\n                if (field.oneof) {\n                    if (jsonValue === null && field.kind == \"scalar\") continue;\n                    const seen = oneofSeen[field.oneof.localName];\n                    if (seen) throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                    oneofSeen[field.oneof.localName] = jsonKey;\n                    target = target[field.oneof.localName] = {\n                        case: localName\n                    };\n                    localName = \"value\";\n                }\n                if (field.repeated) {\n                    if (jsonValue === null) continue;\n                    if (!Array.isArray(jsonValue)) throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    const targetArray = target[localName];\n                    for (const jsonItem of jsonValue){\n                        if (jsonItem === null) throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`);\n                        let val;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- \"map\" is invalid for repeated fields\n                        switch(field.kind){\n                            case \"message\":\n                                val = field.T.fromJson(jsonItem, options);\n                                break;\n                            case \"enum\":\n                                val = $525769473ca78db0$var$readEnum(field.T, jsonItem, options.ignoreUnknownFields);\n                                if (val === undefined) continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = $525769473ca78db0$var$readScalar(field.T, jsonItem);\n                                } catch (e) {\n                                    let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`;\n                                    if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        targetArray.push(val);\n                    }\n                } else if (field.kind == \"map\") {\n                    if (jsonValue === null) continue;\n                    if (Array.isArray(jsonValue) || typeof jsonValue != \"object\") throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    const targetMap = target[localName];\n                    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)){\n                        if (jsonMapValue === null) throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: map value null`);\n                        let val;\n                        switch(field.V.kind){\n                            case \"message\":\n                                val = field.V.T.fromJson(jsonMapValue, options);\n                                break;\n                            case \"enum\":\n                                val = $525769473ca78db0$var$readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields);\n                                if (val === undefined) continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = $525769473ca78db0$var$readScalar(field.V.T, jsonMapValue);\n                                } catch (e) {\n                                    let m = `cannot decode map value for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                    if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        try {\n                            targetMap[$525769473ca78db0$var$readScalar(field.K, field.K == $9mVQy.ScalarType.BOOL ? jsonMapKey == \"true\" ? true : jsonMapKey == \"false\" ? false : jsonMapKey : jsonMapKey).toString()] = val;\n                        } catch (e) {\n                            let m = `cannot decode map key for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n                            throw new Error(m);\n                        }\n                    }\n                } else switch(field.kind){\n                    case \"message\":\n                        const messageType = field.T;\n                        if (jsonValue === null && messageType.typeName != \"google.protobuf.Value\") {\n                            if (field.oneof) throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: null is invalid for oneof field \"${jsonKey}\"`);\n                            continue;\n                        }\n                        if (target[localName] instanceof $daMMc.Message) target[localName].fromJson(jsonValue, options);\n                        else {\n                            target[localName] = messageType.fromJson(jsonValue, options);\n                            if (messageType.fieldWrapper && !field.oneof) target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                        }\n                        break;\n                    case \"enum\":\n                        const enumValue = $525769473ca78db0$var$readEnum(field.T, jsonValue, options.ignoreUnknownFields);\n                        if (enumValue !== undefined) target[localName] = enumValue;\n                        break;\n                    case \"scalar\":\n                        try {\n                            target[localName] = $525769473ca78db0$var$readScalar(field.T, jsonValue);\n                        } catch (e) {\n                            let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n                            throw new Error(m);\n                        }\n                        break;\n                }\n            }\n            return message;\n        },\n        writeMessage (message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (const member of type.fields.byMember()){\n                    let jsonValue;\n                    if (member.kind == \"oneof\") {\n                        const oneof = message[member.localName];\n                        if (oneof.value === undefined) continue;\n                        field = member.findField(oneof.case);\n                        if (!field) throw \"oneof case not found: \" + oneof.case;\n                        jsonValue = writeField(field, oneof.value, options);\n                    } else {\n                        field = member;\n                        jsonValue = writeField(field, message[field.localName], options);\n                    }\n                    if (jsonValue !== undefined) json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n                }\n            } catch (e) {\n                const m = field ? `cannot encode field ${type.typeName}.${field.name} to JSON` : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar: $525769473ca78db0$var$readScalar,\n        writeScalar: $525769473ca78db0$var$writeScalar,\n        debug: $525769473ca78db0$var$debugJsonValue\n    };\n}\nmodule.exports.makeJsonFormatCommon = $525769473ca78db0$var$makeJsonFormatCommon;\nfunction $525769473ca78db0$var$debugJsonValue(json) {\n    if (json === null) return \"null\";\n    switch(typeof json){\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return json.toString();\n    }\n}\n// May throw an error. If the error message is non-blank, it should be shown.\n// It is up to the caller to provide context.\nfunction $525769473ca78db0$var$readScalar(type, json) {\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch(type){\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case $9mVQy.ScalarType.DOUBLE:\n        case $9mVQy.ScalarType.FLOAT:\n            if (json === null) return 0.0;\n            if (json === \"NaN\") return Number.NaN;\n            if (json === \"Infinity\") return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\") return Number.NEGATIVE_INFINITY;\n            if (json === \"\") break;\n            if (typeof json == \"string\" && json.trim().length !== json.length) break;\n            if (typeof json != \"string\" && typeof json != \"number\") break;\n            const float = Number(json);\n            if (Number.isNaN(float)) break;\n            if (!Number.isFinite(float)) break;\n            if (type == $9mVQy.ScalarType.FLOAT) (0, $2RXcp.assertFloat32)(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case $9mVQy.ScalarType.INT32:\n        case $9mVQy.ScalarType.FIXED32:\n        case $9mVQy.ScalarType.SFIXED32:\n        case $9mVQy.ScalarType.SINT32:\n        case $9mVQy.ScalarType.UINT32:\n            if (json === null) return 0;\n            let int32;\n            if (typeof json == \"number\") int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length) int32 = Number(json);\n            }\n            if (int32 === undefined) break;\n            if (type == $9mVQy.ScalarType.UINT32) (0, $2RXcp.assertUInt32)(int32);\n            else (0, $2RXcp.assertInt32)(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case $9mVQy.ScalarType.INT64:\n        case $9mVQy.ScalarType.SFIXED64:\n        case $9mVQy.ScalarType.SINT64:\n            if (json === null) return $dkRgk.protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\") break;\n            return $dkRgk.protoInt64.parse(json);\n        case $9mVQy.ScalarType.FIXED64:\n        case $9mVQy.ScalarType.UINT64:\n            if (json === null) return $dkRgk.protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\") break;\n            return $dkRgk.protoInt64.uParse(json);\n        // bool:\n        case $9mVQy.ScalarType.BOOL:\n            if (json === null) return false;\n            if (typeof json !== \"boolean\") break;\n            return json;\n        // string:\n        case $9mVQy.ScalarType.STRING:\n            if (json === null) return \"\";\n            if (typeof json !== \"string\") break;\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            } catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case $9mVQy.ScalarType.BYTES:\n            if (json === null || json === \"\") return new Uint8Array(0);\n            if (typeof json !== \"string\") break;\n            return $9BP9U.protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction $525769473ca78db0$var$readEnum(type, json, ignoreUnknownFields) {\n    if (json === null) // proto3 requires 0 to be default value for all enums\n    return 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch(typeof json){\n        case \"number\":\n            if (Number.isInteger(json)) return json;\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value || ignoreUnknownFields) return value === null || value === void 0 ? void 0 : value.no;\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${$525769473ca78db0$var$debugJsonValue(json)}`);\n}\nfunction $525769473ca78db0$var$writeEnum(type, value, emitIntrinsicDefault, enumAsInteger) {\n    var _a;\n    if (value === undefined) return value;\n    if (value === 0 && !emitIntrinsicDefault) // proto3 requires 0 to be default value for all enums\n    return undefined;\n    if (enumAsInteger) return value;\n    if (type.typeName == \"google.protobuf.NullValue\") return null;\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction $525769473ca78db0$var$writeScalar(type, value, emitIntrinsicDefault) {\n    if (value === undefined) return undefined;\n    switch(type){\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case $9mVQy.ScalarType.INT32:\n        case $9mVQy.ScalarType.SFIXED32:\n        case $9mVQy.ScalarType.SINT32:\n        case $9mVQy.ScalarType.FIXED32:\n        case $9mVQy.ScalarType.UINT32:\n            (0, $2RXcp.assert)(typeof value == \"number\");\n            return value != 0 || emitIntrinsicDefault ? value : undefined;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case $9mVQy.ScalarType.FLOAT:\n        // assertFloat32(value);\n        case $9mVQy.ScalarType.DOUBLE:\n            (0, $2RXcp.assert)(typeof value == \"number\");\n            if (Number.isNaN(value)) return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY) return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY) return \"-Infinity\";\n            return value !== 0 || emitIntrinsicDefault ? value : undefined;\n        // string:\n        case $9mVQy.ScalarType.STRING:\n            (0, $2RXcp.assert)(typeof value == \"string\");\n            return value.length > 0 || emitIntrinsicDefault ? value : undefined;\n        // bool:\n        case $9mVQy.ScalarType.BOOL:\n            (0, $2RXcp.assert)(typeof value == \"boolean\");\n            return value || emitIntrinsicDefault ? value : undefined;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case $9mVQy.ScalarType.UINT64:\n        case $9mVQy.ScalarType.FIXED64:\n        case $9mVQy.ScalarType.INT64:\n        case $9mVQy.ScalarType.SFIXED64:\n        case $9mVQy.ScalarType.SINT64:\n            (0, $2RXcp.assert)(typeof value == \"bigint\" || typeof value == \"string\" || typeof value == \"number\");\n            // We use implicit conversion with `value != 0` to catch both 0n and \"0\"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return emitIntrinsicDefault || value != 0 ? value.toString(10) : undefined;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case $9mVQy.ScalarType.BYTES:\n            (0, $2RXcp.assert)(value instanceof Uint8Array);\n            return emitIntrinsicDefault || value.byteLength > 0 ? $9BP9U.protoBase64.enc(value) : undefined;\n    }\n}\n\n});\nparcelRequire.register(\"9BP9U\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.protoBase64 = void 0;\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */ // lookup table from base64 character to byte\nlet $6fef40d42480dd6e$var$encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet $6fef40d42480dd6e$var$decTable = [];\nfor(let i = 0; i < $6fef40d42480dd6e$var$encTable.length; i++)$6fef40d42480dd6e$var$decTable[$6fef40d42480dd6e$var$encTable[i].charCodeAt(0)] = i;\n// support base64url variants\n$6fef40d42480dd6e$var$decTable[\"-\".charCodeAt(0)] = $6fef40d42480dd6e$var$encTable.indexOf(\"+\");\n$6fef40d42480dd6e$var$decTable[\"_\".charCodeAt(0)] = $6fef40d42480dd6e$var$encTable.indexOf(\"/\");\nmodule.exports.protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */ dec (base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = base64Str.length * 3 / 4;\n        if (base64Str[base64Str.length - 2] == \"=\") es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\") es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, groupPos = 0, b, p = 0; // previous byte\n        for(let i = 0; i < base64Str.length; i++){\n            b = $6fef40d42480dd6e$var$decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) switch(base64Str[i]){\n                // @ts-ignore TS7029: Fallthrough case in switch\n                case \"=\":\n                    groupPos = 0; // reset state when padding found\n                // @ts-ignore TS7029: Fallthrough case in switch\n                case \"\\n\":\n                case \"\\r\":\n                case \"\t\":\n                case \" \":\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(\"invalid base64 string.\");\n            }\n            switch(groupPos){\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = (p & 3) << 6 | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1) throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */ enc (bytes) {\n        let base64 = \"\", groupPos = 0, b, p = 0; // carry over from previous byte\n        for(let i = 0; i < bytes.length; i++){\n            b = bytes[i];\n            switch(groupPos){\n                case 0:\n                    base64 += $6fef40d42480dd6e$var$encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += $6fef40d42480dd6e$var$encTable[p | b >> 4];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += $6fef40d42480dd6e$var$encTable[p | b >> 6];\n                    base64 += $6fef40d42480dd6e$var$encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += $6fef40d42480dd6e$var$encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1) base64 += \"=\";\n        }\n        return base64;\n    }\n};\n\n});\n\n\n\n\n\nparcelRequire.register(\"bM41u\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Timestamp = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */ class $89274c511e8ee683$var$Timestamp extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */ this.seconds = $dkRgk.protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */ this.nanos = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${$bkOG2.proto3.json.debug(json)}`);\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        this.seconds = $dkRgk.protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) this.nanos = parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000;\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        if (this.nanos < 0) throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            else if (nanosStr.substring(6) === \"000\") z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            else z = \".\" + nanosStr + \"Z\";\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return $89274c511e8ee683$var$Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new $89274c511e8ee683$var$Timestamp({\n            seconds: $dkRgk.protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: ms % 1000 * 1000000\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new $89274c511e8ee683$var$Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $89274c511e8ee683$var$Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $89274c511e8ee683$var$Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($89274c511e8ee683$var$Timestamp, a, b);\n    }\n}\nmodule.exports.Timestamp = $89274c511e8ee683$var$Timestamp;\n$89274c511e8ee683$var$Timestamp.runtime = $bkOG2.proto3;\n$89274c511e8ee683$var$Timestamp.typeName = \"google.protobuf.Timestamp\";\n$89274c511e8ee683$var$Timestamp.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"seconds\",\n            kind: \"scalar\",\n            T: 3 /* ScalarType.INT64 */ \n        },\n        {\n            no: 2,\n            name: \"nanos\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        }\n    ]);\n\n});\nparcelRequire.register(\"bkOG2\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.proto3 = void 0;\n\nvar $lZ0Gt = parcelRequire(\"lZ0Gt\");\n\nvar $2NGPb = parcelRequire(\"2NGPb\");\n\nvar $k7eOo = parcelRequire(\"k7eOo\");\n\nvar $4kBo5 = parcelRequire(\"4kBo5\");\n\nvar $hbbeO = parcelRequire(\"hbbeO\");\n\nvar $bQjda = parcelRequire(\"bQjda\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $gamDJ = parcelRequire(\"gamDJ\");\n\nvar $hxoip = parcelRequire(\"hxoip\");\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */ module.exports.proto3 = (0, $lZ0Gt.makeProtoRuntime)(\"proto3\", (0, $k7eOo.makeJsonFormatProto3)(), (0, $2NGPb.makeBinaryFormatProto3)(), Object.assign(Object.assign({}, (0, $4kBo5.makeUtilCommon)()), {\n    newFieldList (fields) {\n        return new $hbbeO.InternalFieldList(fields, $8408df614a3602e9$var$normalizeFieldInfosProto3);\n    },\n    initFields (target) {\n        for (const member of target.getType().fields.byMember()){\n            if (member.opt) continue;\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch(member.kind){\n                case \"oneof\":\n                    t[name] = {\n                        case: undefined\n                    };\n                    break;\n                case \"enum\":\n                    t[name] = 0;\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                    t[name] = (0, $bQjda.scalarDefaultValue)(member.T); // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n                    break;\n                case \"message\":\n                    break;\n            }\n        }\n    }\n}));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */ function $8408df614a3602e9$var$normalizeFieldInfosProto3(fieldInfos) {\n    var _a, _b, _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\" ? fieldInfos() : fieldInfos){\n        const f = field;\n        f.localName = (0, $hxoip.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0, $hxoip.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // From the proto3 language guide:\n        // > In proto3, repeated fields of scalar numeric types are packed by default.\n        // This information is incomplete - according to the conformance tests, BOOL\n        // and ENUM are packed by default as well. This means only STRING and BYTES\n        // are not packed by default, which makes sense because they are length-delimited.\n        f.packed = (_c = field.packed) !== null && _c !== void 0 ? _c : field.kind == \"enum\" || field.kind == \"scalar\" && field.T != $9mVQy.ScalarType.BYTES && field.T != $9mVQy.ScalarType.STRING;\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) o = new $gamDJ.InternalOneofInfo(ooname);\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n\n});\nparcelRequire.register(\"2NGPb\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeBinaryFormatProto3 = void 0;\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $cwy9l = parcelRequire(\"cwy9l\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, prefer-const, no-case-declarations */ function $20a1606ac2ada081$var$makeBinaryFormatProto3() {\n    return Object.assign(Object.assign({}, (0, $cwy9l.makeBinaryFormatCommon)()), {\n        writeMessage (message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()){\n                let value, repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    const oneof = message[field.oneof.localName];\n                    if (oneof.case !== localName) continue; // field is not selected, skip\n                    value = oneof.value;\n                } else value = message[localName];\n                switch(field.kind){\n                    case \"scalar\":\n                    case \"enum\":\n                        let scalarType = field.kind == \"enum\" ? $9mVQy.ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            if (field.packed) (0, $cwy9l.writePacked)(writer, scalarType, field.no, value);\n                            else for (const item of value)(0, $cwy9l.writeScalar)(writer, scalarType, field.no, item, true);\n                        } else if (value !== undefined) (0, $cwy9l.writeScalar)(writer, scalarType, field.no, value, !!field.oneof || field.opt);\n                        break;\n                    case \"message\":\n                        if (repeated) for (const item of value)(0, $cwy9l.writeMessageField)(writer, options, field.T, field.no, item);\n                        else (0, $cwy9l.writeMessageField)(writer, options, field.T, field.no, value);\n                        break;\n                    case \"map\":\n                        for (const [key, val] of Object.entries(value))(0, $cwy9l.writeMapEntry)(writer, options, field, key, val);\n                        break;\n                }\n            }\n            if (options.writeUnknownFields) this.writeUnknownFields(message, writer);\n            return writer;\n        }\n    });\n}\nmodule.exports.makeBinaryFormatProto3 = $20a1606ac2ada081$var$makeBinaryFormatProto3;\n\n});\n\nparcelRequire.register(\"k7eOo\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.makeJsonFormatProto3 = void 0;\n\nvar $2fBvO = parcelRequire(\"2fBvO\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $74iHn = parcelRequire(\"74iHn\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */ function $ea4ff369b0a5c0c7$var$makeJsonFormatProto3() {\n    return (0, $74iHn.makeJsonFormatCommon)((writeEnum, writeScalar)=>{\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch(field.V.kind){\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)){\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            (0, $2RXcp.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value))// JSON standard allows only (double quoted) string as property key\n                        jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)){\n                            (0, $2RXcp.assert)(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            (0, $2RXcp.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0 ? jsonObj : undefined;\n            } else if (field.repeated) {\n                const jsonArr = [];\n                switch(field.kind){\n                    case \"scalar\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push(writeScalar(field.T, value[i], true));\n                        break;\n                    case \"enum\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        break;\n                    case \"message\":\n                        for(let i = 0; i < value.length; i++)jsonArr.push((0, $2fBvO.wrapField)(field.T, value[i]).toJson(options));\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0 ? jsonArr : undefined;\n            } else switch(field.kind){\n                case \"scalar\":\n                    return writeScalar(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues);\n                case \"enum\":\n                    return writeEnum(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues, options.enumAsInteger);\n                case \"message\":\n                    return value !== undefined ? (0, $2fBvO.wrapField)(field.T, value).toJson(options) : undefined;\n            }\n        };\n    });\n}\nmodule.exports.makeJsonFormatProto3 = $ea4ff369b0a5c0c7$var$makeJsonFormatProto3;\n\n});\n\n\n\nparcelRequire.register(\"46Pek\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Duration = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n *\n *\n * @generated from message google.protobuf.Duration\n */ class $2fdf7631cfdd18df$var$Duration extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Signed seconds of the span of time. Must be from -315,576,000,000\n         * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n         * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n         *\n         * @generated from field: int64 seconds = 1;\n         */ this.seconds = $dkRgk.protoInt64.zero;\n        /**\n         * Signed fractions of a second at nanosecond resolution of the span\n         * of time. Durations less than one second are represented with a 0\n         * `seconds` field and a positive or negative `nanos` field. For durations\n         * of one second or more, a non-zero value for the `nanos` field must be\n         * of the same sign as the `seconds` field. Must be from -999,999,999\n         * to +999,999,999 inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */ this.nanos = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") throw new Error(`cannot decode google.protobuf.Duration from JSON: ${$bkOG2.proto3.json.debug(json)}`);\n        const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n        if (match === null) throw new Error(`cannot decode google.protobuf.Duration from JSON: ${$bkOG2.proto3.json.debug(json)}`);\n        const longSeconds = Number(match[1]);\n        if (longSeconds > 315576000000 || longSeconds < -315576000000) throw new Error(`cannot decode google.protobuf.Duration from JSON: ${$bkOG2.proto3.json.debug(json)}`);\n        this.seconds = $dkRgk.protoInt64.parse(longSeconds);\n        if (typeof match[2] == \"string\") {\n            const nanosStr = match[2] + \"0\".repeat(9 - match[2].length);\n            this.nanos = parseInt(nanosStr);\n            if (longSeconds < 0 || Object.is(longSeconds, -0)) this.nanos = -this.nanos;\n        }\n        return this;\n    }\n    toJson(options) {\n        if (Number(this.seconds) > 315576000000 || Number(this.seconds) < -315576000000) throw new Error(`cannot encode google.protobuf.Duration to JSON: value out of range`);\n        let text = this.seconds.toString();\n        if (this.nanos !== 0) {\n            let nanosStr = Math.abs(this.nanos).toString();\n            nanosStr = \"0\".repeat(9 - nanosStr.length) + nanosStr;\n            if (nanosStr.substring(3) === \"000000\") nanosStr = nanosStr.substring(0, 3);\n            else if (nanosStr.substring(6) === \"000\") nanosStr = nanosStr.substring(0, 6);\n            text += \".\" + nanosStr;\n            if (this.nanos < 0 && this.seconds === $dkRgk.protoInt64.zero) text = \"-\" + text;\n        }\n        return text + \"s\";\n    }\n    static fromBinary(bytes, options) {\n        return new $2fdf7631cfdd18df$var$Duration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $2fdf7631cfdd18df$var$Duration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $2fdf7631cfdd18df$var$Duration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($2fdf7631cfdd18df$var$Duration, a, b);\n    }\n}\nmodule.exports.Duration = $2fdf7631cfdd18df$var$Duration;\n$2fdf7631cfdd18df$var$Duration.runtime = $bkOG2.proto3;\n$2fdf7631cfdd18df$var$Duration.typeName = \"google.protobuf.Duration\";\n$2fdf7631cfdd18df$var$Duration.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"seconds\",\n            kind: \"scalar\",\n            T: 3 /* ScalarType.INT64 */ \n        },\n        {\n            no: 2,\n            name: \"nanos\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        }\n    ]);\n\n});\n\nparcelRequire.register(\"atJju\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Any = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *     // or ...\n *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n *       foo = any.unpack(Foo.getDefaultInstance());\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */ class $7a0fc3181a94ef5a$var$Any extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one \"/\" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g., leading \".\" is not accepted).\n         *\n         * In practice, teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However, for URLs which use the\n         * scheme `http`, `https`, or no scheme, one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided, `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format, or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL, or have them precompiled into a binary to avoid any\n         *   lookup. Therefore, binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release, and it is not used for type URLs beginning with\n         * type.googleapis.com.\n         *\n         * Schemes other than `http`, `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */ this.typeUrl = \"\";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */ this.value = new Uint8Array(0);\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === \"\") return {};\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith(\"google.protobuf.\") || json === null || Array.isArray(json) || typeof json !== \"object\") json = {\n            value: json\n        };\n        json[\"@type\"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json, options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != \"object\") throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n        if (Object.keys(json).length == 0) return this;\n        const typeUrl = json[\"@type\"];\n        if (typeof typeUrl != \"string\" || typeUrl == \"\") throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n        const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        let message;\n        if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) message = messageType.fromJson(json[\"value\"], options);\n        else {\n            const copy = Object.assign({}, json);\n            delete copy[\"@type\"];\n            message = messageType.fromJson(copy, options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) return false;\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === \"\") return undefined;\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) return undefined;\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === \"\") return false;\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = \"\";\n        if (typeof type === \"string\") typeName = type;\n        else typeName = type.typeName;\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) throw new Error(`invalid type url: ${url}`);\n        const slash = url.lastIndexOf(\"/\");\n        const name = slash > 0 ? url.substring(slash + 1) : url;\n        if (!name.length) throw new Error(`invalid type url: ${url}`);\n        return name;\n    }\n    static pack(message) {\n        const any = new $7a0fc3181a94ef5a$var$Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes, options) {\n        return new $7a0fc3181a94ef5a$var$Any().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $7a0fc3181a94ef5a$var$Any().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $7a0fc3181a94ef5a$var$Any().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($7a0fc3181a94ef5a$var$Any, a, b);\n    }\n}\nmodule.exports.Any = $7a0fc3181a94ef5a$var$Any;\n$7a0fc3181a94ef5a$var$Any.runtime = $bkOG2.proto3;\n$7a0fc3181a94ef5a$var$Any.typeName = \"google.protobuf.Any\";\n$7a0fc3181a94ef5a$var$Any.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"type_url\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 12 /* ScalarType.BYTES */ \n        }\n    ]);\n\n});\n\nparcelRequire.register(\"b6QY7\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Empty = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * A generic empty message that you can re-use to avoid defining duplicated\n * empty messages in your APIs. A typical example is to use it as the request\n * or the response type of an API method. For instance:\n *\n *     service Foo {\n *       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *     }\n *\n *\n * @generated from message google.protobuf.Empty\n */ class $816957bddc385ba9$var$Empty extends $daMMc.Message {\n    constructor(data){\n        super();\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $816957bddc385ba9$var$Empty().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $816957bddc385ba9$var$Empty().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $816957bddc385ba9$var$Empty().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($816957bddc385ba9$var$Empty, a, b);\n    }\n}\nmodule.exports.Empty = $816957bddc385ba9$var$Empty;\n$816957bddc385ba9$var$Empty.runtime = $bkOG2.proto3;\n$816957bddc385ba9$var$Empty.typeName = \"google.protobuf.Empty\";\n$816957bddc385ba9$var$Empty.fields = $bkOG2.proto3.util.newFieldList(()=>[]);\n\n});\n\nparcelRequire.register(\"cl1bT\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.FieldMask = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * `FieldMask` represents a set of symbolic field paths, for example:\n *\n *     paths: \"f.a\"\n *     paths: \"f.b.d\"\n *\n * Here `f` represents a field in some root message, `a` and `b`\n * fields in the message found in `f`, and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection, a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example, if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x,y and z\n * (their value will be set to the default, and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation, the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation, the\n * field mask applies directly to the response, but in case of a REST\n * list operation, the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method,\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case, the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values, the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation, new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation, then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example, given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: [\"f.b\", \"f.c\"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1, 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default, the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence, in order to reset all fields of a resource, provide a default\n * instance of the resource and set all fields in the mask, or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update, the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution, this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior, a specific service may require a client to always specify\n * a field mask, producing an error if not.\n *\n * As with get operations, the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case, the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON, a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example, consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: \"user.display_name\"\n *       paths: \"photo\"\n *     }\n *\n * In JSON, the same mask is represented as below:\n *\n *     {\n *       mask: \"user.displayName,photo\"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: \"name\"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: \"sub_message\"\n *     }\n *\n * Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths, and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */ class $8fb85eae0edc507c$var$FieldMask extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */ this.paths = [];\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for(let i = 0; i < snakeCase.length; i++){\n                let c = snakeCase.charAt(i);\n                switch(c){\n                    case \"_\":\n                        capNext = true;\n                        break;\n                    case \"0\":\n                    case \"1\":\n                    case \"2\":\n                    case \"3\":\n                    case \"4\":\n                    case \"5\":\n                    case \"6\":\n                    case \"7\":\n                    case \"8\":\n                    case \"9\":\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join(\"\");\n        }\n        return this.paths.map((p)=>{\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) throw new Error('cannot encode google.protobuf.FieldMask to JSON: lowerCamelCase of path name \"' + p + '\" is irreversible');\n            return protoCamelCase(p);\n        }).join(\",\");\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: \" + $bkOG2.proto3.json.debug(json));\n        if (json === \"\") return this;\n        function camelToSnake(str) {\n            if (str.includes(\"_\")) throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase\");\n            const sc = str.replace(/[A-Z]/g, (letter)=>\"_\" + letter.toLowerCase());\n            return sc[0] === \"_\" ? sc.substring(1) : sc;\n        }\n        this.paths = json.split(\",\").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $8fb85eae0edc507c$var$FieldMask().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $8fb85eae0edc507c$var$FieldMask().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $8fb85eae0edc507c$var$FieldMask().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($8fb85eae0edc507c$var$FieldMask, a, b);\n    }\n}\nmodule.exports.FieldMask = $8fb85eae0edc507c$var$FieldMask;\n$8fb85eae0edc507c$var$FieldMask.runtime = $bkOG2.proto3;\n$8fb85eae0edc507c$var$FieldMask.typeName = \"google.protobuf.FieldMask\";\n$8fb85eae0edc507c$var$FieldMask.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"paths\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        }\n    ]);\n\n});\n\nparcelRequire.register(\"6naYd\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.ListValue = module.exports.Value = module.exports.Struct = module.exports.NullValue = void 0;\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n\nvar $daMMc = parcelRequire(\"daMMc\");\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */ var $4a3d6681b0b39ffd$var$NullValue;\n(function(NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */ NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})($4a3d6681b0b39ffd$var$NullValue || (module.exports.NullValue = $4a3d6681b0b39ffd$var$NullValue = {}));\n// Retrieve enum metadata with: proto3.getEnumType(NullValue)\n$bkOG2.proto3.util.setEnumType($4a3d6681b0b39ffd$var$NullValue, \"google.protobuf.NullValue\", [\n    {\n        no: 0,\n        name: \"NULL_VALUE\"\n    }\n]);\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from message google.protobuf.Struct\n */ class $4a3d6681b0b39ffd$var$Struct extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Unordered map of dynamically typed values.\n         *\n         * @generated from field: map<string, google.protobuf.Value> fields = 1;\n         */ this.fields = {};\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        const json = {};\n        for (const [k, v] of Object.entries(this.fields))json[k] = v.toJson(options);\n        return json;\n    }\n    fromJson(json, options) {\n        if (typeof json != \"object\" || json == null || Array.isArray(json)) throw new Error(\"cannot decode google.protobuf.Struct from JSON \" + $bkOG2.proto3.json.debug(json));\n        for (const [k, v] of Object.entries(json))this.fields[k] = $4a3d6681b0b39ffd$var$Value.fromJson(v);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $4a3d6681b0b39ffd$var$Struct().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $4a3d6681b0b39ffd$var$Struct().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $4a3d6681b0b39ffd$var$Struct().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($4a3d6681b0b39ffd$var$Struct, a, b);\n    }\n}\nmodule.exports.Struct = $4a3d6681b0b39ffd$var$Struct;\n$4a3d6681b0b39ffd$var$Struct.runtime = $bkOG2.proto3;\n$4a3d6681b0b39ffd$var$Struct.typeName = \"google.protobuf.Struct\";\n$4a3d6681b0b39ffd$var$Struct.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"fields\",\n            kind: \"map\",\n            K: 9 /* ScalarType.STRING */ ,\n            V: {\n                kind: \"message\",\n                T: $4a3d6681b0b39ffd$var$Value\n            }\n        }\n    ]);\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from message google.protobuf.Value\n */ class $4a3d6681b0b39ffd$var$Value extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The kind of value.\n         *\n         * @generated from oneof google.protobuf.Value.kind\n         */ this.kind = {\n            case: undefined\n        };\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        switch(this.kind.case){\n            case \"nullValue\":\n                return null;\n            case \"numberValue\":\n                if (!Number.isFinite(this.kind.value)) throw new Error(\"google.protobuf.Value cannot be NaN or Infinity\");\n                return this.kind.value;\n            case \"boolValue\":\n                return this.kind.value;\n            case \"stringValue\":\n                return this.kind.value;\n            case \"structValue\":\n            case \"listValue\":\n                return this.kind.value.toJson(Object.assign(Object.assign({}, options), {\n                    emitDefaultValues: true\n                }));\n        }\n        throw new Error(\"google.protobuf.Value must have a value\");\n    }\n    fromJson(json, options) {\n        switch(typeof json){\n            case \"number\":\n                this.kind = {\n                    case: \"numberValue\",\n                    value: json\n                };\n                break;\n            case \"string\":\n                this.kind = {\n                    case: \"stringValue\",\n                    value: json\n                };\n                break;\n            case \"boolean\":\n                this.kind = {\n                    case: \"boolValue\",\n                    value: json\n                };\n                break;\n            case \"object\":\n                if (json === null) this.kind = {\n                    case: \"nullValue\",\n                    value: $4a3d6681b0b39ffd$var$NullValue.NULL_VALUE\n                };\n                else if (Array.isArray(json)) this.kind = {\n                    case: \"listValue\",\n                    value: $4a3d6681b0b39ffd$var$ListValue.fromJson(json)\n                };\n                else this.kind = {\n                    case: \"structValue\",\n                    value: $4a3d6681b0b39ffd$var$Struct.fromJson(json)\n                };\n                break;\n            default:\n                throw new Error(\"cannot decode google.protobuf.Value from JSON \" + $bkOG2.proto3.json.debug(json));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $4a3d6681b0b39ffd$var$Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $4a3d6681b0b39ffd$var$Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $4a3d6681b0b39ffd$var$Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($4a3d6681b0b39ffd$var$Value, a, b);\n    }\n}\nmodule.exports.Value = $4a3d6681b0b39ffd$var$Value;\n$4a3d6681b0b39ffd$var$Value.runtime = $bkOG2.proto3;\n$4a3d6681b0b39ffd$var$Value.typeName = \"google.protobuf.Value\";\n$4a3d6681b0b39ffd$var$Value.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"null_value\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($4a3d6681b0b39ffd$var$NullValue),\n            oneof: \"kind\"\n        },\n        {\n            no: 2,\n            name: \"number_value\",\n            kind: \"scalar\",\n            T: 1 /* ScalarType.DOUBLE */ ,\n            oneof: \"kind\"\n        },\n        {\n            no: 3,\n            name: \"string_value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            oneof: \"kind\"\n        },\n        {\n            no: 4,\n            name: \"bool_value\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ ,\n            oneof: \"kind\"\n        },\n        {\n            no: 5,\n            name: \"struct_value\",\n            kind: \"message\",\n            T: $4a3d6681b0b39ffd$var$Struct,\n            oneof: \"kind\"\n        },\n        {\n            no: 6,\n            name: \"list_value\",\n            kind: \"message\",\n            T: $4a3d6681b0b39ffd$var$ListValue,\n            oneof: \"kind\"\n        }\n    ]);\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from message google.protobuf.ListValue\n */ class $4a3d6681b0b39ffd$var$ListValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Repeated field of dynamically typed values.\n         *\n         * @generated from field: repeated google.protobuf.Value values = 1;\n         */ this.values = [];\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return this.values.map((v)=>v.toJson());\n    }\n    fromJson(json, options) {\n        if (!Array.isArray(json)) throw new Error(\"cannot decode google.protobuf.ListValue from JSON \" + $bkOG2.proto3.json.debug(json));\n        for (let e of json)this.values.push($4a3d6681b0b39ffd$var$Value.fromJson(e));\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $4a3d6681b0b39ffd$var$ListValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $4a3d6681b0b39ffd$var$ListValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $4a3d6681b0b39ffd$var$ListValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($4a3d6681b0b39ffd$var$ListValue, a, b);\n    }\n}\nmodule.exports.ListValue = $4a3d6681b0b39ffd$var$ListValue;\n$4a3d6681b0b39ffd$var$ListValue.runtime = $bkOG2.proto3;\n$4a3d6681b0b39ffd$var$ListValue.typeName = \"google.protobuf.ListValue\";\n$4a3d6681b0b39ffd$var$ListValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"values\",\n            kind: \"message\",\n            T: $4a3d6681b0b39ffd$var$Value,\n            repeated: true\n        }\n    ]);\n\n});\n\nparcelRequire.register(\"k2cpW\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.BytesValue = module.exports.StringValue = module.exports.BoolValue = module.exports.UInt32Value = module.exports.Int32Value = module.exports.UInt64Value = module.exports.Int64Value = module.exports.FloatValue = module.exports.DoubleValue = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */ class $e95da06101fe0922$var$DoubleValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */ this.value = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.DOUBLE, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.DOUBLE, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$DoubleValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$DoubleValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$DoubleValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$DoubleValue, a, b);\n    }\n}\nmodule.exports.DoubleValue = $e95da06101fe0922$var$DoubleValue;\n$e95da06101fe0922$var$DoubleValue.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$DoubleValue.typeName = \"google.protobuf.DoubleValue\";\n$e95da06101fe0922$var$DoubleValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 1 /* ScalarType.DOUBLE */ \n        }\n    ]);\n$e95da06101fe0922$var$DoubleValue.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$DoubleValue({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */ class $e95da06101fe0922$var$FloatValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */ this.value = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.FLOAT, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.FLOAT, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$FloatValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$FloatValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$FloatValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$FloatValue, a, b);\n    }\n}\nmodule.exports.FloatValue = $e95da06101fe0922$var$FloatValue;\n$e95da06101fe0922$var$FloatValue.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$FloatValue.typeName = \"google.protobuf.FloatValue\";\n$e95da06101fe0922$var$FloatValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 2 /* ScalarType.FLOAT */ \n        }\n    ]);\n$e95da06101fe0922$var$FloatValue.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$FloatValue({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */ class $e95da06101fe0922$var$Int64Value extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */ this.value = $dkRgk.protoInt64.zero;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.INT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.INT64, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$Int64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$Int64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$Int64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$Int64Value, a, b);\n    }\n}\nmodule.exports.Int64Value = $e95da06101fe0922$var$Int64Value;\n$e95da06101fe0922$var$Int64Value.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$Int64Value.typeName = \"google.protobuf.Int64Value\";\n$e95da06101fe0922$var$Int64Value.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 3 /* ScalarType.INT64 */ \n        }\n    ]);\n$e95da06101fe0922$var$Int64Value.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$Int64Value({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */ class $e95da06101fe0922$var$UInt64Value extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */ this.value = $dkRgk.protoInt64.zero;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.UINT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.UINT64, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$UInt64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$UInt64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$UInt64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$UInt64Value, a, b);\n    }\n}\nmodule.exports.UInt64Value = $e95da06101fe0922$var$UInt64Value;\n$e95da06101fe0922$var$UInt64Value.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$UInt64Value.typeName = \"google.protobuf.UInt64Value\";\n$e95da06101fe0922$var$UInt64Value.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 4 /* ScalarType.UINT64 */ \n        }\n    ]);\n$e95da06101fe0922$var$UInt64Value.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$UInt64Value({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */ class $e95da06101fe0922$var$Int32Value extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */ this.value = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.INT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.INT32, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$Int32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$Int32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$Int32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$Int32Value, a, b);\n    }\n}\nmodule.exports.Int32Value = $e95da06101fe0922$var$Int32Value;\n$e95da06101fe0922$var$Int32Value.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$Int32Value.typeName = \"google.protobuf.Int32Value\";\n$e95da06101fe0922$var$Int32Value.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        }\n    ]);\n$e95da06101fe0922$var$Int32Value.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$Int32Value({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */ class $e95da06101fe0922$var$UInt32Value extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */ this.value = 0;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.UINT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.UINT32, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$UInt32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$UInt32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$UInt32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$UInt32Value, a, b);\n    }\n}\nmodule.exports.UInt32Value = $e95da06101fe0922$var$UInt32Value;\n$e95da06101fe0922$var$UInt32Value.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$UInt32Value.typeName = \"google.protobuf.UInt32Value\";\n$e95da06101fe0922$var$UInt32Value.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 13 /* ScalarType.UINT32 */ \n        }\n    ]);\n$e95da06101fe0922$var$UInt32Value.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$UInt32Value({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */ class $e95da06101fe0922$var$BoolValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */ this.value = false;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.BOOL, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.BOOL, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$BoolValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$BoolValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$BoolValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$BoolValue, a, b);\n    }\n}\nmodule.exports.BoolValue = $e95da06101fe0922$var$BoolValue;\n$e95da06101fe0922$var$BoolValue.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$BoolValue.typeName = \"google.protobuf.BoolValue\";\n$e95da06101fe0922$var$BoolValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ \n        }\n    ]);\n$e95da06101fe0922$var$BoolValue.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$BoolValue({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */ class $e95da06101fe0922$var$StringValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */ this.value = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.STRING, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.STRING, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$StringValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$StringValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$StringValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$StringValue, a, b);\n    }\n}\nmodule.exports.StringValue = $e95da06101fe0922$var$StringValue;\n$e95da06101fe0922$var$StringValue.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$StringValue.typeName = \"google.protobuf.StringValue\";\n$e95da06101fe0922$var$StringValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n$e95da06101fe0922$var$StringValue.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$StringValue({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */ class $e95da06101fe0922$var$BytesValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */ this.value = new Uint8Array(0);\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return $bkOG2.proto3.json.writeScalar($9mVQy.ScalarType.BYTES, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = $bkOG2.proto3.json.readScalar($9mVQy.ScalarType.BYTES, json);\n        } catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) m += `: ${e.message}`;\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new $e95da06101fe0922$var$BytesValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e95da06101fe0922$var$BytesValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e95da06101fe0922$var$BytesValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e95da06101fe0922$var$BytesValue, a, b);\n    }\n}\nmodule.exports.BytesValue = $e95da06101fe0922$var$BytesValue;\n$e95da06101fe0922$var$BytesValue.runtime = $bkOG2.proto3;\n$e95da06101fe0922$var$BytesValue.typeName = \"google.protobuf.BytesValue\";\n$e95da06101fe0922$var$BytesValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"value\",\n            kind: \"scalar\",\n            T: 12 /* ScalarType.BYTES */ \n        }\n    ]);\n$e95da06101fe0922$var$BytesValue.fieldWrapper = {\n    wrapField (value) {\n        return new $e95da06101fe0922$var$BytesValue({\n            value: value\n        });\n    },\n    unwrapField (value) {\n        return value.value;\n    }\n};\n\n});\n\nparcelRequire.register(\"4UZCq\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.CodeGeneratorResponse_File = module.exports.CodeGeneratorResponse_Feature = module.exports.CodeGeneratorResponse = module.exports.CodeGeneratorRequest = module.exports.Version = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $aYdaj = parcelRequire(\"aYdaj\");\n\nvar $hi5gE = parcelRequire(\"hi5gE\");\n/**\n * The version number of protocol compiler.\n *\n * @generated from message google.protobuf.compiler.Version\n */ class $394c309a6c422b7e$var$Version extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $394c309a6c422b7e$var$Version().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $394c309a6c422b7e$var$Version().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $394c309a6c422b7e$var$Version().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($394c309a6c422b7e$var$Version, a, b);\n    }\n}\nmodule.exports.Version = $394c309a6c422b7e$var$Version;\n$394c309a6c422b7e$var$Version.runtime = $aYdaj.proto2;\n$394c309a6c422b7e$var$Version.typeName = \"google.protobuf.compiler.Version\";\n$394c309a6c422b7e$var$Version.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"major\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"minor\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 3,\n            name: \"patch\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ ,\n            opt: true\n        },\n        {\n            no: 4,\n            name: \"suffix\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        }\n    ]);\n/**\n * An encoded CodeGeneratorRequest is written to the plugin's stdin.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorRequest\n */ class $394c309a6c422b7e$var$CodeGeneratorRequest extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The .proto files that were explicitly listed on the command-line.  The\n         * code generator should generate code only for these files.  Each file's\n         * descriptor will be included in proto_file, below.\n         *\n         * @generated from field: repeated string file_to_generate = 1;\n         */ this.fileToGenerate = [];\n        /**\n         * FileDescriptorProtos for all files in files_to_generate and everything\n         * they import.  The files will appear in topological order, so each file\n         * appears before any file that imports it.\n         *\n         * protoc guarantees that all proto_files will be written after\n         * the fields above, even though this is not technically guaranteed by the\n         * protobuf wire format.  This theoretically could allow a plugin to stream\n         * in the FileDescriptorProtos and handle them one by one rather than read\n         * the entire set into memory at once.  However, as of this writing, this\n         * is not similarly optimized on protoc's end -- it will store all fields in\n         * memory at once before sending them to the plugin.\n         *\n         * Type names of fields and extensions in the FileDescriptorProto are always\n         * fully qualified.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_file = 15;\n         */ this.protoFile = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($394c309a6c422b7e$var$CodeGeneratorRequest, a, b);\n    }\n}\nmodule.exports.CodeGeneratorRequest = $394c309a6c422b7e$var$CodeGeneratorRequest;\n$394c309a6c422b7e$var$CodeGeneratorRequest.runtime = $aYdaj.proto2;\n$394c309a6c422b7e$var$CodeGeneratorRequest.typeName = \"google.protobuf.compiler.CodeGeneratorRequest\";\n$394c309a6c422b7e$var$CodeGeneratorRequest.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"file_to_generate\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        },\n        {\n            no: 2,\n            name: \"parameter\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 15,\n            name: \"proto_file\",\n            kind: \"message\",\n            T: $hi5gE.FileDescriptorProto,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"compiler_version\",\n            kind: \"message\",\n            T: $394c309a6c422b7e$var$Version,\n            opt: true\n        }\n    ]);\n/**\n * The plugin writes an encoded CodeGeneratorResponse to stdout.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse\n */ class $394c309a6c422b7e$var$CodeGeneratorResponse extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.compiler.CodeGeneratorResponse.File file = 15;\n         */ this.file = [];\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($394c309a6c422b7e$var$CodeGeneratorResponse, a, b);\n    }\n}\nmodule.exports.CodeGeneratorResponse = $394c309a6c422b7e$var$CodeGeneratorResponse;\n$394c309a6c422b7e$var$CodeGeneratorResponse.runtime = $aYdaj.proto2;\n$394c309a6c422b7e$var$CodeGeneratorResponse.typeName = \"google.protobuf.compiler.CodeGeneratorResponse\";\n$394c309a6c422b7e$var$CodeGeneratorResponse.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"error\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"supported_features\",\n            kind: \"scalar\",\n            T: 4 /* ScalarType.UINT64 */ ,\n            opt: true\n        },\n        {\n            no: 15,\n            name: \"file\",\n            kind: \"message\",\n            T: $394c309a6c422b7e$var$CodeGeneratorResponse_File,\n            repeated: true\n        }\n    ]);\n/**\n * Sync with code_generator.h.\n *\n * @generated from enum google.protobuf.compiler.CodeGeneratorResponse.Feature\n */ var $394c309a6c422b7e$var$CodeGeneratorResponse_Feature;\n(function(CodeGeneratorResponse_Feature) {\n    /**\n     * @generated from enum value: FEATURE_NONE = 0;\n     */ CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * @generated from enum value: FEATURE_PROTO3_OPTIONAL = 1;\n     */ CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"PROTO3_OPTIONAL\"] = 1] = \"PROTO3_OPTIONAL\";\n})($394c309a6c422b7e$var$CodeGeneratorResponse_Feature || (module.exports.CodeGeneratorResponse_Feature = $394c309a6c422b7e$var$CodeGeneratorResponse_Feature = {}));\n// Retrieve enum metadata with: proto2.getEnumType(CodeGeneratorResponse_Feature)\n$aYdaj.proto2.util.setEnumType($394c309a6c422b7e$var$CodeGeneratorResponse_Feature, \"google.protobuf.compiler.CodeGeneratorResponse.Feature\", [\n    {\n        no: 0,\n        name: \"FEATURE_NONE\"\n    },\n    {\n        no: 1,\n        name: \"FEATURE_PROTO3_OPTIONAL\"\n    }\n]);\n/**\n * Represents a single generated file.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse.File\n */ class $394c309a6c422b7e$var$CodeGeneratorResponse_File extends $daMMc.Message {\n    constructor(data){\n        super();\n        $aYdaj.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse_File().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse_File().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $394c309a6c422b7e$var$CodeGeneratorResponse_File().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $aYdaj.proto2.util.equals($394c309a6c422b7e$var$CodeGeneratorResponse_File, a, b);\n    }\n}\nmodule.exports.CodeGeneratorResponse_File = $394c309a6c422b7e$var$CodeGeneratorResponse_File;\n$394c309a6c422b7e$var$CodeGeneratorResponse_File.runtime = $aYdaj.proto2;\n$394c309a6c422b7e$var$CodeGeneratorResponse_File.typeName = \"google.protobuf.compiler.CodeGeneratorResponse.File\";\n$394c309a6c422b7e$var$CodeGeneratorResponse_File.fields = $aYdaj.proto2.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 2,\n            name: \"insertion_point\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 15,\n            name: \"content\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            opt: true\n        },\n        {\n            no: 16,\n            name: \"generated_code_info\",\n            kind: \"message\",\n            T: $hi5gE.GeneratedCodeInfo,\n            opt: true\n        }\n    ]);\n\n});\n\nparcelRequire.register(\"lpO7e\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Mixin = module.exports.Method = module.exports.Api = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $dwaHV = parcelRequire(\"dwaHV\");\n\nvar $jooX7 = parcelRequire(\"jooX7\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * Api is a light-weight descriptor for an API Interface.\n *\n * Interfaces are also described as \"protocol buffer services\" in some contexts,\n * such as by the \"service\" keyword in a .proto file, but they are different\n * from API Services, which represent a concrete implementation of an interface\n * as opposed to simply a description of methods and bindings. They are also\n * sometimes simply referred to as \"APIs\" in other contexts, such as the name of\n * this message itself. See https://cloud.google.com/apis/design/glossary for\n * detailed terminology.\n *\n * @generated from message google.protobuf.Api\n */ class $f972ceb5177e76cf$var$Api extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The fully qualified name of this interface, including package name\n         * followed by the interface's simple name.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * The methods of this interface, in unspecified order.\n         *\n         * @generated from field: repeated google.protobuf.Method methods = 2;\n         */ this.methods = [];\n        /**\n         * Any metadata attached to the interface.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */ this.options = [];\n        /**\n         * A version string for this interface. If specified, must have the form\n         * `major-version.minor-version`, as in `1.10`. If the minor version is\n         * omitted, it defaults to zero. If the entire version field is empty, the\n         * major version is derived from the package name, as outlined below. If the\n         * field is not empty, the version in the package name will be verified to be\n         * consistent with what is provided here.\n         *\n         * The versioning schema uses [semantic\n         * versioning](http://semver.org) where the major version number\n         * indicates a breaking change and the minor version an additive,\n         * non-breaking change. Both version numbers are signals to users\n         * what to expect from different versions, and should be carefully\n         * chosen based on the product plan.\n         *\n         * The major version is also reflected in the package name of the\n         * interface, which must end in `v<major-version>`, as in\n         * `google.feature.v1`. For major versions 0 and 1, the suffix can\n         * be omitted. Zero major versions must only be used for\n         * experimental, non-GA interfaces.\n         *\n         *\n         * @generated from field: string version = 4;\n         */ this.version = \"\";\n        /**\n         * Included interfaces. See [Mixin][].\n         *\n         * @generated from field: repeated google.protobuf.Mixin mixins = 6;\n         */ this.mixins = [];\n        /**\n         * The source syntax of the service.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */ this.syntax = $dwaHV.Syntax.PROTO2;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $f972ceb5177e76cf$var$Api().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $f972ceb5177e76cf$var$Api().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $f972ceb5177e76cf$var$Api().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($f972ceb5177e76cf$var$Api, a, b);\n    }\n}\nmodule.exports.Api = $f972ceb5177e76cf$var$Api;\n$f972ceb5177e76cf$var$Api.runtime = $bkOG2.proto3;\n$f972ceb5177e76cf$var$Api.typeName = \"google.protobuf.Api\";\n$f972ceb5177e76cf$var$Api.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"methods\",\n            kind: \"message\",\n            T: $f972ceb5177e76cf$var$Method,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $dwaHV.Option,\n            repeated: true\n        },\n        {\n            no: 4,\n            name: \"version\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 5,\n            name: \"source_context\",\n            kind: \"message\",\n            T: $jooX7.SourceContext\n        },\n        {\n            no: 6,\n            name: \"mixins\",\n            kind: \"message\",\n            T: $f972ceb5177e76cf$var$Mixin,\n            repeated: true\n        },\n        {\n            no: 7,\n            name: \"syntax\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($dwaHV.Syntax)\n        }\n    ]);\n/**\n * Method represents a method of an API interface.\n *\n * @generated from message google.protobuf.Method\n */ class $f972ceb5177e76cf$var$Method extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The simple name of this method.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * A URL of the input message type.\n         *\n         * @generated from field: string request_type_url = 2;\n         */ this.requestTypeUrl = \"\";\n        /**\n         * If true, the request is streamed.\n         *\n         * @generated from field: bool request_streaming = 3;\n         */ this.requestStreaming = false;\n        /**\n         * The URL of the output message type.\n         *\n         * @generated from field: string response_type_url = 4;\n         */ this.responseTypeUrl = \"\";\n        /**\n         * If true, the response is streamed.\n         *\n         * @generated from field: bool response_streaming = 5;\n         */ this.responseStreaming = false;\n        /**\n         * Any metadata attached to the method.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 6;\n         */ this.options = [];\n        /**\n         * The source syntax of this method.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */ this.syntax = $dwaHV.Syntax.PROTO2;\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $f972ceb5177e76cf$var$Method().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $f972ceb5177e76cf$var$Method().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $f972ceb5177e76cf$var$Method().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($f972ceb5177e76cf$var$Method, a, b);\n    }\n}\nmodule.exports.Method = $f972ceb5177e76cf$var$Method;\n$f972ceb5177e76cf$var$Method.runtime = $bkOG2.proto3;\n$f972ceb5177e76cf$var$Method.typeName = \"google.protobuf.Method\";\n$f972ceb5177e76cf$var$Method.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"request_type_url\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 3,\n            name: \"request_streaming\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ \n        },\n        {\n            no: 4,\n            name: \"response_type_url\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 5,\n            name: \"response_streaming\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ \n        },\n        {\n            no: 6,\n            name: \"options\",\n            kind: \"message\",\n            T: $dwaHV.Option,\n            repeated: true\n        },\n        {\n            no: 7,\n            name: \"syntax\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($dwaHV.Syntax)\n        }\n    ]);\n/**\n * Declares an API Interface to be included in this interface. The including\n * interface must redeclare all the methods from the included interface, but\n * documentation and options are inherited as follows:\n *\n * - If after comment and whitespace stripping, the documentation\n *   string of the redeclared method is empty, it will be inherited\n *   from the original method.\n *\n * - Each annotation belonging to the service config (http,\n *   visibility) which is not set in the redeclared method will be\n *   inherited.\n *\n * - If an http annotation is inherited, the path pattern will be\n *   modified as follows. Any version prefix will be replaced by the\n *   version of the including interface plus the [root][] path if\n *   specified.\n *\n * Example of a simple mixin:\n *\n *     package google.acl.v1;\n *     service AccessControl {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n *       }\n *     }\n *\n *     package google.storage.v2;\n *     service Storage {\n *       rpc GetAcl(GetAclRequest) returns (Acl);\n *\n *       // Get a data record.\n *       rpc GetData(GetDataRequest) returns (Data) {\n *         option (google.api.http).get = \"/v2/{resource=**}\";\n *       }\n *     }\n *\n * Example of a mixin configuration:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *\n * The mixin construct implies that all methods in `AccessControl` are\n * also declared with same name and request/response types in\n * `Storage`. A documentation generator or annotation processor will\n * see the effective `Storage.GetAcl` method after inherting\n * documentation and annotations as follows:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * Note how the version in the path pattern changed from `v1` to `v2`.\n *\n * If the `root` field in the mixin is specified, it should be a\n * relative path under which inherited HTTP paths are placed. Example:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *         root: acls\n *\n * This implies the following inherited HTTP annotation:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * @generated from message google.protobuf.Mixin\n */ class $f972ceb5177e76cf$var$Mixin extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The fully qualified name of the interface which is included.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * If non-empty specifies a path under which inherited HTTP paths\n         * are rooted.\n         *\n         * @generated from field: string root = 2;\n         */ this.root = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $f972ceb5177e76cf$var$Mixin().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $f972ceb5177e76cf$var$Mixin().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $f972ceb5177e76cf$var$Mixin().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($f972ceb5177e76cf$var$Mixin, a, b);\n    }\n}\nmodule.exports.Mixin = $f972ceb5177e76cf$var$Mixin;\n$f972ceb5177e76cf$var$Mixin.runtime = $bkOG2.proto3;\n$f972ceb5177e76cf$var$Mixin.typeName = \"google.protobuf.Mixin\";\n$f972ceb5177e76cf$var$Mixin.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"root\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n\n});\nparcelRequire.register(\"dwaHV\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Option = module.exports.EnumValue = module.exports.Enum = module.exports.Field_Cardinality = module.exports.Field_Kind = module.exports.Field = module.exports.Type = module.exports.Syntax = void 0;\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $jooX7 = parcelRequire(\"jooX7\");\n\nvar $atJju = parcelRequire(\"atJju\");\n/**\n * The syntax in which a protocol buffer element is defined.\n *\n * @generated from enum google.protobuf.Syntax\n */ var $9d7691cc8832da6f$var$Syntax;\n(function(Syntax) {\n    /**\n     * Syntax `proto2`.\n     *\n     * @generated from enum value: SYNTAX_PROTO2 = 0;\n     */ Syntax[Syntax[\"PROTO2\"] = 0] = \"PROTO2\";\n    /**\n     * Syntax `proto3`.\n     *\n     * @generated from enum value: SYNTAX_PROTO3 = 1;\n     */ Syntax[Syntax[\"PROTO3\"] = 1] = \"PROTO3\";\n    /**\n     * Syntax `editions`.\n     *\n     * @generated from enum value: SYNTAX_EDITIONS = 2;\n     */ Syntax[Syntax[\"EDITIONS\"] = 2] = \"EDITIONS\";\n})($9d7691cc8832da6f$var$Syntax || (module.exports.Syntax = $9d7691cc8832da6f$var$Syntax = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Syntax)\n$bkOG2.proto3.util.setEnumType($9d7691cc8832da6f$var$Syntax, \"google.protobuf.Syntax\", [\n    {\n        no: 0,\n        name: \"SYNTAX_PROTO2\"\n    },\n    {\n        no: 1,\n        name: \"SYNTAX_PROTO3\"\n    },\n    {\n        no: 2,\n        name: \"SYNTAX_EDITIONS\"\n    }\n]);\n/**\n * A protocol buffer message type.\n *\n * @generated from message google.protobuf.Type\n */ class $9d7691cc8832da6f$var$Type extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The fully qualified message name.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * The list of fields.\n         *\n         * @generated from field: repeated google.protobuf.Field fields = 2;\n         */ this.fields = [];\n        /**\n         * The list of types appearing in `oneof` definitions in this type.\n         *\n         * @generated from field: repeated string oneofs = 3;\n         */ this.oneofs = [];\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 4;\n         */ this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 6;\n         */ this.syntax = $9d7691cc8832da6f$var$Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 7;\n         */ this.edition = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $9d7691cc8832da6f$var$Type().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $9d7691cc8832da6f$var$Type().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $9d7691cc8832da6f$var$Type().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($9d7691cc8832da6f$var$Type, a, b);\n    }\n}\nmodule.exports.Type = $9d7691cc8832da6f$var$Type;\n$9d7691cc8832da6f$var$Type.runtime = $bkOG2.proto3;\n$9d7691cc8832da6f$var$Type.typeName = \"google.protobuf.Type\";\n$9d7691cc8832da6f$var$Type.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"fields\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$Field,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"oneofs\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ ,\n            repeated: true\n        },\n        {\n            no: 4,\n            name: \"options\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$Option,\n            repeated: true\n        },\n        {\n            no: 5,\n            name: \"source_context\",\n            kind: \"message\",\n            T: $jooX7.SourceContext\n        },\n        {\n            no: 6,\n            name: \"syntax\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($9d7691cc8832da6f$var$Syntax)\n        },\n        {\n            no: 7,\n            name: \"edition\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n/**\n * A single field of a message type.\n *\n * @generated from message google.protobuf.Field\n */ class $9d7691cc8832da6f$var$Field extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The field type.\n         *\n         * @generated from field: google.protobuf.Field.Kind kind = 1;\n         */ this.kind = $9d7691cc8832da6f$var$Field_Kind.TYPE_UNKNOWN;\n        /**\n         * The field cardinality.\n         *\n         * @generated from field: google.protobuf.Field.Cardinality cardinality = 2;\n         */ this.cardinality = $9d7691cc8832da6f$var$Field_Cardinality.UNKNOWN;\n        /**\n         * The field number.\n         *\n         * @generated from field: int32 number = 3;\n         */ this.number = 0;\n        /**\n         * The field name.\n         *\n         * @generated from field: string name = 4;\n         */ this.name = \"\";\n        /**\n         * The field type URL, without the scheme, for message or enumeration\n         * types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n         *\n         * @generated from field: string type_url = 6;\n         */ this.typeUrl = \"\";\n        /**\n         * The index of the field type in `Type.oneofs`, for message or enumeration\n         * types. The first type has index 1; zero means the type is not in the list.\n         *\n         * @generated from field: int32 oneof_index = 7;\n         */ this.oneofIndex = 0;\n        /**\n         * Whether to use alternative packed wire representation.\n         *\n         * @generated from field: bool packed = 8;\n         */ this.packed = false;\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 9;\n         */ this.options = [];\n        /**\n         * The field JSON name.\n         *\n         * @generated from field: string json_name = 10;\n         */ this.jsonName = \"\";\n        /**\n         * The string value of the default value of this field. Proto2 syntax only.\n         *\n         * @generated from field: string default_value = 11;\n         */ this.defaultValue = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $9d7691cc8832da6f$var$Field().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $9d7691cc8832da6f$var$Field().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $9d7691cc8832da6f$var$Field().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($9d7691cc8832da6f$var$Field, a, b);\n    }\n}\nmodule.exports.Field = $9d7691cc8832da6f$var$Field;\n$9d7691cc8832da6f$var$Field.runtime = $bkOG2.proto3;\n$9d7691cc8832da6f$var$Field.typeName = \"google.protobuf.Field\";\n$9d7691cc8832da6f$var$Field.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"kind\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($9d7691cc8832da6f$var$Field_Kind)\n        },\n        {\n            no: 2,\n            name: \"cardinality\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($9d7691cc8832da6f$var$Field_Cardinality)\n        },\n        {\n            no: 3,\n            name: \"number\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        },\n        {\n            no: 4,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 6,\n            name: \"type_url\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 7,\n            name: \"oneof_index\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        },\n        {\n            no: 8,\n            name: \"packed\",\n            kind: \"scalar\",\n            T: 8 /* ScalarType.BOOL */ \n        },\n        {\n            no: 9,\n            name: \"options\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$Option,\n            repeated: true\n        },\n        {\n            no: 10,\n            name: \"json_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 11,\n            name: \"default_value\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n/**\n * Basic field types.\n *\n * @generated from enum google.protobuf.Field.Kind\n */ var $9d7691cc8832da6f$var$Field_Kind;\n(function(Field_Kind) {\n    /**\n     * Field type unknown.\n     *\n     * @generated from enum value: TYPE_UNKNOWN = 0;\n     */ Field_Kind[Field_Kind[\"TYPE_UNKNOWN\"] = 0] = \"TYPE_UNKNOWN\";\n    /**\n     * Field type double.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */ Field_Kind[Field_Kind[\"TYPE_DOUBLE\"] = 1] = \"TYPE_DOUBLE\";\n    /**\n     * Field type float.\n     *\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */ Field_Kind[Field_Kind[\"TYPE_FLOAT\"] = 2] = \"TYPE_FLOAT\";\n    /**\n     * Field type int64.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */ Field_Kind[Field_Kind[\"TYPE_INT64\"] = 3] = \"TYPE_INT64\";\n    /**\n     * Field type uint64.\n     *\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */ Field_Kind[Field_Kind[\"TYPE_UINT64\"] = 4] = \"TYPE_UINT64\";\n    /**\n     * Field type int32.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */ Field_Kind[Field_Kind[\"TYPE_INT32\"] = 5] = \"TYPE_INT32\";\n    /**\n     * Field type fixed64.\n     *\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */ Field_Kind[Field_Kind[\"TYPE_FIXED64\"] = 6] = \"TYPE_FIXED64\";\n    /**\n     * Field type fixed32.\n     *\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */ Field_Kind[Field_Kind[\"TYPE_FIXED32\"] = 7] = \"TYPE_FIXED32\";\n    /**\n     * Field type bool.\n     *\n     * @generated from enum value: TYPE_BOOL = 8;\n     */ Field_Kind[Field_Kind[\"TYPE_BOOL\"] = 8] = \"TYPE_BOOL\";\n    /**\n     * Field type string.\n     *\n     * @generated from enum value: TYPE_STRING = 9;\n     */ Field_Kind[Field_Kind[\"TYPE_STRING\"] = 9] = \"TYPE_STRING\";\n    /**\n     * Field type group. Proto2 syntax only, and deprecated.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */ Field_Kind[Field_Kind[\"TYPE_GROUP\"] = 10] = \"TYPE_GROUP\";\n    /**\n     * Field type message.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */ Field_Kind[Field_Kind[\"TYPE_MESSAGE\"] = 11] = \"TYPE_MESSAGE\";\n    /**\n     * Field type bytes.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */ Field_Kind[Field_Kind[\"TYPE_BYTES\"] = 12] = \"TYPE_BYTES\";\n    /**\n     * Field type uint32.\n     *\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */ Field_Kind[Field_Kind[\"TYPE_UINT32\"] = 13] = \"TYPE_UINT32\";\n    /**\n     * Field type enum.\n     *\n     * @generated from enum value: TYPE_ENUM = 14;\n     */ Field_Kind[Field_Kind[\"TYPE_ENUM\"] = 14] = \"TYPE_ENUM\";\n    /**\n     * Field type sfixed32.\n     *\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */ Field_Kind[Field_Kind[\"TYPE_SFIXED32\"] = 15] = \"TYPE_SFIXED32\";\n    /**\n     * Field type sfixed64.\n     *\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */ Field_Kind[Field_Kind[\"TYPE_SFIXED64\"] = 16] = \"TYPE_SFIXED64\";\n    /**\n     * Field type sint32.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */ Field_Kind[Field_Kind[\"TYPE_SINT32\"] = 17] = \"TYPE_SINT32\";\n    /**\n     * Field type sint64.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */ Field_Kind[Field_Kind[\"TYPE_SINT64\"] = 18] = \"TYPE_SINT64\";\n})($9d7691cc8832da6f$var$Field_Kind || (module.exports.Field_Kind = $9d7691cc8832da6f$var$Field_Kind = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Kind)\n$bkOG2.proto3.util.setEnumType($9d7691cc8832da6f$var$Field_Kind, \"google.protobuf.Field.Kind\", [\n    {\n        no: 0,\n        name: \"TYPE_UNKNOWN\"\n    },\n    {\n        no: 1,\n        name: \"TYPE_DOUBLE\"\n    },\n    {\n        no: 2,\n        name: \"TYPE_FLOAT\"\n    },\n    {\n        no: 3,\n        name: \"TYPE_INT64\"\n    },\n    {\n        no: 4,\n        name: \"TYPE_UINT64\"\n    },\n    {\n        no: 5,\n        name: \"TYPE_INT32\"\n    },\n    {\n        no: 6,\n        name: \"TYPE_FIXED64\"\n    },\n    {\n        no: 7,\n        name: \"TYPE_FIXED32\"\n    },\n    {\n        no: 8,\n        name: \"TYPE_BOOL\"\n    },\n    {\n        no: 9,\n        name: \"TYPE_STRING\"\n    },\n    {\n        no: 10,\n        name: \"TYPE_GROUP\"\n    },\n    {\n        no: 11,\n        name: \"TYPE_MESSAGE\"\n    },\n    {\n        no: 12,\n        name: \"TYPE_BYTES\"\n    },\n    {\n        no: 13,\n        name: \"TYPE_UINT32\"\n    },\n    {\n        no: 14,\n        name: \"TYPE_ENUM\"\n    },\n    {\n        no: 15,\n        name: \"TYPE_SFIXED32\"\n    },\n    {\n        no: 16,\n        name: \"TYPE_SFIXED64\"\n    },\n    {\n        no: 17,\n        name: \"TYPE_SINT32\"\n    },\n    {\n        no: 18,\n        name: \"TYPE_SINT64\"\n    }\n]);\n/**\n * Whether a field is optional, required, or repeated.\n *\n * @generated from enum google.protobuf.Field.Cardinality\n */ var $9d7691cc8832da6f$var$Field_Cardinality;\n(function(Field_Cardinality) {\n    /**\n     * For fields with unknown cardinality.\n     *\n     * @generated from enum value: CARDINALITY_UNKNOWN = 0;\n     */ Field_Cardinality[Field_Cardinality[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * For optional fields.\n     *\n     * @generated from enum value: CARDINALITY_OPTIONAL = 1;\n     */ Field_Cardinality[Field_Cardinality[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * For required fields. Proto2 syntax only.\n     *\n     * @generated from enum value: CARDINALITY_REQUIRED = 2;\n     */ Field_Cardinality[Field_Cardinality[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * For repeated fields.\n     *\n     * @generated from enum value: CARDINALITY_REPEATED = 3;\n     */ Field_Cardinality[Field_Cardinality[\"REPEATED\"] = 3] = \"REPEATED\";\n})($9d7691cc8832da6f$var$Field_Cardinality || (module.exports.Field_Cardinality = $9d7691cc8832da6f$var$Field_Cardinality = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Cardinality)\n$bkOG2.proto3.util.setEnumType($9d7691cc8832da6f$var$Field_Cardinality, \"google.protobuf.Field.Cardinality\", [\n    {\n        no: 0,\n        name: \"CARDINALITY_UNKNOWN\"\n    },\n    {\n        no: 1,\n        name: \"CARDINALITY_OPTIONAL\"\n    },\n    {\n        no: 2,\n        name: \"CARDINALITY_REQUIRED\"\n    },\n    {\n        no: 3,\n        name: \"CARDINALITY_REPEATED\"\n    }\n]);\n/**\n * Enum type definition.\n *\n * @generated from message google.protobuf.Enum\n */ class $9d7691cc8832da6f$var$Enum extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Enum type name.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * Enum value definitions.\n         *\n         * @generated from field: repeated google.protobuf.EnumValue enumvalue = 2;\n         */ this.enumvalue = [];\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */ this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 5;\n         */ this.syntax = $9d7691cc8832da6f$var$Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 6;\n         */ this.edition = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $9d7691cc8832da6f$var$Enum().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $9d7691cc8832da6f$var$Enum().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $9d7691cc8832da6f$var$Enum().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($9d7691cc8832da6f$var$Enum, a, b);\n    }\n}\nmodule.exports.Enum = $9d7691cc8832da6f$var$Enum;\n$9d7691cc8832da6f$var$Enum.runtime = $bkOG2.proto3;\n$9d7691cc8832da6f$var$Enum.typeName = \"google.protobuf.Enum\";\n$9d7691cc8832da6f$var$Enum.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"enumvalue\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$EnumValue,\n            repeated: true\n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$Option,\n            repeated: true\n        },\n        {\n            no: 4,\n            name: \"source_context\",\n            kind: \"message\",\n            T: $jooX7.SourceContext\n        },\n        {\n            no: 5,\n            name: \"syntax\",\n            kind: \"enum\",\n            T: $bkOG2.proto3.getEnumType($9d7691cc8832da6f$var$Syntax)\n        },\n        {\n            no: 6,\n            name: \"edition\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n/**\n * Enum value definition.\n *\n * @generated from message google.protobuf.EnumValue\n */ class $9d7691cc8832da6f$var$EnumValue extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * Enum value name.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        /**\n         * Enum value number.\n         *\n         * @generated from field: int32 number = 2;\n         */ this.number = 0;\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */ this.options = [];\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $9d7691cc8832da6f$var$EnumValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $9d7691cc8832da6f$var$EnumValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $9d7691cc8832da6f$var$EnumValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($9d7691cc8832da6f$var$EnumValue, a, b);\n    }\n}\nmodule.exports.EnumValue = $9d7691cc8832da6f$var$EnumValue;\n$9d7691cc8832da6f$var$EnumValue.runtime = $bkOG2.proto3;\n$9d7691cc8832da6f$var$EnumValue.typeName = \"google.protobuf.EnumValue\";\n$9d7691cc8832da6f$var$EnumValue.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"number\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        },\n        {\n            no: 3,\n            name: \"options\",\n            kind: \"message\",\n            T: $9d7691cc8832da6f$var$Option,\n            repeated: true\n        }\n    ]);\n/**\n * A protocol buffer option, which can be attached to a message, field,\n * enumeration, etc.\n *\n * @generated from message google.protobuf.Option\n */ class $9d7691cc8832da6f$var$Option extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The option's name. For protobuf built-in options (options defined in\n         * descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n         * For custom options, it should be the fully-qualified name. For example,\n         * `\"google.api.http\"`.\n         *\n         * @generated from field: string name = 1;\n         */ this.name = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $9d7691cc8832da6f$var$Option().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $9d7691cc8832da6f$var$Option().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $9d7691cc8832da6f$var$Option().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($9d7691cc8832da6f$var$Option, a, b);\n    }\n}\nmodule.exports.Option = $9d7691cc8832da6f$var$Option;\n$9d7691cc8832da6f$var$Option.runtime = $bkOG2.proto3;\n$9d7691cc8832da6f$var$Option.typeName = \"google.protobuf.Option\";\n$9d7691cc8832da6f$var$Option.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 2,\n            name: \"value\",\n            kind: \"message\",\n            T: $atJju.Any\n        }\n    ]);\n\n});\nparcelRequire.register(\"jooX7\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.SourceContext = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n/**\n * `SourceContext` represents information about the source of a\n * protobuf element, like the file in which it is defined.\n *\n * @generated from message google.protobuf.SourceContext\n */ class $e1e39d48590b248e$var$SourceContext extends $daMMc.Message {\n    constructor(data){\n        super();\n        /**\n         * The path-qualified name of the .proto file that contained the associated\n         * protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n         *\n         * @generated from field: string file_name = 1;\n         */ this.fileName = \"\";\n        $bkOG2.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $e1e39d48590b248e$var$SourceContext().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e1e39d48590b248e$var$SourceContext().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e1e39d48590b248e$var$SourceContext().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $bkOG2.proto3.util.equals($e1e39d48590b248e$var$SourceContext, a, b);\n    }\n}\nmodule.exports.SourceContext = $e1e39d48590b248e$var$SourceContext;\n$e1e39d48590b248e$var$SourceContext.runtime = $bkOG2.proto3;\n$e1e39d48590b248e$var$SourceContext.typeName = \"google.protobuf.SourceContext\";\n$e1e39d48590b248e$var$SourceContext.fields = $bkOG2.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"file_name\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        }\n    ]);\n\n});\n\n\n\nparcelRequire.register(\"bAe87\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.headerXGrpcWeb = module.exports.headerXUserAgent = module.exports.headerStatusDetailsBin = module.exports.headerGrpcMessage = module.exports.headerGrpcStatus = module.exports.headerTimeout = module.exports.headerAcceptEncoding = module.exports.headerEncoding = module.exports.headerContentType = void 0;\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\nObject.defineProperty(module.exports, \"headerContentType\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerContentType;\n    }\n});\nObject.defineProperty(module.exports, \"headerEncoding\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerEncoding;\n    }\n});\nObject.defineProperty(module.exports, \"headerAcceptEncoding\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerAcceptEncoding;\n    }\n});\nObject.defineProperty(module.exports, \"headerTimeout\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerTimeout;\n    }\n});\nObject.defineProperty(module.exports, \"headerGrpcStatus\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerGrpcStatus;\n    }\n});\nObject.defineProperty(module.exports, \"headerGrpcMessage\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerGrpcMessage;\n    }\n});\nObject.defineProperty(module.exports, \"headerStatusDetailsBin\", {\n    enumerable: true,\n    get: function() {\n        return $d5YNv.headerStatusDetailsBin;\n    }\n});\n/**\n * gRPC-web does not use the standard header User-Agent.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.headerXUserAgent = \"X-User-Agent\";\n/**\n * The canonical grpc/grpc-web JavaScript implementation sets\n * this request header with value \"1\".\n * Some servers may rely on the header to identify gRPC-web\n * requests. For example the proxy by improbable:\n * https://github.com/improbable-eng/grpc-web/blob/53aaf4cdc0fede7103c1b06f0cfc560c003a5c41/go/grpcweb/wrapper.go#L231\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.headerXGrpcWeb = \"X-Grpc-Web\";\n\n});\nparcelRequire.register(\"d5YNv\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.headerMessageType = module.exports.headerUserAgent = module.exports.headerStatusDetailsBin = module.exports.headerGrpcMessage = module.exports.headerGrpcStatus = module.exports.headerTimeout = module.exports.headerAcceptEncoding = module.exports.headerEncoding = module.exports.headerContentType = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.headerContentType = \"Content-Type\";\nmodule.exports.headerEncoding = \"Grpc-Encoding\";\nmodule.exports.headerAcceptEncoding = \"Grpc-Accept-Encoding\";\nmodule.exports.headerTimeout = \"Grpc-Timeout\";\nmodule.exports.headerGrpcStatus = \"Grpc-Status\";\nmodule.exports.headerGrpcMessage = \"Grpc-Message\";\nmodule.exports.headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nmodule.exports.headerUserAgent = \"User-Agent\";\nmodule.exports.headerMessageType = \"Grpc-Message-Type\";\n\n});\n\n\nparcelRequire.register(\"2vMsJ\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.headerProtocolVersion = module.exports.headerTimeout = module.exports.headerStreamAcceptEncoding = module.exports.headerUnaryAcceptEncoding = module.exports.headerStreamEncoding = module.exports.headerUnaryEncoding = module.exports.headerUnaryContentLength = module.exports.headerContentType = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.headerContentType = \"Content-Type\";\nmodule.exports.headerUnaryContentLength = \"Content-Length\";\nmodule.exports.headerUnaryEncoding = \"Content-Encoding\";\nmodule.exports.headerStreamEncoding = \"Connect-Content-Encoding\";\nmodule.exports.headerUnaryAcceptEncoding = \"Accept-Encoding\";\nmodule.exports.headerStreamAcceptEncoding = \"Connect-Accept-Encoding\";\nmodule.exports.headerTimeout = \"Connect-Timeout-Ms\";\nmodule.exports.headerProtocolVersion = \"Connect-Protocol-Version\";\n\n});\n\nparcelRequire.register(\"lKy3O\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.uResponseMethodNotAllowed = module.exports.uResponseUnsupportedMediaType = module.exports.uResponseNotFound = module.exports.uResponseOk = module.exports.assertByteStreamRequest = module.exports.createDeadlineSignal = module.exports.getAbortSignalReason = module.exports.createLinkedAbortController = module.exports.transformInvokeImplementation = module.exports.invokeUnaryImplementation = module.exports.contentTypeMatcher = module.exports.untilFirst = module.exports.readAllBytes = module.exports.createAsyncIterable = module.exports.createWritableIterable = module.exports.makeIterableAbortable = module.exports.sinkAllBytes = module.exports.sinkAll = module.exports.pipeTo = module.exports.transformParseEnvelope = module.exports.transformSerializeEnvelope = module.exports.transformSplitEnvelope = module.exports.transformJoinEnvelopes = module.exports.transformDecompressEnvelope = module.exports.transformCompressEnvelope = module.exports.transformNormalizeMessage = module.exports.transformReadAllBytes = module.exports.transformPrepend = module.exports.transformAppend = module.exports.transformCatchFinally = module.exports.transformCatch = module.exports.pipe = module.exports.compressionNegotiate = module.exports.compressedFlag = module.exports.createEnvelopeReadableStream = module.exports.envelopeCompress = module.exports.envelopeDecompress = module.exports.encodeEnvelopes = module.exports.encodeEnvelope = module.exports.validateReadWriteMaxBytes = module.exports.limitSerialization = module.exports.getJsonOptions = module.exports.createClientMethodSerializers = module.exports.createMethodSerializationLookup = module.exports.runStreamingCall = module.exports.runUnaryCall = module.exports.createFetchHandler = module.exports.createFetchClient = module.exports.createUniversalHandlerClient = module.exports.createMethodUrl = void 0;\nmodule.exports.createUniversalMethodHandler = module.exports.createUniversalServiceHandlers = module.exports.validateUniversalHandlerOptions = module.exports.uResponseVersionNotSupported = void 0;\n\nvar $3xity = parcelRequire(\"3xity\");\nObject.defineProperty(module.exports, \"createMethodUrl\", {\n    enumerable: true,\n    get: function() {\n        return $3xity.createMethodUrl;\n    }\n});\n\nvar $dVUld = parcelRequire(\"dVUld\");\nObject.defineProperty(module.exports, \"createUniversalHandlerClient\", {\n    enumerable: true,\n    get: function() {\n        return $dVUld.createUniversalHandlerClient;\n    }\n});\n\nvar $fn7mU = parcelRequire(\"fn7mU\");\nObject.defineProperty(module.exports, \"createFetchClient\", {\n    enumerable: true,\n    get: function() {\n        return $fn7mU.createFetchClient;\n    }\n});\nObject.defineProperty(module.exports, \"createFetchHandler\", {\n    enumerable: true,\n    get: function() {\n        return $fn7mU.createFetchHandler;\n    }\n});\n\nvar $85AEY = parcelRequire(\"85AEY\");\nObject.defineProperty(module.exports, \"runUnaryCall\", {\n    enumerable: true,\n    get: function() {\n        return $85AEY.runUnaryCall;\n    }\n});\nObject.defineProperty(module.exports, \"runStreamingCall\", {\n    enumerable: true,\n    get: function() {\n        return $85AEY.runStreamingCall;\n    }\n});\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\nObject.defineProperty(module.exports, \"createMethodSerializationLookup\", {\n    enumerable: true,\n    get: function() {\n        return $3mgpQ.createMethodSerializationLookup;\n    }\n});\nObject.defineProperty(module.exports, \"createClientMethodSerializers\", {\n    enumerable: true,\n    get: function() {\n        return $3mgpQ.createClientMethodSerializers;\n    }\n});\nObject.defineProperty(module.exports, \"getJsonOptions\", {\n    enumerable: true,\n    get: function() {\n        return $3mgpQ.getJsonOptions;\n    }\n});\nObject.defineProperty(module.exports, \"limitSerialization\", {\n    enumerable: true,\n    get: function() {\n        return $3mgpQ.limitSerialization;\n    }\n});\n\nvar $cKeEL = parcelRequire(\"cKeEL\");\nObject.defineProperty(module.exports, \"validateReadWriteMaxBytes\", {\n    enumerable: true,\n    get: function() {\n        return $cKeEL.validateReadWriteMaxBytes;\n    }\n});\n\nvar $bO3lh = parcelRequire(\"bO3lh\");\nObject.defineProperty(module.exports, \"encodeEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $bO3lh.encodeEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"encodeEnvelopes\", {\n    enumerable: true,\n    get: function() {\n        return $bO3lh.encodeEnvelopes;\n    }\n});\nObject.defineProperty(module.exports, \"envelopeDecompress\", {\n    enumerable: true,\n    get: function() {\n        return $bO3lh.envelopeDecompress;\n    }\n});\nObject.defineProperty(module.exports, \"envelopeCompress\", {\n    enumerable: true,\n    get: function() {\n        return $bO3lh.envelopeCompress;\n    }\n});\nObject.defineProperty(module.exports, \"createEnvelopeReadableStream\", {\n    enumerable: true,\n    get: function() {\n        return $bO3lh.createEnvelopeReadableStream;\n    }\n});\n\nvar $cFI6K = parcelRequire(\"cFI6K\");\nObject.defineProperty(module.exports, \"compressedFlag\", {\n    enumerable: true,\n    get: function() {\n        return $cFI6K.compressedFlag;\n    }\n});\nObject.defineProperty(module.exports, \"compressionNegotiate\", {\n    enumerable: true,\n    get: function() {\n        return $cFI6K.compressionNegotiate;\n    }\n});\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\nObject.defineProperty(module.exports, \"pipe\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.pipe;\n    }\n});\nObject.defineProperty(module.exports, \"transformCatch\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformCatch;\n    }\n});\nObject.defineProperty(module.exports, \"transformCatchFinally\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformCatchFinally;\n    }\n});\nObject.defineProperty(module.exports, \"transformAppend\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformAppend;\n    }\n});\nObject.defineProperty(module.exports, \"transformPrepend\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformPrepend;\n    }\n});\nObject.defineProperty(module.exports, \"transformReadAllBytes\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformReadAllBytes;\n    }\n});\nObject.defineProperty(module.exports, \"transformNormalizeMessage\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformNormalizeMessage;\n    }\n});\nObject.defineProperty(module.exports, \"transformCompressEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformCompressEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"transformDecompressEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformDecompressEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"transformJoinEnvelopes\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformJoinEnvelopes;\n    }\n});\nObject.defineProperty(module.exports, \"transformSplitEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformSplitEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"transformSerializeEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformSerializeEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"transformParseEnvelope\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.transformParseEnvelope;\n    }\n});\nObject.defineProperty(module.exports, \"pipeTo\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.pipeTo;\n    }\n});\nObject.defineProperty(module.exports, \"sinkAll\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.sinkAll;\n    }\n});\nObject.defineProperty(module.exports, \"sinkAllBytes\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.sinkAllBytes;\n    }\n});\nObject.defineProperty(module.exports, \"makeIterableAbortable\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.makeIterableAbortable;\n    }\n});\nObject.defineProperty(module.exports, \"createWritableIterable\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.createWritableIterable;\n    }\n});\nObject.defineProperty(module.exports, \"createAsyncIterable\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.createAsyncIterable;\n    }\n});\nObject.defineProperty(module.exports, \"readAllBytes\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.readAllBytes;\n    }\n});\nObject.defineProperty(module.exports, \"untilFirst\", {\n    enumerable: true,\n    get: function() {\n        return $4TIBd.untilFirst;\n    }\n});\n\nvar $dHfIs = parcelRequire(\"dHfIs\");\nObject.defineProperty(module.exports, \"contentTypeMatcher\", {\n    enumerable: true,\n    get: function() {\n        return $dHfIs.contentTypeMatcher;\n    }\n});\n\nvar $kPxXG = parcelRequire(\"kPxXG\");\nObject.defineProperty(module.exports, \"invokeUnaryImplementation\", {\n    enumerable: true,\n    get: function() {\n        return $kPxXG.invokeUnaryImplementation;\n    }\n});\nObject.defineProperty(module.exports, \"transformInvokeImplementation\", {\n    enumerable: true,\n    get: function() {\n        return $kPxXG.transformInvokeImplementation;\n    }\n});\n\nvar $5iLQY = parcelRequire(\"5iLQY\");\nObject.defineProperty(module.exports, \"createLinkedAbortController\", {\n    enumerable: true,\n    get: function() {\n        return $5iLQY.createLinkedAbortController;\n    }\n});\nObject.defineProperty(module.exports, \"getAbortSignalReason\", {\n    enumerable: true,\n    get: function() {\n        return $5iLQY.getAbortSignalReason;\n    }\n});\nObject.defineProperty(module.exports, \"createDeadlineSignal\", {\n    enumerable: true,\n    get: function() {\n        return $5iLQY.createDeadlineSignal;\n    }\n});\n\nvar $5cbVl = parcelRequire(\"5cbVl\");\nObject.defineProperty(module.exports, \"assertByteStreamRequest\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.assertByteStreamRequest;\n    }\n});\nObject.defineProperty(module.exports, \"uResponseOk\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.uResponseOk;\n    }\n});\nObject.defineProperty(module.exports, \"uResponseNotFound\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.uResponseNotFound;\n    }\n});\nObject.defineProperty(module.exports, \"uResponseUnsupportedMediaType\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.uResponseUnsupportedMediaType;\n    }\n});\nObject.defineProperty(module.exports, \"uResponseMethodNotAllowed\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.uResponseMethodNotAllowed;\n    }\n});\nObject.defineProperty(module.exports, \"uResponseVersionNotSupported\", {\n    enumerable: true,\n    get: function() {\n        return $5cbVl.uResponseVersionNotSupported;\n    }\n});\n\nvar $9FNZj = parcelRequire(\"9FNZj\");\nObject.defineProperty(module.exports, \"validateUniversalHandlerOptions\", {\n    enumerable: true,\n    get: function() {\n        return $9FNZj.validateUniversalHandlerOptions;\n    }\n});\nObject.defineProperty(module.exports, \"createUniversalServiceHandlers\", {\n    enumerable: true,\n    get: function() {\n        return $9FNZj.createUniversalServiceHandlers;\n    }\n});\nObject.defineProperty(module.exports, \"createUniversalMethodHandler\", {\n    enumerable: true,\n    get: function() {\n        return $9FNZj.createUniversalMethodHandler;\n    }\n});\n\n});\nparcelRequire.register(\"3xity\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createMethodUrl = void 0;\n/**\n * Create a URL for the given RPC. This simply adds the qualified\n * service name, a slash, and the method name to the path of the given\n * baseUrl.\n *\n * For example, the baseUri https://example.com and method \"Say\" from\n * the service example.ElizaService results in:\n * https://example.com/example.ElizaService/Say\n *\n * This format is used by the protocols Connect, gRPC and Twirp.\n *\n * Note that this function also accepts a protocol-relative baseUrl.\n * If given an empty string or \"/\" as a baseUrl, it returns just the\n * path.\n */ function $2932c90eccc96872$var$createMethodUrl(baseUrl, service, method) {\n    const s = typeof service == \"string\" ? service : service.typeName;\n    const m = typeof method == \"string\" ? method : method.name;\n    return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\nmodule.exports.createMethodUrl = $2932c90eccc96872$var$createMethodUrl;\n\n});\n\nparcelRequire.register(\"dVUld\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createUniversalHandlerClient = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $5iLQY = parcelRequire(\"5iLQY\");\n/**\n * An in-memory UniversalClientFn that can be used to route requests to a ConnectRouter\n * bypassing network calls. Useful for testing and calling in-process services.\n */ function $a24c4d69efcdce32$var$createUniversalHandlerClient(uHandlers) {\n    const handlerMap = new Map();\n    for (const handler of uHandlers)handlerMap.set(handler.requestPath, handler);\n    return async (uClientReq)=>{\n        var _a, _b, _c;\n        const pathname = new URL(uClientReq.url).pathname;\n        const handler = handlerMap.get(pathname);\n        if (!handler) throw new $dbKGs.ConnectError(`RouterHttpClient: no handler registered for ${pathname}`, $2S2uU.Code.Unimplemented);\n        const reqSignal = (_a = uClientReq.signal) !== null && _a !== void 0 ? _a : new AbortController().signal;\n        const uServerRes = await $a24c4d69efcdce32$var$raceSignal(reqSignal, handler({\n            body: (_b = uClientReq.body) !== null && _b !== void 0 ? _b : (0, $4TIBd.createAsyncIterable)([]),\n            httpVersion: \"2.0\",\n            method: uClientReq.method,\n            url: uClientReq.url,\n            header: uClientReq.header,\n            signal: reqSignal\n        }));\n        const body = (_c = uServerRes.body) !== null && _c !== void 0 ? _c : (0, $4TIBd.createAsyncIterable)([]);\n        return {\n            body: (0, $4TIBd.pipe)(body, (iterable)=>{\n                return {\n                    [Symbol.asyncIterator] () {\n                        const it = iterable[Symbol.asyncIterator]();\n                        const w = {\n                            next () {\n                                return $a24c4d69efcdce32$var$raceSignal(reqSignal, it.next());\n                            }\n                        };\n                        if (it.throw !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                        w.throw = (e)=>it.throw(e);\n                        if (it.return !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                        w.return = (value)=>it.return(value);\n                        return w;\n                    }\n                };\n            }),\n            header: new Headers(uServerRes.header),\n            status: uServerRes.status,\n            trailer: new Headers(uServerRes.trailer)\n        };\n    };\n}\nmodule.exports.createUniversalHandlerClient = $a24c4d69efcdce32$var$createUniversalHandlerClient;\n/**\n * Wrap a promise, and reject early if the given signal triggers before the\n * promise is settled.\n */ function $a24c4d69efcdce32$var$raceSignal(signal, promise) {\n    let cleanup;\n    const signalPromise = new Promise((_, reject)=>{\n        const onAbort = ()=>reject((0, $5iLQY.getAbortSignalReason)(signal));\n        if (signal.aborted) return onAbort();\n        signal.addEventListener(\"abort\", onAbort);\n        cleanup = ()=>signal.removeEventListener(\"abort\", onAbort);\n    });\n    return Promise.race([\n        signalPromise,\n        promise\n    ]).finally(cleanup);\n}\n\n});\nparcelRequire.register(\"2S2uU\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Code = void 0;\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connect.build/docs/protocol#error-codes\n * for details.\n */ var $21728fde5b771fa6$var$Code;\n(function(Code) {\n    /**\n     * Canceled, usually be the user\n     */ Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */ Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */ Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */ Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */ Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */ Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */ Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */ Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */ Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */ Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */ Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */ Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */ Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */ Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */ Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */ Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})($21728fde5b771fa6$var$Code = module.exports.Code || (module.exports.Code = {}));\n\n});\n\nparcelRequire.register(\"dbKGs\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.connectErrorFromReason = module.exports.connectErrorDetails = module.exports.ConnectError = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $dpeGY = parcelRequire(\"dpeGY\");\n/**\n * ConnectError captures four pieces of information: a Code, an error\n * message, an optional cause of the error, and an optional collection of\n * arbitrary Protobuf messages called  \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * method findDetails() to retrieve the details.\n */ class $99a083d93cf9c550$var$ConnectError extends Error {\n    /**\n     * Create a new ConnectError.\n     * If no code is provided, code \"unknown\" is used.\n     * Outgoing details are only relevant for the server side - a service may\n     * raise an error with details, and it is up to the protocol implementation\n     * to encode and send the details along with error.\n     */ constructor(message, code = $2S2uU.Code.Unknown, metadata, outgoingDetails, cause){\n        super($99a083d93cf9c550$var$createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n        this.cause = cause;\n    }\n    /**\n     * Convert any value - typically a caught error into a ConnectError,\n     * following these rules:\n     * - If the value is already a ConnectError, return it as is.\n     * - If the value is an AbortError from the fetch API, return the message\n     *   of the AbortError with code Canceled.\n     * - For other Errors, return the error message with code Unknown by default.\n     * - For other values, return the values String representation as a message,\n     *   with the code Unknown by default.\n     * The original value will be used for the \"cause\" property for the new\n     * ConnectError.\n     */ static from(reason, code = $2S2uU.Code.Unknown) {\n        if (reason instanceof $99a083d93cf9c550$var$ConnectError) return reason;\n        if (reason instanceof Error) {\n            if (reason.name == \"AbortError\") // Fetch requests can only be canceled with an AbortController.\n            // We detect that condition by looking at the name of the raised\n            // error object, and translate to the appropriate status code.\n            return new $99a083d93cf9c550$var$ConnectError(reason.message, $2S2uU.Code.Canceled);\n            return new $99a083d93cf9c550$var$ConnectError(reason.message, code, undefined, undefined, reason);\n        }\n        return new $99a083d93cf9c550$var$ConnectError(String(reason), code, undefined, undefined, reason);\n    }\n    findDetails(typeOrRegistry) {\n        const registry = \"typeName\" in typeOrRegistry ? {\n            findMessage: (typeName)=>typeName === typeOrRegistry.typeName ? typeOrRegistry : undefined\n        } : typeOrRegistry;\n        const details = [];\n        for (const data of this.details){\n            if (data instanceof $hNn7i.Message) {\n                if (registry.findMessage(data.getType().typeName)) details.push(data);\n                continue;\n            }\n            const type = registry.findMessage(data.type);\n            if (type) try {\n                details.push(type.fromBinary(data.value));\n            } catch (_) {\n            // We silently give up if we are unable to parse the detail, because\n            // that appears to be the least worst behavior.\n            // It is very unlikely that a user surrounds a catch body handling the\n            // error with another try-catch statement, and we do not want to\n            // recommend doing so.\n            }\n        }\n        return details;\n    }\n}\nmodule.exports.ConnectError = $99a083d93cf9c550$var$ConnectError;\n/**\n * @deprecated use ConnectError.findDetails() instead\n */ function $99a083d93cf9c550$var$connectErrorDetails(error, typeOrRegistry, ...moreTypes) {\n    const types = \"typeName\" in typeOrRegistry ? [\n        typeOrRegistry,\n        ...moreTypes\n    ] : [];\n    const registry = \"typeName\" in typeOrRegistry ? (0, $hNn7i.createRegistry)(...types) : typeOrRegistry;\n    const details = [];\n    for (const data of error.details){\n        if (data instanceof $hNn7i.Message) {\n            if (registry.findMessage(data.getType().typeName)) details.push(data);\n            continue;\n        }\n        const type = registry.findMessage(data.type);\n        if (type) try {\n            details.push(type.fromBinary(data.value));\n        } catch (_) {\n        // We silently give up if we are unable to parse the detail, because\n        // that appears to be the least worst behavior.\n        // It is very unlikely that a user surrounds a catch body handling the\n        // error with another try-catch statement, and we do not want to\n        // recommend doing so.\n        }\n    }\n    return details;\n}\nmodule.exports.connectErrorDetails = $99a083d93cf9c550$var$connectErrorDetails;\n/**\n * Create an error message, prefixing the given code.\n */ function $99a083d93cf9c550$var$createMessage(message, code) {\n    return message.length ? `[${(0, $dpeGY.codeToString)(code)}] ${message}` : `[${(0, $dpeGY.codeToString)(code)}]`;\n}\n/**\n * Convert any value - typically a caught error into a ConnectError,\n * following these rules:\n * - If the value is already a ConnectError, return it as is.\n * - If the value is an AbortError from the fetch API, return the message\n *   of the AbortError with code Canceled.\n * - For other Errors, return the error message with code Unknown by default.\n * - For other values, return the values String representation as a message,\n *   with the code Unknown by default.\n *\n * @deprecated use ConnectError.from() instead\n */ function $99a083d93cf9c550$var$connectErrorFromReason(reason, code = $2S2uU.Code.Unknown) {\n    if (reason instanceof $99a083d93cf9c550$var$ConnectError) return reason;\n    if (reason instanceof Error) {\n        if (reason.name == \"AbortError\") // Fetch requests can only be canceled with an AbortController.\n        // We detect that condition by looking at the name of the raised\n        // error object, and translate to the appropriate status code.\n        return new $99a083d93cf9c550$var$ConnectError(reason.message, $2S2uU.Code.Canceled);\n        return new $99a083d93cf9c550$var$ConnectError(reason.message, code);\n    }\n    return new $99a083d93cf9c550$var$ConnectError(String(reason), code);\n}\nmodule.exports.connectErrorFromReason = $99a083d93cf9c550$var$connectErrorFromReason;\n\n});\nparcelRequire.register(\"hNn7i\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $cf48f1c8be3b514b$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $cf48f1c8be3b514b$var$__exportStar = module.exports && module.exports.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) $cf48f1c8be3b514b$var$__createBinding(exports1, m, p);\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.toPlainMessage = module.exports.createRegistryFromDescriptors = module.exports.createRegistry = module.exports.createDescriptorSet = module.exports.BinaryReader = module.exports.BinaryWriter = module.exports.WireType = module.exports.MethodIdempotency = module.exports.MethodKind = module.exports.ScalarType = module.exports.Message = module.exports.codegenInfo = module.exports.protoDelimited = module.exports.protoBase64 = module.exports.protoInt64 = module.exports.protoDouble = module.exports.proto2 = module.exports.proto3 = void 0;\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\nObject.defineProperty(module.exports, \"proto3\", {\n    enumerable: true,\n    get: function() {\n        return $bkOG2.proto3;\n    }\n});\n\nvar $aYdaj = parcelRequire(\"aYdaj\");\nObject.defineProperty(module.exports, \"proto2\", {\n    enumerable: true,\n    get: function() {\n        return $aYdaj.proto2;\n    }\n});\n\nvar $lEZfE = parcelRequire(\"lEZfE\");\nObject.defineProperty(module.exports, \"protoDouble\", {\n    enumerable: true,\n    get: function() {\n        return $lEZfE.protoDouble;\n    }\n});\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\nObject.defineProperty(module.exports, \"protoInt64\", {\n    enumerable: true,\n    get: function() {\n        return $dkRgk.protoInt64;\n    }\n});\n\nvar $9BP9U = parcelRequire(\"9BP9U\");\nObject.defineProperty(module.exports, \"protoBase64\", {\n    enumerable: true,\n    get: function() {\n        return $9BP9U.protoBase64;\n    }\n});\n\nvar $97cGY = parcelRequire(\"97cGY\");\nObject.defineProperty(module.exports, \"protoDelimited\", {\n    enumerable: true,\n    get: function() {\n        return $97cGY.protoDelimited;\n    }\n});\n\nvar $2lUVF = parcelRequire(\"2lUVF\");\nObject.defineProperty(module.exports, \"codegenInfo\", {\n    enumerable: true,\n    get: function() {\n        return $2lUVF.codegenInfo;\n    }\n});\n\nvar $daMMc = parcelRequire(\"daMMc\");\nObject.defineProperty(module.exports, \"Message\", {\n    enumerable: true,\n    get: function() {\n        return $daMMc.Message;\n    }\n});\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\nObject.defineProperty(module.exports, \"ScalarType\", {\n    enumerable: true,\n    get: function() {\n        return $9mVQy.ScalarType;\n    }\n});\n\nvar $eMVZ5 = parcelRequire(\"eMVZ5\");\nObject.defineProperty(module.exports, \"MethodKind\", {\n    enumerable: true,\n    get: function() {\n        return $eMVZ5.MethodKind;\n    }\n});\nObject.defineProperty(module.exports, \"MethodIdempotency\", {\n    enumerable: true,\n    get: function() {\n        return $eMVZ5.MethodIdempotency;\n    }\n});\n\nvar $1D0pI = parcelRequire(\"1D0pI\");\nObject.defineProperty(module.exports, \"WireType\", {\n    enumerable: true,\n    get: function() {\n        return $1D0pI.WireType;\n    }\n});\nObject.defineProperty(module.exports, \"BinaryWriter\", {\n    enumerable: true,\n    get: function() {\n        return $1D0pI.BinaryWriter;\n    }\n});\nObject.defineProperty(module.exports, \"BinaryReader\", {\n    enumerable: true,\n    get: function() {\n        return $1D0pI.BinaryReader;\n    }\n});\n\nvar $l83TF = parcelRequire(\"l83TF\");\nObject.defineProperty(module.exports, \"createDescriptorSet\", {\n    enumerable: true,\n    get: function() {\n        return $l83TF.createDescriptorSet;\n    }\n});\n\nvar $7lDkw = parcelRequire(\"7lDkw\");\nObject.defineProperty(module.exports, \"createRegistry\", {\n    enumerable: true,\n    get: function() {\n        return $7lDkw.createRegistry;\n    }\n});\n\nvar $4cWLX = parcelRequire(\"4cWLX\");\nObject.defineProperty(module.exports, \"createRegistryFromDescriptors\", {\n    enumerable: true,\n    get: function() {\n        return $4cWLX.createRegistryFromDescriptors;\n    }\n});\n\nvar $ga6K0 = parcelRequire(\"ga6K0\");\nObject.defineProperty(module.exports, \"toPlainMessage\", {\n    enumerable: true,\n    get: function() {\n        return $ga6K0.toPlainMessage;\n    }\n});\n\n// ideally, we would export these types with sub-path exports:\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"4UZCq\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"lpO7e\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"atJju\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"hi5gE\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"46Pek\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"b6QY7\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"cl1bT\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"jooX7\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"6naYd\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"bM41u\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"dwaHV\")), module.exports);\n\n$cf48f1c8be3b514b$var$__exportStar((parcelRequire(\"k2cpW\")), module.exports);\n\n});\nparcelRequire.register(\"lEZfE\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.protoDouble = void 0;\n// Export global Number constants. This is done so that we can safely use\n// these global constants when generating code and be assured we're using\n// the correct values. We cannot rely on globalThis since we support ES2017\n// and globalThis was introduced in ES2020. We also don't want to explicitly\n// generate code using, for example, Number.NaN, since this could clash with\n// a message name of Number. Instead we can export them here since this will\n// be in a different scope as the generated code and we are guaranteed to use\n// the intended global values.\nmodule.exports.protoDouble = {\n    NaN: Number.NaN,\n    POSITIVE_INFINITY: Number.POSITIVE_INFINITY,\n    NEGATIVE_INFINITY: Number.NEGATIVE_INFINITY\n};\n\n});\n\nparcelRequire.register(\"97cGY\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $6a2e9ce4a1633704$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $6a2e9ce4a1633704$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $6a2e9ce4a1633704$var$__await ? (this.v = v, this) : new $6a2e9ce4a1633704$var$__await(v);\n};\nvar $6a2e9ce4a1633704$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $6a2e9ce4a1633704$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.protoDelimited = void 0;\n\nvar $cwy9l = parcelRequire(\"cwy9l\");\n\nvar $1D0pI = parcelRequire(\"1D0pI\");\n/**\n * protoDelimited provides functions to serialize and parse size-delimited\n * messages.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */ module.exports.protoDelimited = {\n    /**\n     * Serialize a message, prefixing it with its size.\n     */ enc (message, options) {\n        const opt = (0, $cwy9l.makeBinaryFormatCommon)().makeWriteOptions(options);\n        return opt.writerFactory().bytes(message.toBinary(opt)).finish();\n    },\n    /**\n     * Parse a size-delimited message, ignoring extra bytes.\n     */ dec (type, bytes, options) {\n        const opt = (0, $cwy9l.makeBinaryFormatCommon)().makeReadOptions(options);\n        return type.fromBinary(opt.readerFactory(bytes).bytes(), opt);\n    },\n    /**\n     * Parse a stream of size-delimited messages.\n     */ decStream (type, iterable) {\n        return $6a2e9ce4a1633704$var$__asyncGenerator(this, arguments, function* decStream_1() {\n            var _a, e_1, _b, _c;\n            // append chunk to buffer, returning updated buffer\n            function append(buffer, chunk) {\n                const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n                n.set(buffer);\n                n.set(chunk, buffer.length);\n                return n;\n            }\n            let buffer = new Uint8Array(0);\n            try {\n                for(var _d = true, iterable_1 = $6a2e9ce4a1633704$var$__asyncValues(iterable), iterable_1_1; iterable_1_1 = yield $6a2e9ce4a1633704$var$__await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true){\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for(;;){\n                        const size = module.exports.protoDelimited.peekSize(buffer);\n                        if (size.eof) break;\n                        if (size.offset + size.size > buffer.byteLength) break;\n                        yield yield $6a2e9ce4a1633704$var$__await(module.exports.protoDelimited.dec(type, buffer));\n                        buffer = buffer.subarray(size.offset + size.size);\n                    }\n                }\n            } catch (e_1_1) {\n                e_1 = {\n                    error: e_1_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield $6a2e9ce4a1633704$var$__await(_b.call(iterable_1));\n                } finally{\n                    if (e_1) throw e_1.error;\n                }\n            }\n            if (buffer.byteLength > 0) throw new Error(\"incomplete data\");\n        });\n    },\n    /**\n     * Decodes the size from the given size-delimited message, which may be\n     * incomplete.\n     *\n     * Returns an object with the following properties:\n     * - size: The size of the delimited message in bytes\n     * - offset: The offset in the given byte array where the message starts\n     * - eof: true\n     *\n     * If the size-delimited data does not include all bytes of the varint size,\n     * the following object is returned:\n     * - size: null\n     * - offset: null\n     * - eof: false\n     *\n     * This function can be used to implement parsing of size-delimited messages\n     * from a stream.\n     */ peekSize (data) {\n        const sizeEof = {\n            eof: true,\n            size: null,\n            offset: null\n        };\n        for(let i = 0; i < 10; i++){\n            if (i > data.byteLength) return sizeEof;\n            if ((data[i] & 0x80) == 0) {\n                const reader = new $1D0pI.BinaryReader(data);\n                let size;\n                try {\n                    size = reader.uint32();\n                } catch (e) {\n                    if (e instanceof RangeError) return sizeEof;\n                    throw e;\n                }\n                return {\n                    eof: false,\n                    size: size,\n                    offset: reader.pos\n                };\n            }\n        }\n        throw new Error(\"invalid varint\");\n    }\n};\n\n});\n\nparcelRequire.register(\"2lUVF\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.codegenInfo = void 0;\n\nvar $hxoip = parcelRequire(\"hxoip\");\n\nvar $2fBvO = parcelRequire(\"2fBvO\");\n\nvar $bQjda = parcelRequire(\"bQjda\");\n\nvar $745gB = parcelRequire(\"745gB\");\nconst $1b69b3e5750deb9a$var$packageName = \"@bufbuild/protobuf\";\nmodule.exports.codegenInfo = {\n    packageName: $1b69b3e5750deb9a$var$packageName,\n    localName: $hxoip.localName,\n    reifyWkt: $745gB.reifyWkt,\n    getUnwrappedFieldType: $2fBvO.getUnwrappedFieldType,\n    scalarDefaultValue: $bQjda.scalarDefaultValue,\n    safeIdentifier: $hxoip.safeIdentifier,\n    safeObjectProperty: $hxoip.safeObjectProperty,\n    // prettier-ignore\n    symbols: {\n        proto2: {\n            typeOnly: false,\n            privateImportPath: \"./proto2.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        proto3: {\n            typeOnly: false,\n            privateImportPath: \"./proto3.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        Message: {\n            typeOnly: false,\n            privateImportPath: \"./message.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        PartialMessage: {\n            typeOnly: true,\n            privateImportPath: \"./message.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        PlainMessage: {\n            typeOnly: true,\n            privateImportPath: \"./message.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        FieldList: {\n            typeOnly: true,\n            privateImportPath: \"./field-list.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        MessageType: {\n            typeOnly: true,\n            privateImportPath: \"./message-type.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        BinaryReadOptions: {\n            typeOnly: true,\n            privateImportPath: \"./binary-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        BinaryWriteOptions: {\n            typeOnly: true,\n            privateImportPath: \"./binary-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        JsonReadOptions: {\n            typeOnly: true,\n            privateImportPath: \"./json-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        JsonWriteOptions: {\n            typeOnly: true,\n            privateImportPath: \"./json-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        JsonValue: {\n            typeOnly: true,\n            privateImportPath: \"./json-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        JsonObject: {\n            typeOnly: true,\n            privateImportPath: \"./json-format.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        protoDouble: {\n            typeOnly: false,\n            privateImportPath: \"./proto-double.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        protoInt64: {\n            typeOnly: false,\n            privateImportPath: \"./proto-int64.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        ScalarType: {\n            typeOnly: false,\n            privateImportPath: \"./field.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        MethodKind: {\n            typeOnly: false,\n            privateImportPath: \"./service-type.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        MethodIdempotency: {\n            typeOnly: false,\n            privateImportPath: \"./service-type.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        },\n        IMessageTypeRegistry: {\n            typeOnly: true,\n            privateImportPath: \"./type-registry.js\",\n            publicImportPath: $1b69b3e5750deb9a$var$packageName\n        }\n    },\n    wktSourceFiles: [\n        \"google/protobuf/compiler/plugin.proto\",\n        \"google/protobuf/any.proto\",\n        \"google/protobuf/api.proto\",\n        \"google/protobuf/descriptor.proto\",\n        \"google/protobuf/duration.proto\",\n        \"google/protobuf/empty.proto\",\n        \"google/protobuf/field_mask.proto\",\n        \"google/protobuf/source_context.proto\",\n        \"google/protobuf/struct.proto\",\n        \"google/protobuf/timestamp.proto\",\n        \"google/protobuf/type.proto\",\n        \"google/protobuf/wrappers.proto\"\n    ]\n};\n\n});\nparcelRequire.register(\"745gB\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.reifyWkt = void 0;\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n/**\n * Reifies a given DescMessage into a more concrete object representing its\n * respective well-known type.  The returned object will contain properties\n * representing the WKT's defined fields.\n *\n * Useful during code generation when immediate access to a particular field\n * is needed without having to search the object's typename and DescField list.\n *\n * Returns undefined if the WKT cannot be completely constructed via the\n * DescMessage.\n */ function $524cfe03808b750c$var$reifyWkt(message) {\n    switch(message.typeName){\n        case \"google.protobuf.Any\":\n            {\n                const typeUrl = message.fields.find((f)=>f.number == 1 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.STRING);\n                const value = message.fields.find((f)=>f.number == 2 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.BYTES);\n                if (typeUrl && value) return {\n                    typeName: message.typeName,\n                    typeUrl: typeUrl,\n                    value: value\n                };\n                break;\n            }\n        case \"google.protobuf.Timestamp\":\n            {\n                const seconds = message.fields.find((f)=>f.number == 1 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.INT64);\n                const nanos = message.fields.find((f)=>f.number == 2 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.INT32);\n                if (seconds && nanos) return {\n                    typeName: message.typeName,\n                    seconds: seconds,\n                    nanos: nanos\n                };\n                break;\n            }\n        case \"google.protobuf.Duration\":\n            {\n                const seconds = message.fields.find((f)=>f.number == 1 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.INT64);\n                const nanos = message.fields.find((f)=>f.number == 2 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.INT32);\n                if (seconds && nanos) return {\n                    typeName: message.typeName,\n                    seconds: seconds,\n                    nanos: nanos\n                };\n                break;\n            }\n        case \"google.protobuf.Struct\":\n            {\n                const fields = message.fields.find((f)=>f.number == 1 && !f.repeated);\n                if ((fields === null || fields === void 0 ? void 0 : fields.fieldKind) !== \"map\" || fields.mapValue.kind !== \"message\" || fields.mapValue.message.typeName !== \"google.protobuf.Value\") break;\n                return {\n                    typeName: message.typeName,\n                    fields: fields\n                };\n            }\n        case \"google.protobuf.Value\":\n            {\n                const kind = message.oneofs.find((o)=>o.name === \"kind\");\n                const nullValue = message.fields.find((f)=>f.number == 1 && f.oneof === kind);\n                if ((nullValue === null || nullValue === void 0 ? void 0 : nullValue.fieldKind) !== \"enum\" || nullValue.enum.typeName !== \"google.protobuf.NullValue\") return undefined;\n                const numberValue = message.fields.find((f)=>f.number == 2 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.DOUBLE && f.oneof === kind);\n                const stringValue = message.fields.find((f)=>f.number == 3 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.STRING && f.oneof === kind);\n                const boolValue = message.fields.find((f)=>f.number == 4 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.BOOL && f.oneof === kind);\n                const structValue = message.fields.find((f)=>f.number == 5 && f.oneof === kind);\n                if ((structValue === null || structValue === void 0 ? void 0 : structValue.fieldKind) !== \"message\" || structValue.message.typeName !== \"google.protobuf.Struct\") return undefined;\n                const listValue = message.fields.find((f)=>f.number == 6 && f.oneof === kind);\n                if ((listValue === null || listValue === void 0 ? void 0 : listValue.fieldKind) !== \"message\" || listValue.message.typeName !== \"google.protobuf.ListValue\") return undefined;\n                if (kind && numberValue && stringValue && boolValue) return {\n                    typeName: message.typeName,\n                    kind: kind,\n                    nullValue: nullValue,\n                    numberValue: numberValue,\n                    stringValue: stringValue,\n                    boolValue: boolValue,\n                    structValue: structValue,\n                    listValue: listValue\n                };\n                break;\n            }\n        case \"google.protobuf.ListValue\":\n            {\n                const values = message.fields.find((f)=>f.number == 1 && f.repeated);\n                if ((values === null || values === void 0 ? void 0 : values.fieldKind) != \"message\" || values.message.typeName !== \"google.protobuf.Value\") break;\n                return {\n                    typeName: message.typeName,\n                    values: values\n                };\n            }\n        case \"google.protobuf.FieldMask\":\n            {\n                const paths = message.fields.find((f)=>f.number == 1 && f.fieldKind == \"scalar\" && f.scalar === $9mVQy.ScalarType.STRING && f.repeated);\n                if (paths) return {\n                    typeName: message.typeName,\n                    paths: paths\n                };\n                break;\n            }\n        case \"google.protobuf.DoubleValue\":\n        case \"google.protobuf.FloatValue\":\n        case \"google.protobuf.Int64Value\":\n        case \"google.protobuf.UInt64Value\":\n        case \"google.protobuf.Int32Value\":\n        case \"google.protobuf.UInt32Value\":\n        case \"google.protobuf.BoolValue\":\n        case \"google.protobuf.StringValue\":\n        case \"google.protobuf.BytesValue\":\n            {\n                const value = message.fields.find((f)=>f.number == 1 && f.name == \"value\");\n                if (!value) break;\n                if (value.fieldKind !== \"scalar\") break;\n                return {\n                    typeName: message.typeName,\n                    value: value\n                };\n            }\n    }\n    return undefined;\n}\nmodule.exports.reifyWkt = $524cfe03808b750c$var$reifyWkt;\n\n});\n\n\nparcelRequire.register(\"eMVZ5\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.MethodIdempotency = module.exports.MethodKind = void 0;\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */ var $ac4286d780d94fba$var$MethodKind;\n(function(MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})($ac4286d780d94fba$var$MethodKind || (module.exports.MethodKind = $ac4286d780d94fba$var$MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */ var $ac4286d780d94fba$var$MethodIdempotency;\n(function(MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */ MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */ MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})($ac4286d780d94fba$var$MethodIdempotency || (module.exports.MethodIdempotency = $ac4286d780d94fba$var$MethodIdempotency = {}));\n\n});\n\nparcelRequire.register(\"l83TF\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.isPackedFieldByDefault = module.exports.createDescriptorSet = void 0;\n\nvar $hi5gE = parcelRequire(\"hi5gE\");\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $9mVQy = parcelRequire(\"9mVQy\");\n\nvar $eMVZ5 = parcelRequire(\"eMVZ5\");\n\nvar $hxoip = parcelRequire(\"hxoip\");\n\nvar $dkRgk = parcelRequire(\"dkRgk\");\n/**\n * Create a DescriptorSet, a convenient interface for working with a set of\n * google.protobuf.FileDescriptorProto.\n *\n * Note that files must be given in topological order, so each file appears\n * before any file that imports it. Protocol buffer compilers always produce\n * files in topological order.\n */ function $f61d5e2e5c1f3634$var$createDescriptorSet(input) {\n    const cart = {\n        enums: new Map(),\n        messages: new Map(),\n        services: new Map(),\n        extensions: new Map(),\n        mapEntries: new Map()\n    };\n    const fileDescriptors = input instanceof $hi5gE.FileDescriptorSet ? input.file : input instanceof Uint8Array ? $hi5gE.FileDescriptorSet.fromBinary(input).file : input;\n    const files = fileDescriptors.map((proto)=>$f61d5e2e5c1f3634$var$newFile(proto, cart));\n    return Object.assign({\n        files: files\n    }, cart);\n}\nmodule.exports.createDescriptorSet = $f61d5e2e5c1f3634$var$createDescriptorSet;\n/**\n * Create a descriptor for a file.\n */ function $f61d5e2e5c1f3634$var$newFile(proto, cart) {\n    var _a, _b, _c;\n    (0, $2RXcp.assert)(proto.name, `invalid FileDescriptorProto: missing name`);\n    (0, $2RXcp.assert)(proto.syntax === undefined || proto.syntax === \"proto3\", `invalid FileDescriptorProto: unsupported syntax: ${(_a = proto.syntax) !== null && _a !== void 0 ? _a : \"undefined\"}`);\n    const file = {\n        kind: \"file\",\n        proto: proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        syntax: proto.syntax === \"proto3\" ? \"proto3\" : \"proto2\",\n        name: proto.name.replace(/\\.proto/, \"\"),\n        enums: [],\n        messages: [],\n        extensions: [],\n        services: [],\n        toString () {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${this.proto.name}`;\n        },\n        getSyntaxComments () {\n            return $f61d5e2e5c1f3634$var$findComments(this.proto.sourceCodeInfo, [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_Syntax\n            ]);\n        },\n        getPackageComments () {\n            return $f61d5e2e5c1f3634$var$findComments(this.proto.sourceCodeInfo, [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_Package\n            ]);\n        }\n    };\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    for (const enumProto of proto.enumType)$f61d5e2e5c1f3634$var$addEnum(enumProto, file, undefined, cart);\n    for (const messageProto of proto.messageType)$f61d5e2e5c1f3634$var$addMessage(messageProto, file, undefined, cart);\n    for (const serviceProto of proto.service)$f61d5e2e5c1f3634$var$addService(serviceProto, file, cart);\n    $f61d5e2e5c1f3634$var$addExtensions(file, cart);\n    for (const mapEntry of cart.mapEntries.values())$f61d5e2e5c1f3634$var$addFields(mapEntry, cart);\n    for (const message of file.messages){\n        $f61d5e2e5c1f3634$var$addFields(message, cart);\n        $f61d5e2e5c1f3634$var$addExtensions(message, cart);\n    }\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    return file;\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */ function $f61d5e2e5c1f3634$var$addExtensions(desc, cart) {\n    switch(desc.kind){\n        case \"file\":\n            for (const proto of desc.proto.extension){\n                const ext = $f61d5e2e5c1f3634$var$newExtension(proto, desc, undefined, cart);\n                desc.extensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension){\n                const ext = $f61d5e2e5c1f3634$var$newExtension(proto, desc.file, desc, cart);\n                desc.nestedExtensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            for (const message of desc.nestedMessages)$f61d5e2e5c1f3634$var$addExtensions(message, cart);\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */ function $f61d5e2e5c1f3634$var$addFields(message, cart) {\n    const allOneofs = message.proto.oneofDecl.map((proto)=>$f61d5e2e5c1f3634$var$newOneof(proto, message));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field){\n        const oneof = $f61d5e2e5c1f3634$var$findOneof(proto, allOneofs);\n        const field = $f61d5e2e5c1f3634$var$newField(proto, message.file, message, oneof, cart);\n        message.fields.push(field);\n        if (oneof === undefined) message.members.push(field);\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o)=>oneofsSeen.has(o)))message.oneofs.push(oneof);\n    for (const child of message.nestedMessages)$f61d5e2e5c1f3634$var$addFields(child, cart);\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */ function $f61d5e2e5c1f3634$var$addEnum(proto, file, parent, cart) {\n    var _a, _b, _c;\n    (0, $2RXcp.assert)(proto.name, `invalid EnumDescriptorProto: missing name`);\n    const desc = {\n        kind: \"enum\",\n        proto: proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file: file,\n        parent: parent,\n        name: proto.name,\n        typeName: $f61d5e2e5c1f3634$var$makeTypeName(proto, parent, file),\n        values: [],\n        sharedPrefix: (0, $hxoip.findEnumSharedPrefix)(proto.name, proto.value.map((v)=>{\n            var _a;\n            return (_a = v.name) !== null && _a !== void 0 ? _a : \"\";\n        })),\n        toString () {\n            return `enum ${this.typeName}`;\n        },\n        getComments () {\n            const path = this.parent ? [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.DescriptorProto_EnumType,\n                this.parent.proto.enumType.indexOf(this.proto)\n            ] : [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_EnumType,\n                this.file.proto.enumType.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n        }\n    };\n    cart.enums.set(desc.typeName, desc);\n    proto.value.forEach((proto)=>{\n        var _a, _b;\n        (0, $2RXcp.assert)(proto.name, `invalid EnumValueDescriptorProto: missing name`);\n        (0, $2RXcp.assert)(proto.number !== undefined, `invalid EnumValueDescriptorProto: missing number`);\n        desc.values.push({\n            kind: \"enum_value\",\n            proto: proto,\n            deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n            parent: desc,\n            name: proto.name,\n            number: proto.number,\n            toString () {\n                return `enum value ${desc.typeName}.${this.name}`;\n            },\n            declarationString () {\n                var _a;\n                let str = `${this.name} = ${this.number}`;\n                if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) === true) str += \" [deprecated = true]\";\n                return str;\n            },\n            getComments () {\n                const path = [\n                    ...this.parent.getComments().sourcePath,\n                    $f61d5e2e5c1f3634$var$FieldNumber.EnumDescriptorProto_Value,\n                    this.parent.proto.value.indexOf(this.proto)\n                ];\n                return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n            }\n        });\n    });\n    ((_c = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _c !== void 0 ? _c : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */ function $f61d5e2e5c1f3634$var$addMessage(proto, file, parent, cart) {\n    var _a, _b, _c, _d;\n    (0, $2RXcp.assert)(proto.name, `invalid DescriptorProto: missing name`);\n    const desc = {\n        kind: \"message\",\n        proto: proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file: file,\n        parent: parent,\n        name: proto.name,\n        typeName: $f61d5e2e5c1f3634$var$makeTypeName(proto, parent, file),\n        fields: [],\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString () {\n            return `message ${this.typeName}`;\n        },\n        getComments () {\n            const path = this.parent ? [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.DescriptorProto_NestedType,\n                this.parent.proto.nestedType.indexOf(this.proto)\n            ] : [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_MessageType,\n                this.file.proto.messageType.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n        }\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) cart.mapEntries.set(desc.typeName, desc);\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        cart.messages.set(desc.typeName, desc);\n    }\n    for (const enumProto of proto.enumType)$f61d5e2e5c1f3634$var$addEnum(enumProto, file, desc, cart);\n    for (const messageProto of proto.nestedType)$f61d5e2e5c1f3634$var$addMessage(messageProto, file, desc, cart);\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */ function $f61d5e2e5c1f3634$var$addService(proto, file, cart) {\n    var _a, _b;\n    (0, $2RXcp.assert)(proto.name, `invalid ServiceDescriptorProto: missing name`);\n    const desc = {\n        kind: \"service\",\n        proto: proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file: file,\n        name: proto.name,\n        typeName: $f61d5e2e5c1f3634$var$makeTypeName(proto, undefined, file),\n        methods: [],\n        toString () {\n            return `service ${this.typeName}`;\n        },\n        getComments () {\n            const path = [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_Service,\n                this.file.proto.service.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n        }\n    };\n    file.services.push(desc);\n    cart.services.set(desc.typeName, desc);\n    for (const methodProto of proto.method)desc.methods.push($f61d5e2e5c1f3634$var$newMethod(methodProto, desc, cart));\n}\n/**\n * Create a descriptor for a method.\n */ function $f61d5e2e5c1f3634$var$newMethod(proto, parent, cart) {\n    var _a, _b, _c;\n    (0, $2RXcp.assert)(proto.name, `invalid MethodDescriptorProto: missing name`);\n    (0, $2RXcp.assert)(proto.inputType, `invalid MethodDescriptorProto: missing input_type`);\n    (0, $2RXcp.assert)(proto.outputType, `invalid MethodDescriptorProto: missing output_type`);\n    let methodKind;\n    if (proto.clientStreaming === true && proto.serverStreaming === true) methodKind = $eMVZ5.MethodKind.BiDiStreaming;\n    else if (proto.clientStreaming === true) methodKind = $eMVZ5.MethodKind.ClientStreaming;\n    else if (proto.serverStreaming === true) methodKind = $eMVZ5.MethodKind.ServerStreaming;\n    else methodKind = $eMVZ5.MethodKind.Unary;\n    let idempotency;\n    switch((_a = proto.options) === null || _a === void 0 ? void 0 : _a.idempotencyLevel){\n        case $hi5gE.MethodOptions_IdempotencyLevel.IDEMPOTENT:\n            idempotency = $eMVZ5.MethodIdempotency.Idempotent;\n            break;\n        case $hi5gE.MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:\n            idempotency = $eMVZ5.MethodIdempotency.NoSideEffects;\n            break;\n        case $hi5gE.MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:\n        case undefined:\n            idempotency = undefined;\n            break;\n    }\n    const input = cart.messages.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.inputType));\n    const output = cart.messages.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.outputType));\n    (0, $2RXcp.assert)(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    (0, $2RXcp.assert)(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto: proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        parent: parent,\n        name: name,\n        methodKind: methodKind,\n        input: input,\n        output: output,\n        idempotency: idempotency,\n        toString () {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n        getComments () {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.ServiceDescriptorProto_Method,\n                this.parent.proto.method.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(parent.file.proto.sourceCodeInfo, path);\n        }\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */ function $f61d5e2e5c1f3634$var$newOneof(proto, parent) {\n    (0, $2RXcp.assert)(proto.name, `invalid OneofDescriptorProto: missing name`);\n    return {\n        kind: \"oneof\",\n        proto: proto,\n        deprecated: false,\n        parent: parent,\n        fields: [],\n        name: proto.name,\n        toString () {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n        getComments () {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.DescriptorProto_OneofDecl,\n                this.parent.proto.oneofDecl.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(parent.file.proto.sourceCodeInfo, path);\n        }\n    };\n}\n/**\n * Create a descriptor for a field.\n */ function $f61d5e2e5c1f3634$var$newField(proto, file, parent, oneof, cart) {\n    var _a, _b, _c, _d;\n    (0, $2RXcp.assert)(proto.name, `invalid FieldDescriptorProto: missing name`);\n    (0, $2RXcp.assert)(proto.number, `invalid FieldDescriptorProto: missing number`);\n    (0, $2RXcp.assert)(proto.type, `invalid FieldDescriptorProto: missing type`);\n    const packedByDefault = $f61d5e2e5c1f3634$var$isPackedFieldByDefault(proto, file.syntax);\n    const common = {\n        proto: proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        parent: parent,\n        oneof: oneof,\n        optional: $f61d5e2e5c1f3634$var$isOptionalField(proto, file.syntax),\n        packed: (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.packed) !== null && _d !== void 0 ? _d : packedByDefault,\n        packedByDefault: packedByDefault,\n        jsonName: proto.jsonName === (0, $hxoip.fieldJsonName)(proto.name) ? undefined : proto.jsonName,\n        scalar: undefined,\n        message: undefined,\n        enum: undefined,\n        mapKey: undefined,\n        mapValue: undefined,\n        toString () {\n            // note that newExtension() calls us with parent = null\n            return `field ${this.parent.typeName}.${this.name}`;\n        },\n        declarationString: $f61d5e2e5c1f3634$var$declarationString,\n        getComments () {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.DescriptorProto_Field,\n                this.parent.proto.field.indexOf(this.proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n        }\n    };\n    const repeated = proto.label === $hi5gE.FieldDescriptorProto_Label.REPEATED;\n    switch(proto.type){\n        case $hi5gE.FieldDescriptorProto_Type.MESSAGE:\n        case $hi5gE.FieldDescriptorProto_Type.GROUP:\n            {\n                (0, $2RXcp.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n                const mapEntry = cart.mapEntries.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.typeName));\n                if (mapEntry !== undefined) {\n                    (0, $2RXcp.assert)(repeated, `invalid FieldDescriptorProto: expected map entry to be repeated`);\n                    return Object.assign(Object.assign(Object.assign({}, common), {\n                        kind: \"field\",\n                        fieldKind: \"map\",\n                        repeated: false\n                    }), $f61d5e2e5c1f3634$var$getMapFieldTypes(mapEntry));\n                }\n                const message = cart.messages.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.typeName));\n                (0, $2RXcp.assert)(message !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n                return Object.assign(Object.assign({}, common), {\n                    kind: \"field\",\n                    fieldKind: \"message\",\n                    repeated: repeated,\n                    message: message\n                });\n            }\n        case $hi5gE.FieldDescriptorProto_Type.ENUM:\n            {\n                (0, $2RXcp.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n                const e = cart.enums.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.typeName));\n                (0, $2RXcp.assert)(e !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n                return Object.assign(Object.assign({}, common), {\n                    kind: \"field\",\n                    fieldKind: \"enum\",\n                    getDefaultValue: $f61d5e2e5c1f3634$var$getDefaultValue,\n                    repeated: repeated,\n                    enum: e\n                });\n            }\n        default:\n            {\n                const scalar = $f61d5e2e5c1f3634$var$fieldTypeToScalarType[proto.type];\n                (0, $2RXcp.assert)(scalar, `invalid FieldDescriptorProto: unknown type ${proto.type}`);\n                return Object.assign(Object.assign({}, common), {\n                    kind: \"field\",\n                    fieldKind: \"scalar\",\n                    getDefaultValue: $f61d5e2e5c1f3634$var$getDefaultValue,\n                    repeated: repeated,\n                    scalar: scalar\n                });\n            }\n    }\n}\n/**\n * Create a descriptor for an extension field.\n */ function $f61d5e2e5c1f3634$var$newExtension(proto, file, parent, cart) {\n    (0, $2RXcp.assert)(proto.extendee, `invalid FieldDescriptorProto: missing extendee`);\n    const field = $f61d5e2e5c1f3634$var$newField(proto, file, null, undefined, cart);\n    const extendee = cart.messages.get($f61d5e2e5c1f3634$var$trimLeadingDot(proto.extendee));\n    (0, $2RXcp.assert)(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n    return Object.assign(Object.assign({}, field), {\n        kind: \"extension\",\n        typeName: $f61d5e2e5c1f3634$var$makeTypeName(proto, parent, file),\n        parent: parent,\n        file: file,\n        extendee: extendee,\n        toString () {\n            return `extension ${this.typeName}`;\n        },\n        getComments () {\n            const path = this.parent ? [\n                ...this.parent.getComments().sourcePath,\n                $f61d5e2e5c1f3634$var$FieldNumber.DescriptorProto_Extension,\n                this.parent.proto.extension.indexOf(proto)\n            ] : [\n                $f61d5e2e5c1f3634$var$FieldNumber.FileDescriptorProto_Extension,\n                this.file.proto.extension.indexOf(proto)\n            ];\n            return $f61d5e2e5c1f3634$var$findComments(file.proto.sourceCodeInfo, path);\n        }\n    });\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */ function $f61d5e2e5c1f3634$var$makeTypeName(proto, parent, file) {\n    (0, $2RXcp.assert)(proto.name, `invalid ${proto.getType().typeName}: missing name`);\n    let typeName;\n    if (parent) typeName = `${parent.typeName}.${proto.name}`;\n    else if (file.proto.package !== undefined) typeName = `${file.proto.package}.${proto.name}`;\n    else typeName = `${proto.name}`;\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */ function $f61d5e2e5c1f3634$var$trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\nfunction $f61d5e2e5c1f3634$var$getMapFieldTypes(mapEntry) {\n    var _a, _b;\n    (0, $2RXcp.assert)((_a = mapEntry.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry, `invalid DescriptorProto: expected ${mapEntry.toString()} to be a map entry`);\n    (0, $2RXcp.assert)(mapEntry.fields.length === 2, `invalid DescriptorProto: map entry ${mapEntry.toString()} has ${mapEntry.fields.length} fields`);\n    const keyField = mapEntry.fields.find((f)=>f.proto.number === 1);\n    (0, $2RXcp.assert)(keyField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing key field`);\n    const mapKey = keyField.scalar;\n    (0, $2RXcp.assert)(mapKey !== undefined && mapKey !== $9mVQy.ScalarType.BYTES && mapKey !== $9mVQy.ScalarType.FLOAT && mapKey !== $9mVQy.ScalarType.DOUBLE, `invalid DescriptorProto: map entry ${mapEntry.toString()} has unexpected key type ${(_b = keyField.proto.type) !== null && _b !== void 0 ? _b : -1}`);\n    const valueField = mapEntry.fields.find((f)=>f.proto.number === 2);\n    (0, $2RXcp.assert)(valueField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing value field`);\n    switch(valueField.fieldKind){\n        case \"scalar\":\n            return {\n                mapKey: mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), {\n                    kind: \"scalar\"\n                })\n            };\n        case \"message\":\n            return {\n                mapKey: mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), {\n                    kind: \"message\"\n                })\n            };\n        case \"enum\":\n            return {\n                mapKey: mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), {\n                    kind: \"enum\"\n                })\n            };\n        default:\n            throw new Error(\"invalid DescriptorProto: unsupported map entry value field\");\n    }\n}\n/**\n * Did the user put the field in a oneof group?\n * This handles proto3 optionals.\n */ function $f61d5e2e5c1f3634$var$findOneof(proto, allOneofs) {\n    var _a;\n    const oneofIndex = proto.oneofIndex;\n    if (oneofIndex === undefined) return undefined;\n    let oneof;\n    if (proto.proto3Optional !== true) {\n        oneof = allOneofs[oneofIndex];\n        (0, $2RXcp.assert)(oneof, `invalid FieldDescriptorProto: oneof #${oneofIndex} for field #${(_a = proto.number) !== null && _a !== void 0 ? _a : -1} not found`);\n    }\n    return oneof;\n}\n/**\n * Did the user use the `optional` keyword?\n * This handles proto3 optionals.\n */ function $f61d5e2e5c1f3634$var$isOptionalField(proto, syntax) {\n    switch(syntax){\n        case \"proto2\":\n            return proto.oneofIndex === undefined && proto.label === $hi5gE.FieldDescriptorProto_Label.OPTIONAL;\n        case \"proto3\":\n            return proto.proto3Optional === true;\n    }\n}\n/**\n * Get the default `packed` state of a repeated field.\n */ function $f61d5e2e5c1f3634$var$isPackedFieldByDefault(proto, syntax) {\n    (0, $2RXcp.assert)(proto.type, `invalid FieldDescriptorProto: missing type`);\n    if (syntax === \"proto3\") switch(proto.type){\n        case $hi5gE.FieldDescriptorProto_Type.DOUBLE:\n        case $hi5gE.FieldDescriptorProto_Type.FLOAT:\n        case $hi5gE.FieldDescriptorProto_Type.INT64:\n        case $hi5gE.FieldDescriptorProto_Type.UINT64:\n        case $hi5gE.FieldDescriptorProto_Type.INT32:\n        case $hi5gE.FieldDescriptorProto_Type.FIXED64:\n        case $hi5gE.FieldDescriptorProto_Type.FIXED32:\n        case $hi5gE.FieldDescriptorProto_Type.UINT32:\n        case $hi5gE.FieldDescriptorProto_Type.SFIXED32:\n        case $hi5gE.FieldDescriptorProto_Type.SFIXED64:\n        case $hi5gE.FieldDescriptorProto_Type.SINT32:\n        case $hi5gE.FieldDescriptorProto_Type.SINT64:\n        case $hi5gE.FieldDescriptorProto_Type.BOOL:\n        case $hi5gE.FieldDescriptorProto_Type.ENUM:\n            // From the proto3 language guide:\n            // > In proto3, repeated fields of scalar numeric types are packed by default.\n            // This information is incomplete - according to the conformance tests, BOOL\n            // and ENUM are packed by default as well. This means only STRING and BYTES\n            // are not packed by default, which makes sense because they are length-delimited.\n            return true;\n        default:\n            return false;\n    }\n    return false;\n}\nmodule.exports.isPackedFieldByDefault = $f61d5e2e5c1f3634$var$isPackedFieldByDefault;\n/**\n * Map from a compiler-generated field type to our ScalarType, which is a\n * subset of field types declared by protobuf enum google.protobuf.FieldDescriptorProto.\n */ const $f61d5e2e5c1f3634$var$fieldTypeToScalarType = {\n    [$hi5gE.FieldDescriptorProto_Type.DOUBLE]: $9mVQy.ScalarType.DOUBLE,\n    [$hi5gE.FieldDescriptorProto_Type.FLOAT]: $9mVQy.ScalarType.FLOAT,\n    [$hi5gE.FieldDescriptorProto_Type.INT64]: $9mVQy.ScalarType.INT64,\n    [$hi5gE.FieldDescriptorProto_Type.UINT64]: $9mVQy.ScalarType.UINT64,\n    [$hi5gE.FieldDescriptorProto_Type.INT32]: $9mVQy.ScalarType.INT32,\n    [$hi5gE.FieldDescriptorProto_Type.FIXED64]: $9mVQy.ScalarType.FIXED64,\n    [$hi5gE.FieldDescriptorProto_Type.FIXED32]: $9mVQy.ScalarType.FIXED32,\n    [$hi5gE.FieldDescriptorProto_Type.BOOL]: $9mVQy.ScalarType.BOOL,\n    [$hi5gE.FieldDescriptorProto_Type.STRING]: $9mVQy.ScalarType.STRING,\n    [$hi5gE.FieldDescriptorProto_Type.GROUP]: undefined,\n    [$hi5gE.FieldDescriptorProto_Type.MESSAGE]: undefined,\n    [$hi5gE.FieldDescriptorProto_Type.BYTES]: $9mVQy.ScalarType.BYTES,\n    [$hi5gE.FieldDescriptorProto_Type.UINT32]: $9mVQy.ScalarType.UINT32,\n    [$hi5gE.FieldDescriptorProto_Type.ENUM]: undefined,\n    [$hi5gE.FieldDescriptorProto_Type.SFIXED32]: $9mVQy.ScalarType.SFIXED32,\n    [$hi5gE.FieldDescriptorProto_Type.SFIXED64]: $9mVQy.ScalarType.SFIXED64,\n    [$hi5gE.FieldDescriptorProto_Type.SINT32]: $9mVQy.ScalarType.SINT32,\n    [$hi5gE.FieldDescriptorProto_Type.SINT64]: $9mVQy.ScalarType.SINT64\n};\n/**\n * Find comments.\n */ function $f61d5e2e5c1f3634$var$findComments(sourceCodeInfo, sourcePath) {\n    if (!sourceCodeInfo) return {\n        leadingDetached: [],\n        sourcePath: sourcePath\n    };\n    for (const location of sourceCodeInfo.location){\n        if (location.path.length !== sourcePath.length) continue;\n        if (location.path.some((value, index)=>sourcePath[index] !== value)) continue;\n        return {\n            leadingDetached: location.leadingDetachedComments,\n            leading: location.leadingComments,\n            trailing: location.trailingComments,\n            sourcePath: sourcePath\n        };\n    }\n    return {\n        leadingDetached: [],\n        sourcePath: sourcePath\n    };\n}\n/**\n * The following field numbers are used to find comments in\n * google.protobuf.SourceCodeInfo.\n */ var $f61d5e2e5c1f3634$var$FieldNumber;\n(function(FieldNumber) {\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Package\"] = 2] = \"FileDescriptorProto_Package\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_MessageType\"] = 4] = \"FileDescriptorProto_MessageType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_EnumType\"] = 5] = \"FileDescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Service\"] = 6] = \"FileDescriptorProto_Service\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Extension\"] = 7] = \"FileDescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Syntax\"] = 12] = \"FileDescriptorProto_Syntax\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Field\"] = 2] = \"DescriptorProto_Field\";\n    FieldNumber[FieldNumber[\"DescriptorProto_NestedType\"] = 3] = \"DescriptorProto_NestedType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_EnumType\"] = 4] = \"DescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Extension\"] = 6] = \"DescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"DescriptorProto_OneofDecl\"] = 8] = \"DescriptorProto_OneofDecl\";\n    FieldNumber[FieldNumber[\"EnumDescriptorProto_Value\"] = 2] = \"EnumDescriptorProto_Value\";\n    FieldNumber[FieldNumber[\"ServiceDescriptorProto_Method\"] = 2] = \"ServiceDescriptorProto_Method\";\n})($f61d5e2e5c1f3634$var$FieldNumber || ($f61d5e2e5c1f3634$var$FieldNumber = {}));\n/**\n * Return a string that matches the definition of a field in the protobuf\n * source. Does not take custom options into account.\n */ function $f61d5e2e5c1f3634$var$declarationString() {\n    var _a, _b;\n    const parts = [];\n    if (this.repeated) parts.push(\"repeated\");\n    if (this.optional) parts.push(\"optional\");\n    const file = this.kind === \"extension\" ? this.file : this.parent.file;\n    if (file.syntax == \"proto2\" && this.proto.label === $hi5gE.FieldDescriptorProto_Label.REQUIRED) parts.push(\"required\");\n    let type;\n    switch(this.fieldKind){\n        case \"scalar\":\n            type = $9mVQy.ScalarType[this.scalar].toLowerCase();\n            break;\n        case \"enum\":\n            type = this.enum.typeName;\n            break;\n        case \"message\":\n            type = this.message.typeName;\n            break;\n        case \"map\":\n            {\n                const k = $9mVQy.ScalarType[this.mapKey].toLowerCase();\n                let v;\n                switch(this.mapValue.kind){\n                    case \"scalar\":\n                        v = $9mVQy.ScalarType[this.mapValue.scalar].toLowerCase();\n                        break;\n                    case \"enum\":\n                        v = this.mapValue.enum.typeName;\n                        break;\n                    case \"message\":\n                        v = this.mapValue.message.typeName;\n                        break;\n                }\n                type = `map<${k}, ${v}>`;\n                break;\n            }\n    }\n    parts.push(`${type} ${this.name} = ${this.number}`);\n    const options = [];\n    if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== undefined) options.push(`packed = ${this.proto.options.packed.toString()}`);\n    let defaultValue = this.proto.defaultValue;\n    if (defaultValue !== undefined) {\n        if (this.proto.type == $hi5gE.FieldDescriptorProto_Type.BYTES || this.proto.type == $hi5gE.FieldDescriptorProto_Type.STRING) defaultValue = '\"' + defaultValue.replace('\"', '\\\\\"') + '\"';\n        options.push(`default = ${defaultValue}`);\n    }\n    if (this.jsonName !== undefined) options.push(`json_name = \"${this.jsonName}\"`);\n    if (((_b = this.proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) === true) options.push(`deprecated = true`);\n    if (options.length > 0) parts.push(\"[\" + options.join(\", \") + \"]\");\n    return parts.join(\" \");\n}\n/**\n * Parses a text-encoded default value (proto2) of a scalar or enum field.\n */ function $f61d5e2e5c1f3634$var$getDefaultValue() {\n    const d = this.proto.defaultValue;\n    if (d === undefined) return undefined;\n    switch(this.fieldKind){\n        case \"enum\":\n            {\n                const enumValue = this.enum.values.find((v)=>v.name === d);\n                (0, $2RXcp.assert)(enumValue, `cannot parse ${this.toString()} default value: ${d}`);\n                return enumValue.number;\n            }\n        case \"scalar\":\n            switch(this.scalar){\n                case $9mVQy.ScalarType.STRING:\n                    return d;\n                case $9mVQy.ScalarType.BYTES:\n                    {\n                        const u = $f61d5e2e5c1f3634$var$unescapeBytesDefaultValue(d);\n                        if (u === false) throw new Error(`cannot parse ${this.toString()} default value: ${d}`);\n                        return u;\n                    }\n                case $9mVQy.ScalarType.INT64:\n                case $9mVQy.ScalarType.SFIXED64:\n                case $9mVQy.ScalarType.SINT64:\n                    return $dkRgk.protoInt64.parse(d);\n                case $9mVQy.ScalarType.UINT64:\n                case $9mVQy.ScalarType.FIXED64:\n                    return $dkRgk.protoInt64.uParse(d);\n                case $9mVQy.ScalarType.DOUBLE:\n                case $9mVQy.ScalarType.FLOAT:\n                    switch(d){\n                        case \"inf\":\n                            return Number.POSITIVE_INFINITY;\n                        case \"-inf\":\n                            return Number.NEGATIVE_INFINITY;\n                        case \"nan\":\n                            return Number.NaN;\n                        default:\n                            return parseFloat(d);\n                    }\n                case $9mVQy.ScalarType.BOOL:\n                    return d === \"true\";\n                case $9mVQy.ScalarType.INT32:\n                case $9mVQy.ScalarType.UINT32:\n                case $9mVQy.ScalarType.SINT32:\n                case $9mVQy.ScalarType.FIXED32:\n                case $9mVQy.ScalarType.SFIXED32:\n                    return parseInt(d, 10);\n            }\n            break;\n        default:\n            return undefined;\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */ function $f61d5e2e5c1f3634$var$unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next () {\n            if (this.tail.length == 0) return false;\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take (n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        }\n    };\n    while(input.next())switch(input.c){\n        case \"\\\\\":\n            if (input.next()) switch(input.c){\n                case \"\\\\\":\n                    b.push(input.c.charCodeAt(0));\n                    break;\n                case \"b\":\n                    b.push(0x08);\n                    break;\n                case \"f\":\n                    b.push(0x0c);\n                    break;\n                case \"n\":\n                    b.push(0x0a);\n                    break;\n                case \"r\":\n                    b.push(0x0d);\n                    break;\n                case \"t\":\n                    b.push(0x09);\n                    break;\n                case \"v\":\n                    b.push(0x0b);\n                    break;\n                case \"0\":\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                    {\n                        const s = input.c;\n                        const t = input.take(2);\n                        if (t === false) return false;\n                        const n = parseInt(s + t, 8);\n                        if (isNaN(n)) return false;\n                        b.push(n);\n                        break;\n                    }\n                case \"x\":\n                    {\n                        const s = input.c;\n                        const t = input.take(2);\n                        if (t === false) return false;\n                        const n = parseInt(s + t, 16);\n                        if (isNaN(n)) return false;\n                        b.push(n);\n                        break;\n                    }\n                case \"u\":\n                    {\n                        const s = input.c;\n                        const t = input.take(4);\n                        if (t === false) return false;\n                        const n = parseInt(s + t, 16);\n                        if (isNaN(n)) return false;\n                        const chunk = new Uint8Array(4);\n                        const view = new DataView(chunk.buffer);\n                        view.setInt32(0, n, true);\n                        b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                        break;\n                    }\n                case \"U\":\n                    {\n                        const s = input.c;\n                        const t = input.take(8);\n                        if (t === false) return false;\n                        const tc = $dkRgk.protoInt64.uEnc(s + t);\n                        const chunk = new Uint8Array(8);\n                        const view = new DataView(chunk.buffer);\n                        view.setInt32(0, tc.lo, true);\n                        view.setInt32(4, tc.hi, true);\n                        b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                        break;\n                    }\n            }\n            break;\n        default:\n            b.push(input.c.charCodeAt(0));\n    }\n    return new Uint8Array(b);\n}\n\n});\n\nparcelRequire.register(\"7lDkw\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createRegistry = void 0;\n/**\n * Create a new registry from the given types.\n */ function $559900ab5318b3ab$var$createRegistry(...types) {\n    const messages = {};\n    const enums = {};\n    const services = {};\n    const registry = {\n        /**\n         * Add a type to the registry. For messages, the types used in message\n         * fields are added recursively. For services, the message types used\n         * for requests and responses are added recursively.\n         */ add (type) {\n            if (\"fields\" in type) {\n                if (!this.findMessage(type.typeName)) {\n                    messages[type.typeName] = type;\n                    for (const field of type.fields.list()){\n                        if (field.kind == \"message\") this.add(field.T);\n                        else if (field.kind == \"map\" && field.V.kind == \"message\") this.add(field.V.T);\n                        else if (field.kind == \"enum\") this.add(field.T);\n                    }\n                }\n            } else if (\"methods\" in type) {\n                if (!this.findService(type.typeName)) {\n                    services[type.typeName] = type;\n                    for (const method of Object.values(type.methods)){\n                        this.add(method.I);\n                        this.add(method.O);\n                    }\n                }\n            } else enums[type.typeName] = type;\n        },\n        findMessage (typeName) {\n            return messages[typeName];\n        },\n        findEnum (typeName) {\n            return enums[typeName];\n        },\n        findService (typeName) {\n            return services[typeName];\n        }\n    };\n    for (const type of types)registry.add(type);\n    return registry;\n}\nmodule.exports.createRegistry = $559900ab5318b3ab$var$createRegistry;\n\n});\n\nparcelRequire.register(\"4cWLX\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createRegistryFromDescriptors = void 0;\n\nvar $2RXcp = parcelRequire(\"2RXcp\");\n\nvar $bkOG2 = parcelRequire(\"bkOG2\");\n\nvar $aYdaj = parcelRequire(\"aYdaj\");\n\nvar $hxoip = parcelRequire(\"hxoip\");\n\nvar $bM41u = parcelRequire(\"bM41u\");\n\nvar $46Pek = parcelRequire(\"46Pek\");\n\nvar $atJju = parcelRequire(\"atJju\");\n\nvar $b6QY7 = parcelRequire(\"b6QY7\");\n\nvar $cl1bT = parcelRequire(\"cl1bT\");\n\nvar $6naYd = parcelRequire(\"6naYd\");\n\nvar $jlOnx = parcelRequire(\"jlOnx\");\n\nvar $k2cpW = parcelRequire(\"k2cpW\");\n\nvar $hi5gE = parcelRequire(\"hi5gE\");\n\nvar $l83TF = parcelRequire(\"l83TF\");\n// well-known message types with specialized JSON representation\nconst $3105df6328a52f1a$var$wkMessages = [\n    $atJju.Any,\n    $46Pek.Duration,\n    $b6QY7.Empty,\n    $cl1bT.FieldMask,\n    $6naYd.Struct,\n    $6naYd.Value,\n    $6naYd.ListValue,\n    $bM41u.Timestamp,\n    $46Pek.Duration,\n    $k2cpW.DoubleValue,\n    $k2cpW.FloatValue,\n    $k2cpW.Int64Value,\n    $k2cpW.Int32Value,\n    $k2cpW.UInt32Value,\n    $k2cpW.UInt64Value,\n    $k2cpW.BoolValue,\n    $k2cpW.StringValue,\n    $k2cpW.BytesValue\n];\n// well-known enum types with specialized JSON representation\nconst $3105df6328a52f1a$var$wkEnums = [\n    (0, $jlOnx.getEnumType)($6naYd.NullValue)\n];\n/**\n * Create a registry from a set of descriptors. The types returned by this\n * registry behave exactly like types from generated code.\n *\n * This function accepts google.protobuf.FileDescriptorSet in serialized or\n * deserialized form. Alternatively, it also accepts a DescriptorSet (see\n * createDescriptorSet()).\n *\n * By default, all well-known types with a specialized JSON representation\n * are replaced with their generated counterpart in this package.\n */ function $3105df6328a52f1a$var$createRegistryFromDescriptors(input, replaceWkt = true) {\n    const set = input instanceof Uint8Array || input instanceof $hi5gE.FileDescriptorSet ? (0, $l83TF.createDescriptorSet)(input) : input;\n    const enums = {};\n    const messages = {};\n    const services = {};\n    if (replaceWkt) {\n        for (const mt of $3105df6328a52f1a$var$wkMessages)messages[mt.typeName] = mt;\n        for (const et of $3105df6328a52f1a$var$wkEnums)enums[et.typeName] = et;\n    }\n    return {\n        /**\n         * May raise an error on invalid descriptors.\n         */ findEnum (typeName) {\n            const existing = enums[typeName];\n            if (existing) return existing;\n            const desc = set.enums.get(typeName);\n            if (!desc) return undefined;\n            const runtime = desc.file.syntax == \"proto3\" ? $bkOG2.proto3 : $aYdaj.proto2;\n            const type = runtime.makeEnumType(typeName, desc.values.map((u)=>({\n                    no: u.number,\n                    name: u.name,\n                    localName: (0, $hxoip.localName)(u)\n                })), {});\n            enums[typeName] = type;\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */ findMessage (typeName) {\n            const existing = messages[typeName];\n            if (existing) return existing;\n            const desc = set.messages.get(typeName);\n            if (!desc) return undefined;\n            const runtime = desc.file.syntax == \"proto3\" ? $bkOG2.proto3 : $aYdaj.proto2;\n            const fields = [];\n            const type = runtime.makeMessageType(typeName, ()=>fields, {\n                localName: (0, $hxoip.localName)(desc)\n            });\n            messages[typeName] = type;\n            for (const field of desc.fields){\n                const fieldInfo = $3105df6328a52f1a$var$makeFieldInfo(field, this);\n                fields.push(fieldInfo);\n            }\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */ findService (typeName) {\n            const existing = services[typeName];\n            if (existing) return existing;\n            const desc = set.services.get(typeName);\n            if (!desc) return undefined;\n            const methods = {};\n            for (const method of desc.methods){\n                const I = this.findMessage(method.input.typeName);\n                const O = this.findMessage(method.output.typeName);\n                (0, $2RXcp.assert)(I, `message \"${method.input.typeName}\" for ${method.toString()} not found`);\n                (0, $2RXcp.assert)(O, `output message \"${method.output.typeName}\" for ${method.toString()} not found`);\n                methods[(0, $hxoip.localName)(method)] = {\n                    name: method.name,\n                    I: I,\n                    O: O,\n                    kind: method.methodKind,\n                    idempotency: method.idempotency\n                };\n            }\n            return services[typeName] = {\n                typeName: desc.typeName,\n                methods: methods\n            };\n        }\n    };\n}\nmodule.exports.createRegistryFromDescriptors = $3105df6328a52f1a$var$createRegistryFromDescriptors;\nfunction $3105df6328a52f1a$var$makeFieldInfo(desc, resolver) {\n    switch(desc.fieldKind){\n        case \"map\":\n            return $3105df6328a52f1a$var$makeMapFieldInfo(desc, resolver);\n        case \"message\":\n            return $3105df6328a52f1a$var$makeMessageFieldInfo(desc, resolver);\n        case \"enum\":\n            {\n                const fi = $3105df6328a52f1a$var$makeEnumFieldInfo(desc, resolver);\n                fi.default = desc.getDefaultValue();\n                return fi;\n            }\n        case \"scalar\":\n            {\n                const fi = $3105df6328a52f1a$var$makeScalarFieldInfo(desc);\n                fi.default = desc.getDefaultValue();\n                return fi;\n            }\n    }\n}\nfunction $3105df6328a52f1a$var$makeMapFieldInfo(field, resolver) {\n    const base = {\n        kind: \"map\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        K: field.mapKey\n    };\n    if (field.mapValue.message) {\n        const messageType = resolver.findMessage(field.mapValue.message.typeName);\n        (0, $2RXcp.assert)(messageType, `message \"${field.mapValue.message.typeName}\" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}, base), {\n            V: {\n                kind: \"message\",\n                T: messageType\n            }\n        });\n    }\n    if (field.mapValue.enum) {\n        const enumType = resolver.findEnum(field.mapValue.enum.typeName);\n        (0, $2RXcp.assert)(enumType, `enum \"${field.mapValue.enum.typeName}\" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}, base), {\n            V: {\n                kind: \"enum\",\n                T: enumType\n            }\n        });\n    }\n    return Object.assign(Object.assign({}, base), {\n        V: {\n            kind: \"scalar\",\n            T: field.mapValue.scalar\n        }\n    });\n}\nfunction $3105df6328a52f1a$var$makeScalarFieldInfo(field) {\n    const base = {\n        kind: \"scalar\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: field.scalar\n    };\n    if (field.repeated) return Object.assign(Object.assign({}, base), {\n        repeated: true,\n        packed: field.packed,\n        oneof: undefined,\n        T: field.scalar\n    });\n    if (field.oneof) return Object.assign(Object.assign({}, base), {\n        oneof: field.oneof.name\n    });\n    if (field.optional) return Object.assign(Object.assign({}, base), {\n        opt: true\n    });\n    return base;\n}\nfunction $3105df6328a52f1a$var$makeMessageFieldInfo(field, resolver) {\n    const messageType = resolver.findMessage(field.message.typeName);\n    (0, $2RXcp.assert)(messageType, `message \"${field.message.typeName}\" for ${field.toString()} not found`);\n    const base = {\n        kind: \"message\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: messageType\n    };\n    if (field.repeated) return Object.assign(Object.assign({}, base), {\n        repeated: true,\n        packed: field.packed,\n        oneof: undefined\n    });\n    if (field.oneof) return Object.assign(Object.assign({}, base), {\n        oneof: field.oneof.name\n    });\n    if (field.optional) return Object.assign(Object.assign({}, base), {\n        opt: true\n    });\n    return base;\n}\nfunction $3105df6328a52f1a$var$makeEnumFieldInfo(field, resolver) {\n    const enumType = resolver.findEnum(field.enum.typeName);\n    (0, $2RXcp.assert)(enumType, `enum \"${field.enum.typeName}\" for ${field.toString()} not found`);\n    const base = {\n        kind: \"enum\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: enumType\n    };\n    if (field.repeated) return Object.assign(Object.assign({}, base), {\n        repeated: true,\n        packed: field.packed,\n        oneof: undefined\n    });\n    if (field.oneof) return Object.assign(Object.assign({}, base), {\n        oneof: field.oneof.name\n    });\n    if (field.optional) return Object.assign(Object.assign({}, base), {\n        opt: true\n    });\n    return base;\n}\n\n});\n\nparcelRequire.register(\"ga6K0\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.toPlainMessage = void 0;\n\nvar $daMMc = parcelRequire(\"daMMc\");\n/**\n * toPlainMessage returns a new object by striping\n * all methods from a message, leaving only fields and\n * oneof groups. It is recursive, meaning it applies this\n * same logic to all nested message fields as well.\n */ function $bc42cf2933a54116$var$toPlainMessage(message) {\n    const type = message.getType();\n    const target = {};\n    for (const member of type.fields.byMember()){\n        const source = message[member.localName];\n        let copy;\n        if (member.repeated) copy = source.map((e)=>$bc42cf2933a54116$var$toPlainValue(e));\n        else if (member.kind == \"map\") {\n            copy = {};\n            for (const [key, v] of Object.entries(source))copy[key] = $bc42cf2933a54116$var$toPlainValue(v);\n        } else if (member.kind == \"oneof\") {\n            const f = member.findField(source.case);\n            copy = f ? {\n                case: source.case,\n                value: $bc42cf2933a54116$var$toPlainValue(source.value)\n            } : {\n                case: undefined\n            };\n        } else copy = $bc42cf2933a54116$var$toPlainValue(source);\n        target[member.localName] = copy;\n    }\n    return target;\n}\nmodule.exports.toPlainMessage = $bc42cf2933a54116$var$toPlainMessage;\nfunction $bc42cf2933a54116$var$toPlainValue(value) {\n    if (value === undefined) return value;\n    if (value instanceof $daMMc.Message) return $bc42cf2933a54116$var$toPlainMessage(value);\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n\n});\n\n\nparcelRequire.register(\"dpeGY\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.codeFromString = module.exports.codeToString = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * codeToString returns the string representation of a Code.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $9c2901ba5e31df27$var$codeToString(value) {\n    const name = $2S2uU.Code[value];\n    if (typeof name != \"string\") return value.toString();\n    return name[0].toLowerCase() + name.substring(1).replace(/[A-Z]/g, (c)=>\"_\" + c.toLowerCase());\n}\nmodule.exports.codeToString = $9c2901ba5e31df27$var$codeToString;\nlet $9c2901ba5e31df27$var$stringToCode;\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $9c2901ba5e31df27$var$codeFromString(value) {\n    if (!$9c2901ba5e31df27$var$stringToCode) {\n        $9c2901ba5e31df27$var$stringToCode = {};\n        for (const value of Object.values($2S2uU.Code)){\n            if (typeof value == \"string\") continue;\n            $9c2901ba5e31df27$var$stringToCode[$9c2901ba5e31df27$var$codeToString(value)] = value;\n        }\n    }\n    return $9c2901ba5e31df27$var$stringToCode[value];\n}\nmodule.exports.codeFromString = $9c2901ba5e31df27$var$codeFromString;\n\n});\n\n\nparcelRequire.register(\"4TIBd\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $390ee4f96ea853ca$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $390ee4f96ea853ca$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $390ee4f96ea853ca$var$__await ? (this.v = v, this) : new $390ee4f96ea853ca$var$__await(v);\n};\nvar $390ee4f96ea853ca$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $390ee4f96ea853ca$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nvar $390ee4f96ea853ca$var$__asyncDelegator = module.exports && module.exports.__asyncDelegator || function(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $390ee4f96ea853ca$var$__await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createAsyncIterable = module.exports.createWritableIterable = module.exports.makeIterableAbortable = module.exports.untilFirst = module.exports.readAllBytes = module.exports.transformSplitEnvelope = module.exports.transformJoinEnvelopes = module.exports.transformDecompressEnvelope = module.exports.transformCompressEnvelope = module.exports.transformParseEnvelope = module.exports.transformSerializeEnvelope = module.exports.transformNormalizeMessage = module.exports.transformReadAllBytes = module.exports.transformPrepend = module.exports.transformAppend = module.exports.transformCatchFinally = module.exports.transformCatch = module.exports.pipe = module.exports.sinkAllBytes = module.exports.sinkAll = module.exports.pipeTo = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $bO3lh = parcelRequire(\"bO3lh\");\n\nvar $cKeEL = parcelRequire(\"cKeEL\");\nfunction $390ee4f96ea853ca$var$pipeTo(source, ...rest) {\n    const [transforms, sink, opt] = $390ee4f96ea853ca$var$pickTransformsAndSink(rest);\n    let iterable = source;\n    let abortable;\n    if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) iterable = abortable = $390ee4f96ea853ca$var$makeIterableAbortable(iterable);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    iterable = $390ee4f96ea853ca$var$pipe(iterable, ...transforms, {\n        propagateDownStreamError: false\n    });\n    return sink(iterable).catch((reason)=>{\n        if (abortable) return abortable.abort(reason).then(()=>Promise.reject(reason));\n        return Promise.reject(reason);\n    });\n}\nmodule.exports.pipeTo = $390ee4f96ea853ca$var$pipeTo;\n// pick transforms, the sink, and options from the pipeTo() rest parameter\nfunction $390ee4f96ea853ca$var$pickTransformsAndSink(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") opt = rest.pop();\n    const sink = rest.pop();\n    return [\n        rest,\n        sink,\n        opt\n    ];\n}\n/**\n * Creates an AsyncIterableSink that concatenates all elements from the input.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$sinkAll() {\n    return async function(iterable) {\n        var _a, e_1, _b, _c;\n        const all = [];\n        try {\n            for(var _d = true, iterable_1 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;){\n                _c = iterable_1_1.value;\n                _d = false;\n                try {\n                    const chunk = _c;\n                    all.push(chunk);\n                } finally{\n                    _d = true;\n                }\n            }\n        } catch (e_1_1) {\n            e_1 = {\n                error: e_1_1\n            };\n        } finally{\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n            } finally{\n                if (e_1) throw e_1.error;\n            }\n        }\n        return all;\n    };\n}\nmodule.exports.sinkAll = $390ee4f96ea853ca$var$sinkAll;\n/**\n * Creates an AsyncIterableSink that concatenates all chunks from the input into\n * a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$sinkAllBytes(readMaxBytes, lengthHint) {\n    return async function(iterable) {\n        return await $390ee4f96ea853ca$var$readAllBytes(iterable, readMaxBytes, lengthHint);\n    };\n}\nmodule.exports.sinkAllBytes = $390ee4f96ea853ca$var$sinkAllBytes;\nfunction $390ee4f96ea853ca$var$pipe(source, ...rest) {\n    return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function* pipe_1() {\n        const [transforms, opt] = $390ee4f96ea853ca$var$pickTransforms(rest);\n        let abortable;\n        let iterable = source;\n        if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) iterable = abortable = $390ee4f96ea853ca$var$makeIterableAbortable(iterable);\n        for (const t of transforms)iterable = t(iterable);\n        const it = iterable[Symbol.asyncIterator]();\n        for(;;){\n            const r = yield $390ee4f96ea853ca$var$__await(it.next());\n            if (r.done === true) break;\n            if (!abortable) {\n                yield yield $390ee4f96ea853ca$var$__await(r.value);\n                continue;\n            }\n            try {\n                yield yield $390ee4f96ea853ca$var$__await(r.value);\n            } catch (e) {\n                yield $390ee4f96ea853ca$var$__await(abortable.abort(e)); // propagate downstream error to the source\n                throw e;\n            }\n        }\n    });\n}\nmodule.exports.pipe = $390ee4f96ea853ca$var$pipe;\nfunction $390ee4f96ea853ca$var$pickTransforms(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") opt = rest.pop();\n    return [\n        rest,\n        opt\n    ];\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given catchError function.\n *\n * The catchError function may return a final value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformCatch(catchError) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            const it = iterable[Symbol.asyncIterator]();\n            for(;;){\n                let r;\n                try {\n                    r = yield $390ee4f96ea853ca$var$__await(it.next());\n                } catch (e) {\n                    const caught = yield $390ee4f96ea853ca$var$__await(catchError(e));\n                    if (caught !== undefined) yield yield $390ee4f96ea853ca$var$__await(caught);\n                    break;\n                }\n                if (r.done === true) break;\n                yield yield $390ee4f96ea853ca$var$__await(r.value);\n            }\n        });\n    };\n}\nmodule.exports.transformCatch = $390ee4f96ea853ca$var$transformCatch;\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given function. Unlike transformCatch(), the given function\n * is also called when no error is raised.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformCatchFinally(catchFinally) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            let err;\n            const it = iterable[Symbol.asyncIterator]();\n            for(;;){\n                let r;\n                try {\n                    r = yield $390ee4f96ea853ca$var$__await(it.next());\n                } catch (e) {\n                    err = e;\n                    break;\n                }\n                if (r.done === true) break;\n                yield yield $390ee4f96ea853ca$var$__await(r.value);\n            }\n            const caught = yield $390ee4f96ea853ca$var$__await(catchFinally(err));\n            if (caught !== undefined) yield yield $390ee4f96ea853ca$var$__await(caught);\n        });\n    };\n}\nmodule.exports.transformCatchFinally = $390ee4f96ea853ca$var$transformCatchFinally;\n/**\n * Creates an AsyncIterableTransform that appends a value.\n *\n * The element to append is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformAppend(provide) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_2, _b, _c;\n            try {\n                for(var _d = true, iterable_2 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_2_1; iterable_2_1 = yield $390ee4f96ea853ca$var$__await(iterable_2.next()), _a = iterable_2_1.done, !_a;){\n                    _c = iterable_2_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        yield yield $390ee4f96ea853ca$var$__await(chunk);\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_2_1) {\n                e_2 = {\n                    error: e_2_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_2.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_2));\n                } finally{\n                    if (e_2) throw e_2.error;\n                }\n            }\n            const append = yield $390ee4f96ea853ca$var$__await(provide());\n            if (append !== undefined) yield yield $390ee4f96ea853ca$var$__await(append);\n        });\n    };\n}\nmodule.exports.transformAppend = $390ee4f96ea853ca$var$transformAppend;\n/**\n * Creates an AsyncIterableTransform that prepends an element.\n *\n * The element to prepend is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformPrepend(provide) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_3, _b, _c;\n            const prepend = yield $390ee4f96ea853ca$var$__await(provide());\n            if (prepend !== undefined) yield yield $390ee4f96ea853ca$var$__await(prepend);\n            try {\n                for(var _d = true, iterable_3 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_3_1; iterable_3_1 = yield $390ee4f96ea853ca$var$__await(iterable_3.next()), _a = iterable_3_1.done, !_a;){\n                    _c = iterable_3_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        yield yield $390ee4f96ea853ca$var$__await(chunk);\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_3_1) {\n                e_3 = {\n                    error: e_3_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_3.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_3));\n                } finally{\n                    if (e_3) throw e_3.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformPrepend = $390ee4f96ea853ca$var$transformPrepend;\n/**\n * Creates an AsyncIterableTransform that reads all bytes from the input, and\n * concatenates them to a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformReadAllBytes(readMaxBytes, lengthHint) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            yield yield $390ee4f96ea853ca$var$__await((yield $390ee4f96ea853ca$var$__await($390ee4f96ea853ca$var$readAllBytes(iterable, readMaxBytes, lengthHint))));\n        });\n    };\n}\nmodule.exports.transformReadAllBytes = $390ee4f96ea853ca$var$transformReadAllBytes;\n/**\n * Creates an AsyncIterableTransform that takes partial protobuf messages of the\n * specified message type as input, and yields full instances.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformNormalizeMessage(messageType) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_4, _b, _c;\n            try {\n                for(var _d = true, iterable_4 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_4_1; iterable_4_1 = yield $390ee4f96ea853ca$var$__await(iterable_4.next()), _a = iterable_4_1.done, !_a;){\n                    _c = iterable_4_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        if (chunk instanceof messageType) yield yield $390ee4f96ea853ca$var$__await(chunk);\n                        else yield yield $390ee4f96ea853ca$var$__await(new messageType(chunk));\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_4_1) {\n                e_4 = {\n                    error: e_4_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_4.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_4));\n                } finally{\n                    if (e_4) throw e_4.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformNormalizeMessage = $390ee4f96ea853ca$var$transformNormalizeMessage;\nfunction $390ee4f96ea853ca$var$transformSerializeEnvelope(serialization, endStreamFlag, endSerialization) {\n    if (endStreamFlag === undefined || endSerialization === undefined) return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_5, _b, _c;\n            try {\n                for(var _d = true, iterable_5 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_5_1; iterable_5_1 = yield $390ee4f96ea853ca$var$__await(iterable_5.next()), _a = iterable_5_1.done, !_a;){\n                    _c = iterable_5_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        const data = serialization.serialize(chunk);\n                        yield yield $390ee4f96ea853ca$var$__await({\n                            flags: 0,\n                            data: data\n                        });\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_5_1) {\n                e_5 = {\n                    error: e_5_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_5.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_5));\n                } finally{\n                    if (e_5) throw e_5.error;\n                }\n            }\n        });\n    };\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_6, _b, _c;\n            try {\n                for(var _d = true, iterable_6 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_6_1; iterable_6_1 = yield $390ee4f96ea853ca$var$__await(iterable_6.next()), _a = iterable_6_1.done, !_a;){\n                    _c = iterable_6_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        let data;\n                        let flags = 0;\n                        if (chunk.end) {\n                            flags = flags | endStreamFlag;\n                            data = endSerialization.serialize(chunk.value);\n                        } else data = serialization.serialize(chunk.value);\n                        yield yield $390ee4f96ea853ca$var$__await({\n                            flags: flags,\n                            data: data\n                        });\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_6_1) {\n                e_6 = {\n                    error: e_6_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_6.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_6));\n                } finally{\n                    if (e_6) throw e_6.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformSerializeEnvelope = $390ee4f96ea853ca$var$transformSerializeEnvelope;\nfunction $390ee4f96ea853ca$var$transformParseEnvelope(serialization, endStreamFlag, endSerialization) {\n    // code path always yields ParsedEnvelopedMessage<T, E>\n    if (endSerialization && endStreamFlag !== undefined) return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_7, _b, _c;\n            try {\n                for(var _d = true, iterable_7 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_7_1; iterable_7_1 = yield $390ee4f96ea853ca$var$__await(iterable_7.next()), _a = iterable_7_1.done, !_a;){\n                    _c = iterable_7_1.value;\n                    _d = false;\n                    try {\n                        const { flags: flags, data: data } = _c;\n                        if ((flags & endStreamFlag) === endStreamFlag) yield yield $390ee4f96ea853ca$var$__await({\n                            value: endSerialization.parse(data),\n                            end: true\n                        });\n                        else yield yield $390ee4f96ea853ca$var$__await({\n                            value: serialization.parse(data),\n                            end: false\n                        });\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_7_1) {\n                e_7 = {\n                    error: e_7_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_7.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_7));\n                } finally{\n                    if (e_7) throw e_7.error;\n                }\n            }\n        });\n    };\n    // code path always yields T\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_8, _b, _c;\n            try {\n                for(var _d = true, iterable_8 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_8_1; iterable_8_1 = yield $390ee4f96ea853ca$var$__await(iterable_8.next()), _a = iterable_8_1.done, !_a;){\n                    _c = iterable_8_1.value;\n                    _d = false;\n                    try {\n                        const { flags: flags, data: data } = _c;\n                        if (endStreamFlag !== undefined && (flags & endStreamFlag) === endStreamFlag) {\n                            if (endSerialization === null) throw new $dbKGs.ConnectError(\"unexpected end flag\", $2S2uU.Code.InvalidArgument);\n                            continue;\n                        }\n                        yield yield $390ee4f96ea853ca$var$__await(serialization.parse(data));\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_8_1) {\n                e_8 = {\n                    error: e_8_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_8.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_8));\n                } finally{\n                    if (e_8) throw e_8.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformParseEnvelope = $390ee4f96ea853ca$var$transformParseEnvelope;\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and compresses them if they are larger than compressMinBytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformCompressEnvelope(compression, compressMinBytes) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_9, _b, _c;\n            try {\n                for(var _d = true, iterable_9 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_9_1; iterable_9_1 = yield $390ee4f96ea853ca$var$__await(iterable_9.next()), _a = iterable_9_1.done, !_a;){\n                    _c = iterable_9_1.value;\n                    _d = false;\n                    try {\n                        const env = _c;\n                        yield yield $390ee4f96ea853ca$var$__await((yield $390ee4f96ea853ca$var$__await((0, $bO3lh.envelopeCompress)(env, compression, compressMinBytes))));\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_9_1) {\n                e_9 = {\n                    error: e_9_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_9.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_9));\n                } finally{\n                    if (e_9) throw e_9.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformCompressEnvelope = $390ee4f96ea853ca$var$transformCompressEnvelope;\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and decompresses them using the given compression.\n *\n * The iterable raises an error if the decompressed payload of an enveloped\n * message is larger than readMaxBytes, or if no compression is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformDecompressEnvelope(compression, readMaxBytes) {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_10, _b, _c;\n            try {\n                for(var _d = true, iterable_10 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_10_1; iterable_10_1 = yield $390ee4f96ea853ca$var$__await(iterable_10.next()), _a = iterable_10_1.done, !_a;){\n                    _c = iterable_10_1.value;\n                    _d = false;\n                    try {\n                        const env = _c;\n                        yield yield $390ee4f96ea853ca$var$__await((yield $390ee4f96ea853ca$var$__await((0, $bO3lh.envelopeDecompress)(env, compression, readMaxBytes))));\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_10_1) {\n                e_10 = {\n                    error: e_10_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_10.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_10));\n                } finally{\n                    if (e_10) throw e_10.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformDecompressEnvelope = $390ee4f96ea853ca$var$transformDecompressEnvelope;\n/**\n * Create an AsyncIterableTransform that takes enveloped messages as a source,\n * and joins them into a stream of raw bytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformJoinEnvelopes() {\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_11, _b, _c;\n            try {\n                for(var _d = true, iterable_11 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_11_1; iterable_11_1 = yield $390ee4f96ea853ca$var$__await(iterable_11.next()), _a = iterable_11_1.done, !_a;){\n                    _c = iterable_11_1.value;\n                    _d = false;\n                    try {\n                        const { flags: flags, data: data } = _c;\n                        yield yield $390ee4f96ea853ca$var$__await((0, $bO3lh.encodeEnvelope)(flags, data));\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_11_1) {\n                e_11 = {\n                    error: e_11_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_11.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_11));\n                } finally{\n                    if (e_11) throw e_11.error;\n                }\n            }\n        });\n    };\n}\nmodule.exports.transformJoinEnvelopes = $390ee4f96ea853ca$var$transformJoinEnvelopes;\n/**\n * Create an AsyncIterableTransform that takes raw bytes as a source, and splits\n * them into enveloped messages.\n *\n * The iterable raises an error\n * - if the payload of an enveloped message is larger than readMaxBytes,\n * - if the stream ended before an enveloped message fully arrived,\n * - or if the stream ended with extraneous data.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$transformSplitEnvelope(readMaxBytes) {\n    // append chunk to buffer, returning updated buffer\n    function append(buffer, chunk) {\n        const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        return n;\n    }\n    // tuple 0: envelope, or undefined if incomplete\n    // tuple 1: remainder of the buffer\n    function shiftEnvelope(buffer, header) {\n        if (buffer.byteLength < 5 + header.length) return [\n            undefined,\n            buffer\n        ];\n        return [\n            {\n                flags: header.flags,\n                data: buffer.subarray(5, 5 + header.length)\n            },\n            buffer.subarray(5 + header.length)\n        ];\n    }\n    // undefined: header is incomplete\n    function peekHeader(buffer) {\n        if (buffer.byteLength < 5) return undefined;\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const length = view.getUint32(1); // 4 bytes message length\n        const flags = view.getUint8(0); // first byte is flags\n        return {\n            length: length,\n            flags: flags\n        };\n    }\n    return function(iterable) {\n        return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function*() {\n            var _a, e_12, _b, _c;\n            let buffer = new Uint8Array(0);\n            try {\n                for(var _d = true, iterable_12 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_12_1; iterable_12_1 = yield $390ee4f96ea853ca$var$__await(iterable_12.next()), _a = iterable_12_1.done, !_a;){\n                    _c = iterable_12_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        buffer = append(buffer, chunk);\n                        for(;;){\n                            const header = peekHeader(buffer);\n                            if (!header) break;\n                            (0, $cKeEL.assertReadMaxBytes)(readMaxBytes, header.length, true);\n                            let env;\n                            [env, buffer] = shiftEnvelope(buffer, header);\n                            if (!env) break;\n                            yield yield $390ee4f96ea853ca$var$__await(env);\n                        }\n                    } finally{\n                        _d = true;\n                    }\n                }\n            } catch (e_12_1) {\n                e_12 = {\n                    error: e_12_1\n                };\n            } finally{\n                try {\n                    if (!_d && !_a && (_b = iterable_12.return)) yield $390ee4f96ea853ca$var$__await(_b.call(iterable_12));\n                } finally{\n                    if (e_12) throw e_12.error;\n                }\n            }\n            if (buffer.byteLength > 0) {\n                const header = peekHeader(buffer);\n                let message = \"protocol error: incomplete envelope\";\n                if (header) message = `protocol error: promised ${header.length} bytes in enveloped message, got ${buffer.byteLength - 5} bytes`;\n                throw new $dbKGs.ConnectError(message, $2S2uU.Code.InvalidArgument);\n            }\n        });\n    };\n}\nmodule.exports.transformSplitEnvelope = $390ee4f96ea853ca$var$transformSplitEnvelope;\n/**\n * Reads all bytes from the source, and concatenates them to a single Uint8Array.\n *\n * Raises an error if:\n * - more than readMaxBytes are read\n * - lengthHint is a positive integer, but larger than readMaxBytes\n * - lengthHint is a positive integer, and the source contains more or less bytes\n *   than promised\n *\n * @private Internal code, does not follow semantic versioning.\n */ async function $390ee4f96ea853ca$var$readAllBytes(iterable, readMaxBytes, lengthHint) {\n    var _a, e_13, _b, _c, _d, e_14, _e, _f;\n    const [ok, hint] = $390ee4f96ea853ca$var$parseLengthHint(lengthHint);\n    if (ok) {\n        if (hint > readMaxBytes) (0, $cKeEL.assertReadMaxBytes)(readMaxBytes, hint, true);\n        const buffer = new Uint8Array(hint);\n        let offset = 0;\n        try {\n            for(var _g = true, iterable_13 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_13_1; iterable_13_1 = await iterable_13.next(), _a = iterable_13_1.done, !_a;){\n                _c = iterable_13_1.value;\n                _g = false;\n                try {\n                    const chunk = _c;\n                    if (offset + chunk.byteLength > hint) throw new $dbKGs.ConnectError(`protocol error: promised ${hint} bytes, received ${offset + chunk.byteLength}`, $2S2uU.Code.InvalidArgument);\n                    buffer.set(chunk, offset);\n                    offset += chunk.byteLength;\n                } finally{\n                    _g = true;\n                }\n            }\n        } catch (e_13_1) {\n            e_13 = {\n                error: e_13_1\n            };\n        } finally{\n            try {\n                if (!_g && !_a && (_b = iterable_13.return)) await _b.call(iterable_13);\n            } finally{\n                if (e_13) throw e_13.error;\n            }\n        }\n        if (offset < hint) throw new $dbKGs.ConnectError(`protocol error: promised ${hint} bytes, received ${offset}`, $2S2uU.Code.InvalidArgument);\n        return buffer;\n    }\n    const chunks = [];\n    let count = 0;\n    try {\n        for(var _h = true, iterable_14 = $390ee4f96ea853ca$var$__asyncValues(iterable), iterable_14_1; iterable_14_1 = await iterable_14.next(), _d = iterable_14_1.done, !_d;){\n            _f = iterable_14_1.value;\n            _h = false;\n            try {\n                const chunk = _f;\n                count += chunk.byteLength;\n                (0, $cKeEL.assertReadMaxBytes)(readMaxBytes, count);\n                chunks.push(chunk);\n            } finally{\n                _h = true;\n            }\n        }\n    } catch (e_14_1) {\n        e_14 = {\n            error: e_14_1\n        };\n    } finally{\n        try {\n            if (!_h && !_d && (_e = iterable_14.return)) await _e.call(iterable_14);\n        } finally{\n            if (e_14) throw e_14.error;\n        }\n    }\n    const all = new Uint8Array(count);\n    let offset = 0;\n    for(let chunk = chunks.shift(); chunk; chunk = chunks.shift()){\n        all.set(chunk, offset);\n        offset += chunk.byteLength;\n    }\n    return all;\n}\nmodule.exports.readAllBytes = $390ee4f96ea853ca$var$readAllBytes;\n// parse the lengthHint argument of readAllBytes()\nfunction $390ee4f96ea853ca$var$parseLengthHint(lengthHint) {\n    if (lengthHint === undefined || lengthHint === null) return [\n        false,\n        0\n    ];\n    const n = typeof lengthHint == \"string\" ? parseInt(lengthHint, 10) : lengthHint;\n    if (!Number.isSafeInteger(n) || n < 0) return [\n        false,\n        n\n    ];\n    return [\n        true,\n        n\n    ];\n}\n/**\n * Wait for the first element of an iterable without modifying the iterable.\n * This consumes the first element, but pushes it back on the stack.\n *\n * @private Internal code, does not follow semantic versioning.\n */ async function $390ee4f96ea853ca$var$untilFirst(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    let first = await it.next();\n    return {\n        [Symbol.asyncIterator] () {\n            const w = {\n                async next () {\n                    if (first !== null) {\n                        const n = first;\n                        first = null;\n                        return n;\n                    }\n                    return await it.next();\n                }\n            };\n            if (it.throw !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n            w.throw = (e)=>it.throw(e);\n            if (it.return !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n            w.return = (value)=>it.return(value);\n            return w;\n        }\n    };\n}\nmodule.exports.untilFirst = $390ee4f96ea853ca$var$untilFirst;\n/**\n * Wrap the given iterable and return an iterable with an abort() method.\n *\n * This function exists purely for convenience. Where one would typically have\n * to access the iterator directly, advance through all elements, and call\n * AsyncIterator.throw() to notify the upstream iterable, this function allows\n * to use convenient for-await loops and still notify the upstream iterable:\n *\n * ```ts\n * const abortable = makeIterableAbortable(iterable);\n * for await (const ele of abortable) {\n *   await abortable.abort(\"ERR\");\n * }\n * ```\n * There are a couple of limitations of this function:\n * - the given async iterable must implement throw\n * - the async iterable cannot be re-use\n * - if source catches errors and yields values for them, they are ignored, and\n *   the source may still dangle\n *\n * There are four possible ways an async function* can handle yield errors:\n * 1. don't catch errors at all - Abortable.abort() will resolve \"rethrown\"\n * 2. catch errors and rethrow - Abortable.abort() will resolve \"rethrown\"\n * 3. catch errors and return - Abortable.abort() will resolve \"completed\"\n * 4. catch errors and yield a value - Abortable.abort() will resolve \"caught\"\n *\n * Note that catching errors and yielding a value is problematic, and it should\n * be documented that this may leave the source in a dangling state.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $390ee4f96ea853ca$var$makeIterableAbortable(iterable) {\n    const innerCandidate = iterable[Symbol.asyncIterator]();\n    if (innerCandidate.throw === undefined) throw new Error(\"AsyncIterable does not implement throw\");\n    const inner = innerCandidate;\n    let aborted;\n    let resultPromise;\n    let it = {\n        next () {\n            resultPromise = inner.next().finally(()=>{\n                resultPromise = undefined;\n            });\n            return resultPromise;\n        },\n        throw (e) {\n            return inner.throw(e);\n        }\n    };\n    if (innerCandidate.return === undefined) it = Object.assign(Object.assign({}, it), {\n        return (value) {\n            return inner.return(value);\n        }\n    });\n    let used = false;\n    return {\n        abort (reason) {\n            if (aborted) return aborted.state;\n            const f = ()=>{\n                return inner.throw(reason).then((r)=>r.done === true ? \"completed\" : \"caught\", ()=>\"rethrown\");\n            };\n            if (resultPromise) {\n                aborted = {\n                    reason: reason,\n                    state: resultPromise.then(f, f)\n                };\n                return aborted.state;\n            }\n            aborted = {\n                reason: reason,\n                state: f()\n            };\n            return aborted.state;\n        },\n        [Symbol.asyncIterator] () {\n            if (used) throw new Error(\"AsyncIterable cannot be re-used\");\n            used = true;\n            return it;\n        }\n    };\n}\nmodule.exports.makeIterableAbortable = $390ee4f96ea853ca$var$makeIterableAbortable;\n// Create an instance of a WritableIterable of type T\nfunction $390ee4f96ea853ca$var$createWritableIterable() {\n    let queue = [];\n    // Represents the resolve function of the promise returned by the async iterator if no values exist in the queue at\n    // the time of request.  It is resolved when a value is successfully received into the queue.\n    let queueResolve;\n    let error = undefined;\n    const process = async (payload)=>{\n        // // If the writer's internal error was set, then reject any attempts at processing a payload.\n        if (error) return Promise.reject(String(error));\n        // If there is an iterator resolver then a consumer of the async iterator is waiting on a value.  So resolve that\n        // promise with the new value being sent and return a promise that is immediately resolved\n        if (queueResolve) {\n            queueResolve(payload);\n            queueResolve = undefined;\n            return Promise.resolve();\n        }\n        const elem = {\n            payload: payload\n        };\n        const prom = new Promise((resolve, reject)=>{\n            elem.resolve = resolve;\n            elem.reject = reject;\n        });\n        // Otherwise no one is waiting on a value yet so add it to the queue and return a promise that will be resolved\n        // when someone reads this value\n        queue.push(elem);\n        return prom;\n    };\n    let closed = false;\n    return {\n        isClosed () {\n            return closed;\n        },\n        async write (payload) {\n            if (closed) throw new $dbKGs.ConnectError(\"cannot write, already closed\");\n            return process({\n                value: payload,\n                done: false\n            });\n        },\n        async close () {\n            if (closed) throw new $dbKGs.ConnectError(\"cannot close, already closed\");\n            closed = true;\n            return process({\n                value: undefined,\n                done: true\n            });\n        },\n        [Symbol.asyncIterator] () {\n            return {\n                next: async ()=>{\n                    // If the writer's internal error was set, then reject any attempts at processing a payload.\n                    if (error) return Promise.reject(String(error));\n                    const elem = queue.shift();\n                    if (!elem) // We don't have any payloads ready to be sent (i.e. the consumer of the iterator is consuming faster than\n                    // senders are sending).  So return a Promise ensuring we'll resolve it when we get something.\n                    return new Promise((resolve)=>{\n                        queueResolve = resolve;\n                    });\n                    // Resolve the send promise on a successful send/close.\n                    if (elem.resolve) elem.resolve();\n                    return elem.payload;\n                },\n                throw: async (e)=>{\n                    error = e;\n                    // The reader of this iterator has failed with the given error.  So anything left in the queue should be\n                    // drained and rejected with the given error\n                    for (const item of queue)if (item.reject) item.reject(e);\n                    queue = [];\n                    return new Promise((resolve)=>{\n                        resolve({\n                            value: undefined,\n                            done: true\n                        });\n                    });\n                }\n            };\n        }\n    };\n}\nmodule.exports.createWritableIterable = $390ee4f96ea853ca$var$createWritableIterable;\n/**\n * Create an asynchronous iterable from an array.\n *\n * @private Internal code, does not follow semantic versioning.\n */ // eslint-disable-next-line @typescript-eslint/require-await\nfunction $390ee4f96ea853ca$var$createAsyncIterable(items) {\n    return $390ee4f96ea853ca$var$__asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n        yield $390ee4f96ea853ca$var$__await((yield* $390ee4f96ea853ca$var$__asyncDelegator($390ee4f96ea853ca$var$__asyncValues(items))));\n    });\n}\nmodule.exports.createAsyncIterable = $390ee4f96ea853ca$var$createAsyncIterable;\n\n});\nparcelRequire.register(\"bO3lh\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.encodeEnvelopes = module.exports.encodeEnvelope = module.exports.envelopeDecompress = module.exports.envelopeCompress = module.exports.createEnvelopeReadableStream = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $cFI6K = parcelRequire(\"cFI6K\");\n/**\n * Create a WHATWG ReadableStream of enveloped messages from a ReadableStream\n * of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $8986f4ef8997851c$var$createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start () {\n            reader = stream.getReader();\n        },\n        async pull (controller) {\n            let header = undefined;\n            for(;;){\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for(let i = 1; i < 5; i++)length = (length << 8) + buffer[i];\n                    header = {\n                        flags: buffer[0],\n                        length: length\n                    };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) break;\n                const result = await reader.read();\n                if (result.done) break;\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new $dbKGs.ConnectError(\"premature end of stream\", $2S2uU.Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data: data\n            });\n        }\n    });\n}\nmodule.exports.createEnvelopeReadableStream = $8986f4ef8997851c$var$createEnvelopeReadableStream;\n/**\n * Compress an EnvelopedMessage.\n *\n * Raises Internal if an enveloped message is already compressed.\n *\n * @private Internal code, does not follow semantic versioning.\n */ async function $8986f4ef8997851c$var$envelopeCompress(envelope, compression, compressMinBytes) {\n    let { flags: flags, data: data } = envelope;\n    if ((flags & $cFI6K.compressedFlag) === $cFI6K.compressedFlag) throw new $dbKGs.ConnectError(\"invalid envelope, already compressed\", $2S2uU.Code.Internal);\n    if (compression && data.byteLength >= compressMinBytes) {\n        data = await compression.compress(data);\n        flags = flags | $cFI6K.compressedFlag;\n    }\n    return {\n        data: data,\n        flags: flags\n    };\n}\nmodule.exports.envelopeCompress = $8986f4ef8997851c$var$envelopeCompress;\n/**\n * Decompress an EnvelopedMessage.\n *\n * Raises InvalidArgument if an envelope is compressed, but compression is null.\n *\n * Relies on the provided Compression to raise ResourceExhausted if the\n * *decompressed* message size is larger than readMaxBytes. If the envelope is\n * not compressed, readMaxBytes is not honored.\n *\n * @private Internal code, does not follow semantic versioning.\n */ async function $8986f4ef8997851c$var$envelopeDecompress(envelope, compression, readMaxBytes) {\n    let { flags: flags, data: data } = envelope;\n    if ((flags & $cFI6K.compressedFlag) === $cFI6K.compressedFlag) {\n        if (!compression) throw new $dbKGs.ConnectError(\"received compressed envelope, but do not know how to decompress\", $2S2uU.Code.InvalidArgument);\n        data = await compression.decompress(data, readMaxBytes);\n        flags = flags ^ $cFI6K.compressedFlag;\n    }\n    return {\n        data: data,\n        flags: flags\n    };\n}\nmodule.exports.envelopeDecompress = $8986f4ef8997851c$var$envelopeDecompress;\n/**\n * Encode a single enveloped message.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $8986f4ef8997851c$var$encodeEnvelope(flags, data) {\n    const bytes = new Uint8Array(data.length + 5);\n    bytes.set(data, 5);\n    const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    v.setUint8(0, flags); // first byte is flags\n    v.setUint32(1, data.length); // 4 bytes message length\n    return bytes;\n}\nmodule.exports.encodeEnvelope = $8986f4ef8997851c$var$encodeEnvelope;\n/**\n * Encode a set of enveloped messages.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $8986f4ef8997851c$var$encodeEnvelopes(...envelopes) {\n    const len = envelopes.reduce((previousValue, currentValue)=>previousValue + currentValue.data.length + 5, 0);\n    const bytes = new Uint8Array(len);\n    const v = new DataView(bytes.buffer);\n    let offset = 0;\n    for (const e of envelopes){\n        v.setUint8(offset, e.flags); // first byte is flags\n        v.setUint32(offset + 1, e.data.length); // 4 bytes message length\n        bytes.set(e.data, offset + 5);\n        offset += e.data.length + 5;\n    }\n    return bytes;\n}\nmodule.exports.encodeEnvelopes = $8986f4ef8997851c$var$encodeEnvelopes;\n\n});\nparcelRequire.register(\"cFI6K\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.compressionNegotiate = module.exports.compressedFlag = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * compressedFlag indicates that the data in a EnvelopedMessage is\n * compressed. It has the same meaning in the gRPC-Web, gRPC-HTTP2,\n * and Connect protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.compressedFlag = 1;\n/**\n * Validates the request encoding and determines the accepted response encoding.\n *\n * Returns the request and response compression to use. If the client requested\n * an encoding that is not available, the returned object contains an error that\n * must be used for the response.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $939b87444b5f45a3$var$compressionNegotiate(available, requested, accepted, headerNameAcceptEncoding // e.g. the name of the Grpc-Accept-Encoding header\n) {\n    let request = null;\n    let response = null;\n    let error = undefined;\n    if (requested !== null && requested !== \"identity\") {\n        const found = available.find((c)=>c.name === requested);\n        if (found) request = found;\n        else {\n            // To comply with https://github.com/grpc/grpc/blob/master/doc/compression.md\n            // and the Connect protocol, we return code \"unimplemented\" and specify\n            // acceptable compression(s).\n            const acceptable = available.map((c)=>c.name).join(\",\");\n            error = new $dbKGs.ConnectError(`unknown compression \"${requested}\": supported encodings are ${acceptable}`, $2S2uU.Code.Unimplemented, {\n                [headerNameAcceptEncoding]: acceptable\n            });\n        }\n    }\n    if (accepted === null || accepted === \"\") // Support asymmetric compression. This logic follows\n    // https://github.com/grpc/grpc/blob/master/doc/compression.md and common\n    // sense.\n    response = request;\n    else {\n        const acceptNames = accepted.split(\",\").map((n)=>n.trim());\n        for (const name of acceptNames){\n            const found = available.find((c)=>c.name === name);\n            if (found) {\n                response = found;\n                break;\n            }\n        }\n    }\n    return {\n        request: request,\n        response: response,\n        error: error\n    };\n}\nmodule.exports.compressionNegotiate = $939b87444b5f45a3$var$compressionNegotiate;\n\n});\n\n\nparcelRequire.register(\"cKeEL\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.assertReadMaxBytes = module.exports.assertWriteMaxBytes = module.exports.validateReadWriteMaxBytes = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * At most, allow ~4GiB to be received or sent per message.\n * zlib used by Node.js caps maxOutputLength at this value. It also happens to\n * be the maximum theoretical message size supported by protobuf-es.\n */ const $94752661065b202e$var$maxReadMaxBytes = 0xffffffff;\nconst $94752661065b202e$var$maxWriteMaxBytes = $94752661065b202e$var$maxReadMaxBytes;\n/**\n * The default value for the compressMinBytes option. The CPU cost of compressing\n * very small messages usually isn't worth the small reduction in network I/O, so\n * the default value is 1 kibibyte.\n */ const $94752661065b202e$var$defaultCompressMinBytes = 1024;\n/**\n * Asserts that the options writeMaxBytes, readMaxBytes, and compressMinBytes\n * are within sane limits, and returns default values where no value is\n * provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $94752661065b202e$var$validateReadWriteMaxBytes(readMaxBytes, writeMaxBytes, compressMinBytes) {\n    writeMaxBytes !== null && writeMaxBytes !== void 0 ? writeMaxBytes : writeMaxBytes = $94752661065b202e$var$maxWriteMaxBytes;\n    readMaxBytes !== null && readMaxBytes !== void 0 ? readMaxBytes : readMaxBytes = $94752661065b202e$var$maxReadMaxBytes;\n    compressMinBytes !== null && compressMinBytes !== void 0 ? compressMinBytes : compressMinBytes = $94752661065b202e$var$defaultCompressMinBytes;\n    if (writeMaxBytes < 1 || writeMaxBytes > $94752661065b202e$var$maxWriteMaxBytes) throw new $dbKGs.ConnectError(`writeMaxBytes ${writeMaxBytes} must be >= 1 and <= ${$94752661065b202e$var$maxWriteMaxBytes}`, $2S2uU.Code.Internal);\n    if (readMaxBytes < 1 || readMaxBytes > $94752661065b202e$var$maxReadMaxBytes) throw new $dbKGs.ConnectError(`readMaxBytes ${readMaxBytes} must be >= 1 and <= ${$94752661065b202e$var$maxReadMaxBytes}`, $2S2uU.Code.Internal);\n    return {\n        readMaxBytes: readMaxBytes,\n        writeMaxBytes: writeMaxBytes,\n        compressMinBytes: compressMinBytes\n    };\n}\nmodule.exports.validateReadWriteMaxBytes = $94752661065b202e$var$validateReadWriteMaxBytes;\n/**\n * Raise an error ResourceExhausted if more than writeMaxByte are written.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $94752661065b202e$var$assertWriteMaxBytes(writeMaxBytes, bytesWritten) {\n    if (bytesWritten > writeMaxBytes) throw new $dbKGs.ConnectError(`message size ${bytesWritten} is larger than configured writeMaxBytes ${writeMaxBytes}`, $2S2uU.Code.ResourceExhausted);\n}\nmodule.exports.assertWriteMaxBytes = $94752661065b202e$var$assertWriteMaxBytes;\n/**\n * Raise an error ResourceExhausted if more than readMaxBytes are read.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $94752661065b202e$var$assertReadMaxBytes(readMaxBytes, bytesRead, totalSizeKnown = false) {\n    if (bytesRead > readMaxBytes) {\n        let message = `message size is larger than configured readMaxBytes ${readMaxBytes}`;\n        if (totalSizeKnown) message = `message size ${bytesRead} is larger than configured readMaxBytes ${readMaxBytes}`;\n        throw new $dbKGs.ConnectError(message, $2S2uU.Code.ResourceExhausted);\n    }\n}\nmodule.exports.assertReadMaxBytes = $94752661065b202e$var$assertReadMaxBytes;\n\n});\n\n\nparcelRequire.register(\"5iLQY\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.getAbortSignalReason = module.exports.createDeadlineSignal = module.exports.createLinkedAbortController = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Create an AbortController that is automatically aborted if one of the given\n * signals is aborted.\n *\n * For convenience, the linked AbortSignals can be undefined.\n *\n * If the controller or any of the signals is aborted, all event listeners are\n * removed.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $3dc3c0e800a8a3f2$var$createLinkedAbortController(...signals) {\n    const controller = new AbortController();\n    const sa = signals.filter((s)=>s !== undefined).concat(controller.signal);\n    for (const signal of sa){\n        if (signal.aborted) {\n            onAbort.apply(signal);\n            break;\n        }\n        signal.addEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n        if (!controller.signal.aborted) controller.abort($3dc3c0e800a8a3f2$var$getAbortSignalReason(this));\n        for (const signal of sa)signal.removeEventListener(\"abort\", onAbort);\n    }\n    return controller;\n}\nmodule.exports.createLinkedAbortController = $3dc3c0e800a8a3f2$var$createLinkedAbortController;\n/**\n * Create a deadline signal. The returned object contains an AbortSignal, but\n * also a cleanup function to stop the timer, which must be called once the\n * calling code is no longer interested in the signal.\n *\n * Ideally, we would simply use AbortSignal.timeout(), but it is not widely\n * available yet.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $3dc3c0e800a8a3f2$var$createDeadlineSignal(timeoutMs) {\n    const controller = new AbortController();\n    const listener = ()=>{\n        controller.abort(new $dbKGs.ConnectError(\"the operation timed out\", $2S2uU.Code.DeadlineExceeded));\n    };\n    let timeoutId;\n    if (timeoutMs !== undefined) {\n        if (timeoutMs <= 0) listener();\n        else timeoutId = setTimeout(listener, timeoutMs);\n    }\n    return {\n        signal: controller.signal,\n        cleanup: ()=>clearTimeout(timeoutId)\n    };\n}\nmodule.exports.createDeadlineSignal = $3dc3c0e800a8a3f2$var$createDeadlineSignal;\n/**\n * Returns the reason why an AbortSignal was aborted. Returns undefined if the\n * signal has not been aborted.\n *\n * The property AbortSignal.reason is not widely available. This function\n * returns an AbortError if the signal is aborted, but reason is undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $3dc3c0e800a8a3f2$var$getAbortSignalReason(signal) {\n    if (!signal.aborted) return undefined;\n    if (signal.reason !== undefined) return signal.reason;\n    // AbortSignal.reason is available in Node.js v16, v18, and later,\n    // and in all browsers since early 2022.\n    const e = new Error(\"This operation was aborted\");\n    e.name = \"AbortError\";\n    return e;\n}\nmodule.exports.getAbortSignalReason = $3dc3c0e800a8a3f2$var$getAbortSignalReason;\n\n});\n\n\nparcelRequire.register(\"fn7mU\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createFetchHandler = module.exports.createFetchClient = void 0;\n/**\n * Create a universal client function, a minimal abstraction of an HTTP client,\n * using the given fetch() implementation.\n */ function $b30eb835cae65953$var$createFetchClient(fetchFn) {\n    return async function fetchClient(request) {\n        const res = await fetchFn($b30eb835cae65953$var$universalClientRequestToFetch(request));\n        return $b30eb835cae65953$var$universalClientResponseFromFetch(res);\n    };\n}\nmodule.exports.createFetchClient = $b30eb835cae65953$var$createFetchClient;\n/**\n * Convert a universal handler function to a fetch handler.\n */ function $b30eb835cae65953$var$createFetchHandler(uHandler, options) {\n    async function handleFetch(req) {\n        const uReq = $b30eb835cae65953$var$universalServerRequestFromFetch(req, options !== null && options !== void 0 ? options : {});\n        const uRes = await uHandler(uReq);\n        return $b30eb835cae65953$var$universalServerResponseToFetch(uRes);\n    }\n    return Object.assign(handleFetch, uHandler);\n}\nmodule.exports.createFetchHandler = $b30eb835cae65953$var$createFetchHandler;\nfunction $b30eb835cae65953$var$universalClientRequestToFetch(req) {\n    const body = req.body === undefined ? null : $b30eb835cae65953$var$iterableToReadableStream(req.body);\n    return new Request(req.url, {\n        method: req.method,\n        headers: req.header,\n        signal: req.signal,\n        body: body\n    });\n}\nfunction $b30eb835cae65953$var$universalClientResponseFromFetch(res) {\n    return {\n        status: res.status,\n        header: res.headers,\n        body: $b30eb835cae65953$var$iterableFromReadableStream(res.body),\n        trailer: new Headers()\n    };\n}\nfunction $b30eb835cae65953$var$universalServerRequestFromFetch(req, options) {\n    var _a;\n    return {\n        httpVersion: (_a = options.httpVersion) !== null && _a !== void 0 ? _a : \"\",\n        method: req.method,\n        url: req.url,\n        header: req.headers,\n        body: $b30eb835cae65953$var$iterableFromReadableStream(req.body),\n        signal: req.signal\n    };\n}\nfunction $b30eb835cae65953$var$universalServerResponseToFetch(res) {\n    let body = null;\n    if (res.body !== undefined) body = $b30eb835cae65953$var$iterableToReadableStream(res.body);\n    return new Response(body, {\n        status: res.status,\n        headers: res.header\n    });\n}\nfunction $b30eb835cae65953$var$iterableToReadableStream(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    return new ReadableStream({\n        async pull (controller) {\n            const r = await it.next();\n            if (r.done === true) {\n                controller.close();\n                return;\n            }\n            controller.enqueue(r.value);\n        },\n        async cancel (reason) {\n            if (it.throw) try {\n                await it.throw(reason);\n            } catch (_a) {\n            // iterator.throw on a generator function rethrows unless the\n            // body catches and swallows.\n            }\n        }\n    });\n}\nfunction $b30eb835cae65953$var$iterableFromReadableStream(body) {\n    return {\n        [Symbol.asyncIterator] () {\n            const reader = body === null || body === void 0 ? void 0 : body.getReader();\n            return {\n                async next () {\n                    if (reader !== undefined) {\n                        const r = await reader.read();\n                        if (r.done) return {\n                            done: true,\n                            value: undefined\n                        };\n                        return r;\n                    }\n                    return {\n                        done: true,\n                        value: undefined\n                    };\n                },\n                async throw (e) {\n                    if (reader !== undefined) await reader.cancel(e);\n                    return {\n                        done: true,\n                        value: undefined\n                    };\n                }\n            };\n        }\n    };\n}\n\n});\n\nparcelRequire.register(\"85AEY\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.runStreamingCall = module.exports.runUnaryCall = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $5iLQY = parcelRequire(\"5iLQY\");\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */ function $5e3b3a453c819ba6$var$runUnaryCall(opt) {\n    const next = $5e3b3a453c819ba6$var$applyInterceptors(opt.next, opt.interceptors);\n    const [signal, abort, done] = $5e3b3a453c819ba6$var$setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), {\n        signal: signal\n    });\n    return next(req).then((res)=>{\n        done();\n        return res;\n    }, abort);\n}\nmodule.exports.runUnaryCall = $5e3b3a453c819ba6$var$runUnaryCall;\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */ function $5e3b3a453c819ba6$var$runStreamingCall(opt) {\n    const next = $5e3b3a453c819ba6$var$applyInterceptors(opt.next, opt.interceptors);\n    const [signal, abort, done] = $5e3b3a453c819ba6$var$setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), {\n        signal: signal\n    });\n    return next(req).then((res)=>{\n        return Object.assign(Object.assign({}, res), {\n            message: {\n                [Symbol.asyncIterator] () {\n                    const it = res.message[Symbol.asyncIterator]();\n                    const w = {\n                        next () {\n                            return it.next().then((r)=>{\n                                if (r.done == true) done();\n                                return r;\n                            }, abort);\n                        }\n                    };\n                    if (it.throw !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                    w.throw = (e)=>it.throw(e);\n                    if (it.return !== undefined) // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                    w.return = (value)=>it.return(value);\n                    return w;\n                }\n            }\n        });\n    }, abort);\n}\nmodule.exports.runStreamingCall = $5e3b3a453c819ba6$var$runStreamingCall;\n/**\n * Create an AbortSignal for Transport implementations. The signal is available\n * in UnaryRequest and StreamingRequest, and is triggered when the call is\n * aborted (via a timeout or explicit cancellation), errored (e.g. when reading\n * an error from the server from the wire), or finished successfully.\n *\n * Transport implementations can pass the signal to HTTP clients to ensure that\n * there are no unused connections leak.\n *\n * Returns a tuple:\n * [0]: The signal, which is also aborted if the optional deadline is reached.\n * [1]: Function to call if the Transport encountered an error.\n * [2]: Function to call if the Transport finished without an error.\n */ function $5e3b3a453c819ba6$var$setupSignal(opt) {\n    const { signal: signal, cleanup: cleanup } = (0, $5iLQY.createDeadlineSignal)(opt.timeoutMs);\n    const controller = (0, $5iLQY.createLinkedAbortController)(opt.signal, signal);\n    return [\n        controller.signal,\n        function abort(reason) {\n            // We peek at the deadline signal because fetch() will throw an error on\n            // abort that discards the signal reason.\n            const e = $dbKGs.ConnectError.from(signal.aborted ? (0, $5iLQY.getAbortSignalReason)(signal) : reason);\n            controller.abort(e);\n            cleanup();\n            return Promise.reject(e);\n        },\n        function done() {\n            cleanup();\n            controller.abort();\n        }\n    ];\n}\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */ function $5e3b3a453c819ba6$var$applyInterceptors(next, interceptors) {\n    var _a;\n    return (_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i)=>i(n), next // eslint-disable-line @typescript-eslint/no-explicit-any\n    )) !== null && _a !== void 0 ? _a : next;\n}\n\n});\n\nparcelRequire.register(\"3mgpQ\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createJsonSerialization = module.exports.createBinarySerialization = module.exports.limitSerialization = module.exports.createClientMethodSerializers = module.exports.createMethodSerializationLookup = module.exports.getJsonOptions = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $cKeEL = parcelRequire(\"cKeEL\");\n/**\n * Sets default JSON serialization options for connect-es.\n *\n * With standard protobuf JSON serialization, unknown JSON fields are\n * rejected by default. In connect-es, unknown JSON fields are ignored\n * by default.\n */ function $27202909dabb305c$var$getJsonOptions(options) {\n    var _a;\n    const o = Object.assign({}, options);\n    (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : o.ignoreUnknownFields = true;\n    return o;\n}\nmodule.exports.getJsonOptions = $27202909dabb305c$var$getJsonOptions;\n/**\n * Create an object that provides convenient access to request and response\n * message serialization for a given method.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $27202909dabb305c$var$createMethodSerializationLookup(method, binaryOptions, jsonOptions, limitOptions) {\n    const inputBinary = $27202909dabb305c$var$limitSerialization($27202909dabb305c$var$createBinarySerialization(method.I, binaryOptions), limitOptions);\n    const inputJson = $27202909dabb305c$var$limitSerialization($27202909dabb305c$var$createJsonSerialization(method.I, jsonOptions), limitOptions);\n    const outputBinary = $27202909dabb305c$var$limitSerialization($27202909dabb305c$var$createBinarySerialization(method.O, binaryOptions), limitOptions);\n    const outputJson = $27202909dabb305c$var$limitSerialization($27202909dabb305c$var$createJsonSerialization(method.O, jsonOptions), limitOptions);\n    return {\n        getI (useBinaryFormat) {\n            return useBinaryFormat ? inputBinary : inputJson;\n        },\n        getO (useBinaryFormat) {\n            return useBinaryFormat ? outputBinary : outputJson;\n        }\n    };\n}\nmodule.exports.createMethodSerializationLookup = $27202909dabb305c$var$createMethodSerializationLookup;\n/**\n * Returns functions to normalize and serialize the input message\n * of an RPC, and to parse the output message of an RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $27202909dabb305c$var$createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n    function normalize(input) {\n        return input instanceof method.I ? input : new method.I(input);\n    }\n    const input = useBinaryFormat ? $27202909dabb305c$var$createBinarySerialization(method.I, binaryOptions) : $27202909dabb305c$var$createJsonSerialization(method.I, jsonOptions);\n    const output = useBinaryFormat ? $27202909dabb305c$var$createBinarySerialization(method.O, binaryOptions) : $27202909dabb305c$var$createJsonSerialization(method.O, jsonOptions);\n    return {\n        normalize: normalize,\n        parse: output.parse,\n        serialize: input.serialize\n    };\n}\nmodule.exports.createClientMethodSerializers = $27202909dabb305c$var$createClientMethodSerializers;\n/**\n * Apply I/O limits to a Serialization object, returning a new object.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $27202909dabb305c$var$limitSerialization(serialization, limitOptions) {\n    return {\n        serialize (data) {\n            const bytes = serialization.serialize(data);\n            (0, $cKeEL.assertWriteMaxBytes)(limitOptions.writeMaxBytes, bytes.byteLength);\n            return bytes;\n        },\n        parse (data) {\n            (0, $cKeEL.assertReadMaxBytes)(limitOptions.readMaxBytes, data.byteLength, true);\n            return serialization.parse(data);\n        }\n    };\n}\nmodule.exports.limitSerialization = $27202909dabb305c$var$limitSerialization;\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf binary format.\n */ function $27202909dabb305c$var$createBinarySerialization(messageType, options) {\n    return {\n        parse (data) {\n            try {\n                return messageType.fromBinary(data, options);\n            } catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new $dbKGs.ConnectError(`parse binary: ${m}`, $2S2uU.Code.InvalidArgument);\n            }\n        },\n        serialize (data) {\n            try {\n                return data.toBinary(options);\n            } catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new $dbKGs.ConnectError(`serialize binary: ${m}`, $2S2uU.Code.Internal);\n            }\n        }\n    };\n}\nmodule.exports.createBinarySerialization = $27202909dabb305c$var$createBinarySerialization;\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf canonical JSON encoding.\n *\n * By default, unknown fields are ignored.\n */ function $27202909dabb305c$var$createJsonSerialization(messageType, options) {\n    var _a, _b;\n    const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n    const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n    const o = $27202909dabb305c$var$getJsonOptions(options);\n    return {\n        parse (data) {\n            try {\n                const json = textDecoder.decode(data);\n                return messageType.fromJsonString(json, o);\n            } catch (e) {\n                throw $dbKGs.ConnectError.from(e, $2S2uU.Code.InvalidArgument);\n            }\n        },\n        serialize (data) {\n            try {\n                const json = data.toJsonString(o);\n                return textEncoder.encode(json);\n            } catch (e) {\n                throw $dbKGs.ConnectError.from(e, $2S2uU.Code.Internal);\n            }\n        }\n    };\n}\nmodule.exports.createJsonSerialization = $27202909dabb305c$var$createJsonSerialization;\n\n});\n\nparcelRequire.register(\"dHfIs\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.contentTypeMatcher = void 0;\nconst $9f8b7b653b782eed$var$contentTypeMatcherCacheSize = 1024;\n/**\n * Create a function that returns true if the given mime type is supported.\n * A mime type is supported when one of the regular expressions match.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $9f8b7b653b782eed$var$contentTypeMatcher(...supported) {\n    const cache = new Map();\n    const source = supported.reduce((previousValue, currentValue)=>previousValue.concat(\"supported\" in currentValue ? currentValue.supported : currentValue), []);\n    function match(contentType) {\n        if (contentType === null || contentType.length == 0) return false;\n        const cached = cache.get(contentType);\n        if (cached !== undefined) return cached;\n        const ok = source.some((re)=>re.test(contentType));\n        if (cache.size < $9f8b7b653b782eed$var$contentTypeMatcherCacheSize) cache.set(contentType, ok);\n        return ok;\n    }\n    match.supported = source;\n    return match;\n}\nmodule.exports.contentTypeMatcher = $9f8b7b653b782eed$var$contentTypeMatcher;\n\n});\n\nparcelRequire.register(\"kPxXG\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $f2a2ea2104ee01c4$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $f2a2ea2104ee01c4$var$__await ? (this.v = v, this) : new $f2a2ea2104ee01c4$var$__await(v);\n};\nvar $f2a2ea2104ee01c4$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $f2a2ea2104ee01c4$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nvar $f2a2ea2104ee01c4$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.transformInvokeImplementation = module.exports.invokeUnaryImplementation = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Invoke a user-provided implementation of a unary RPC. Returns a normalized\n * output message.\n *\n * @private Internal code, does not follow semantic versioning.\n */ async function $f2a2ea2104ee01c4$var$invokeUnaryImplementation(spec, context, input) {\n    const output = await spec.impl(input, context);\n    return $f2a2ea2104ee01c4$var$normalizeOutput(spec, output);\n}\nmodule.exports.invokeUnaryImplementation = $f2a2ea2104ee01c4$var$invokeUnaryImplementation;\n/**\n * Return an AsyncIterableTransform that invokes a user-provided implementation,\n * giving it input from an asynchronous iterable, and returning its output as an\n * asynchronous iterable.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $f2a2ea2104ee01c4$var$transformInvokeImplementation(spec, context) {\n    switch(spec.kind){\n        case $hNn7i.MethodKind.Unary:\n            return function unary(input) {\n                return $f2a2ea2104ee01c4$var$__asyncGenerator(this, arguments, function* unary_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield $f2a2ea2104ee01c4$var$__await(inputIt.next());\n                    if (input1.done === true) throw new $dbKGs.ConnectError(\"protocol error: missing input message for unary method\", $2S2uU.Code.InvalidArgument);\n                    yield yield $f2a2ea2104ee01c4$var$__await($f2a2ea2104ee01c4$var$normalizeOutput(spec, (yield $f2a2ea2104ee01c4$var$__await(spec.impl(input1.value, context)))));\n                    const input2 = yield $f2a2ea2104ee01c4$var$__await(inputIt.next());\n                    if (input2.done !== true) throw new $dbKGs.ConnectError(\"protocol error: received extra input message for unary method\", $2S2uU.Code.InvalidArgument);\n                });\n            };\n        case $hNn7i.MethodKind.ServerStreaming:\n            return function serverStreaming(input) {\n                return $f2a2ea2104ee01c4$var$__asyncGenerator(this, arguments, function* serverStreaming_1() {\n                    var _a, e_1, _b, _c;\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield $f2a2ea2104ee01c4$var$__await(inputIt.next());\n                    if (input1.done === true) throw new $dbKGs.ConnectError(\"protocol error: missing input message for server-streaming method\", $2S2uU.Code.InvalidArgument);\n                    try {\n                        for(var _d = true, _e = $f2a2ea2104ee01c4$var$__asyncValues(spec.impl(input1.value, context)), _f; _f = yield $f2a2ea2104ee01c4$var$__await(_e.next()), _a = _f.done, !_a;){\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const o = _c;\n                                yield yield $f2a2ea2104ee01c4$var$__await($f2a2ea2104ee01c4$var$normalizeOutput(spec, o));\n                            } finally{\n                                _d = true;\n                            }\n                        }\n                    } catch (e_1_1) {\n                        e_1 = {\n                            error: e_1_1\n                        };\n                    } finally{\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield $f2a2ea2104ee01c4$var$__await(_b.call(_e));\n                        } finally{\n                            if (e_1) throw e_1.error;\n                        }\n                    }\n                    const input2 = yield $f2a2ea2104ee01c4$var$__await(inputIt.next());\n                    if (input2.done !== true) throw new $dbKGs.ConnectError(\"protocol error: received extra input message for server-streaming method\", $2S2uU.Code.InvalidArgument);\n                });\n            };\n        case $hNn7i.MethodKind.ClientStreaming:\n            return function clientStreaming(input) {\n                return $f2a2ea2104ee01c4$var$__asyncGenerator(this, arguments, function* clientStreaming_1() {\n                    yield yield $f2a2ea2104ee01c4$var$__await($f2a2ea2104ee01c4$var$normalizeOutput(spec, (yield $f2a2ea2104ee01c4$var$__await(spec.impl(input, context)))));\n                });\n            };\n        case $hNn7i.MethodKind.BiDiStreaming:\n            return function biDiStreaming(input) {\n                return $f2a2ea2104ee01c4$var$__asyncGenerator(this, arguments, function* biDiStreaming_1() {\n                    var _a, e_2, _b, _c;\n                    try {\n                        for(var _d = true, _e = $f2a2ea2104ee01c4$var$__asyncValues(spec.impl(input, context)), _f; _f = yield $f2a2ea2104ee01c4$var$__await(_e.next()), _a = _f.done, !_a;){\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const o = _c;\n                                yield yield $f2a2ea2104ee01c4$var$__await($f2a2ea2104ee01c4$var$normalizeOutput(spec, o));\n                            } finally{\n                                _d = true;\n                            }\n                        }\n                    } catch (e_2_1) {\n                        e_2 = {\n                            error: e_2_1\n                        };\n                    } finally{\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield $f2a2ea2104ee01c4$var$__await(_b.call(_e));\n                        } finally{\n                            if (e_2) throw e_2.error;\n                        }\n                    }\n                });\n            };\n    }\n}\nmodule.exports.transformInvokeImplementation = $f2a2ea2104ee01c4$var$transformInvokeImplementation;\nfunction $f2a2ea2104ee01c4$var$normalizeOutput(spec, message) {\n    if (message instanceof $hNn7i.Message) return message;\n    try {\n        return new spec.method.O(message);\n    } catch (e) {\n        throw new $dbKGs.ConnectError(`failed to normalize message ${spec.method.O.typeName}`, $2S2uU.Code.Internal, undefined, undefined, e);\n    }\n}\n\n});\n\nparcelRequire.register(\"5cbVl\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.uResponseVersionNotSupported = module.exports.uResponseMethodNotAllowed = module.exports.uResponseUnsupportedMediaType = module.exports.uResponseNotFound = module.exports.uResponseOk = module.exports.assertByteStreamRequest = void 0;\n/**\n * Assert that the given UniversalServerRequest has a byte stream body, not\n * a JSON value.\n *\n * We accept a JSON object or a byte stream in server requests.\n * In practice, only Connect unary handlers will receive a parse\n * JSON object. Other call-sites can use this assertion to narrow\n * the union type. A failure in such a call-sites indicates that\n * the contract between a server framework and the connect-node \\\n * handler is broken.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $3c875299076f9915$var$assertByteStreamRequest(req) {\n    if (typeof req.body == \"object\" && req.body !== null && Symbol.asyncIterator in req.body) return;\n    throw new Error(\"byte stream required, but received JSON\");\n}\nmodule.exports.assertByteStreamRequest = $3c875299076f9915$var$assertByteStreamRequest;\n/**\n * HTTP 200 OK\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.uResponseOk = {\n    status: 200\n};\n/**\n * HTTP 404 Not Found\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.uResponseNotFound = {\n    status: 404\n};\n/**\n * HTTP 415 Unsupported Media Type\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.uResponseUnsupportedMediaType = {\n    status: 415\n};\n/**\n * HTTP 405 Method Not Allowed\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.uResponseMethodNotAllowed = {\n    status: 405\n};\n/**\n * HTTP 505 Version Not Supported\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.uResponseVersionNotSupported = {\n    status: 505\n};\n\n});\n\nparcelRequire.register(\"9FNZj\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.negotiateProtocol = module.exports.createUniversalMethodHandler = module.exports.createUniversalServiceHandlers = module.exports.validateUniversalHandlerOptions = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $5cbVl = parcelRequire(\"5cbVl\");\n\nvar $dHfIs = parcelRequire(\"dHfIs\");\n\nvar $cKeEL = parcelRequire(\"cKeEL\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * Note that this function does not set default values for `acceptCompression`.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $70aeb7eda71fc236$var$validateUniversalHandlerOptions(opt) {\n    var _a, _b;\n    opt !== null && opt !== void 0 ? opt : opt = {};\n    const acceptCompression = opt.acceptCompression ? [\n        ...opt.acceptCompression\n    ] : [];\n    const requireConnectProtocolHeader = (_a = opt.requireConnectProtocolHeader) !== null && _a !== void 0 ? _a : false;\n    const maxTimeoutMs = (_b = opt.maxTimeoutMs) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER;\n    return Object.assign(Object.assign({\n        acceptCompression: acceptCompression\n    }, (0, $cKeEL.validateReadWriteMaxBytes)(opt.readMaxBytes, opt.writeMaxBytes, opt.compressMinBytes)), {\n        jsonOptions: opt.jsonOptions,\n        binaryOptions: opt.binaryOptions,\n        maxTimeoutMs: maxTimeoutMs,\n        shutdownSignal: opt.shutdownSignal,\n        requireConnectProtocolHeader: requireConnectProtocolHeader\n    });\n}\nmodule.exports.validateUniversalHandlerOptions = $70aeb7eda71fc236$var$validateUniversalHandlerOptions;\n/**\n * For the given service implementation, return a universal handler for each\n * RPC. The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $70aeb7eda71fc236$var$createUniversalServiceHandlers(spec, protocols) {\n    return Object.entries(spec.methods).map(([, implSpec])=>$70aeb7eda71fc236$var$createUniversalMethodHandler(implSpec, protocols));\n}\nmodule.exports.createUniversalServiceHandlers = $70aeb7eda71fc236$var$createUniversalServiceHandlers;\n/**\n * Return a universal handler for the given RPC implementation.\n * The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $70aeb7eda71fc236$var$createUniversalMethodHandler(spec, protocols) {\n    return $70aeb7eda71fc236$var$negotiateProtocol(protocols.map((f)=>f(spec)));\n}\nmodule.exports.createUniversalMethodHandler = $70aeb7eda71fc236$var$createUniversalMethodHandler;\n/**\n * Create a universal handler that negotiates the protocol.\n *\n * This functions takes one or more handlers - all for the same RPC, but for\n * different protocols - and returns a single handler that looks at the\n * Content-Type header and the HTTP verb of the incoming request to select\n * the appropriate protocol-specific handler.\n *\n * Raises an error if no protocol handlers were provided, or if they do not\n * handle exactly the same RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $70aeb7eda71fc236$var$negotiateProtocol(protocolHandlers) {\n    if (protocolHandlers.length == 0) throw new $dbKGs.ConnectError(\"at least one protocol is required\", $2S2uU.Code.Internal);\n    const service = protocolHandlers[0].service;\n    const method = protocolHandlers[0].method;\n    const requestPath = protocolHandlers[0].requestPath;\n    if (protocolHandlers.some((h)=>h.service !== service || h.method !== method)) throw new $dbKGs.ConnectError(\"cannot negotiate protocol for different RPCs\", $2S2uU.Code.Internal);\n    if (protocolHandlers.some((h)=>h.requestPath !== requestPath)) throw new $dbKGs.ConnectError(\"cannot negotiate protocol for different requestPaths\", $2S2uU.Code.Internal);\n    async function protocolNegotiatingHandler(request) {\n        var _a;\n        if (method.kind == $hNn7i.MethodKind.BiDiStreaming && request.httpVersion.startsWith(\"1.\")) return Object.assign(Object.assign({}, $5cbVl.uResponseVersionNotSupported), {\n            // Clients coded to expect full-duplex connections may hang if they've\n            // mistakenly negotiated HTTP/1.1. To unblock them, we must close the\n            // underlying TCP connection.\n            header: new Headers({\n                Connection: \"close\"\n            })\n        });\n        const contentType = (_a = request.header.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n        const matchingMethod = protocolHandlers.filter((h)=>h.allowedMethods.includes(request.method));\n        if (matchingMethod.length == 0) return $5cbVl.uResponseMethodNotAllowed;\n        // If Content-Type is unset but only one handler matches, use it.\n        if (matchingMethod.length == 1 && contentType === \"\") {\n            const onlyMatch = matchingMethod[0];\n            return onlyMatch(request);\n        }\n        const matchingContentTypes = matchingMethod.filter((h)=>h.supportedContentType(contentType));\n        if (matchingContentTypes.length == 0) return $5cbVl.uResponseUnsupportedMediaType;\n        const firstMatch = matchingContentTypes[0];\n        return firstMatch(request);\n    }\n    return Object.assign(protocolNegotiatingHandler, {\n        service: service,\n        method: method,\n        requestPath: requestPath,\n        supportedContentType: (0, $dHfIs.contentTypeMatcher)(...protocolHandlers.map((h)=>h.supportedContentType)),\n        protocolNames: protocolHandlers.flatMap((h)=>h.protocolNames).filter((value, index, array)=>array.indexOf(value) === index),\n        allowedMethods: protocolHandlers.flatMap((h)=>h.allowedMethods).filter((value, index, array)=>array.indexOf(value) === index)\n    });\n}\nmodule.exports.negotiateProtocol = $70aeb7eda71fc236$var$negotiateProtocol;\n\n});\n\n\nparcelRequire.register(\"4wRJK\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $34c3d594ed34db37$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $34c3d594ed34db37$var$__exportStar = module.exports && module.exports.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) $34c3d594ed34db37$var$__createBinding(exports1, m, p);\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.codeToString = module.exports.codeFromString = module.exports.protocolVersion = module.exports.transformConnectPostToGetRequest = module.exports.trailerDemux = module.exports.trailerMux = module.exports.validateResponseWithCompression = module.exports.validateResponse = module.exports.parseTimeout = module.exports.contentTypeStreamRegExp = module.exports.contentTypeUnaryRegExp = module.exports.contentTypeRegExp = module.exports.contentTypeStreamJson = module.exports.contentTypeStreamProto = module.exports.contentTypeUnaryJson = module.exports.contentTypeUnaryProto = module.exports.parseContentType = module.exports.errorToJsonBytes = module.exports.errorToJson = module.exports.errorFromJsonBytes = module.exports.errorFromJson = module.exports.createEndStreamSerialization = module.exports.endStreamFlag = module.exports.endStreamFromJson = module.exports.endStreamToJson = module.exports.requestHeaderWithCompression = module.exports.requestHeader = module.exports.codeToHttpStatus = module.exports.codeFromHttpStatus = module.exports.createTransport = module.exports.createHandlerFactory = void 0;\n\nvar $9jc4q = parcelRequire(\"9jc4q\");\nObject.defineProperty(module.exports, \"createHandlerFactory\", {\n    enumerable: true,\n    get: function() {\n        return $9jc4q.createHandlerFactory;\n    }\n});\n\nvar $ciggp = parcelRequire(\"ciggp\");\nObject.defineProperty(module.exports, \"createTransport\", {\n    enumerable: true,\n    get: function() {\n        return $ciggp.createTransport;\n    }\n});\n\nvar $gomUo = parcelRequire(\"gomUo\");\nObject.defineProperty(module.exports, \"codeFromHttpStatus\", {\n    enumerable: true,\n    get: function() {\n        return $gomUo.codeFromHttpStatus;\n    }\n});\nObject.defineProperty(module.exports, \"codeToHttpStatus\", {\n    enumerable: true,\n    get: function() {\n        return $gomUo.codeToHttpStatus;\n    }\n});\n\nvar $kPVNl = parcelRequire(\"kPVNl\");\nObject.defineProperty(module.exports, \"requestHeader\", {\n    enumerable: true,\n    get: function() {\n        return $kPVNl.requestHeader;\n    }\n});\nObject.defineProperty(module.exports, \"requestHeaderWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $kPVNl.requestHeaderWithCompression;\n    }\n});\n\nvar $5PCxW = parcelRequire(\"5PCxW\");\nObject.defineProperty(module.exports, \"endStreamToJson\", {\n    enumerable: true,\n    get: function() {\n        return $5PCxW.endStreamToJson;\n    }\n});\nObject.defineProperty(module.exports, \"endStreamFromJson\", {\n    enumerable: true,\n    get: function() {\n        return $5PCxW.endStreamFromJson;\n    }\n});\nObject.defineProperty(module.exports, \"endStreamFlag\", {\n    enumerable: true,\n    get: function() {\n        return $5PCxW.endStreamFlag;\n    }\n});\nObject.defineProperty(module.exports, \"createEndStreamSerialization\", {\n    enumerable: true,\n    get: function() {\n        return $5PCxW.createEndStreamSerialization;\n    }\n});\n\nvar $5z3hl = parcelRequire(\"5z3hl\");\nObject.defineProperty(module.exports, \"errorFromJson\", {\n    enumerable: true,\n    get: function() {\n        return $5z3hl.errorFromJson;\n    }\n});\nObject.defineProperty(module.exports, \"errorFromJsonBytes\", {\n    enumerable: true,\n    get: function() {\n        return $5z3hl.errorFromJsonBytes;\n    }\n});\nObject.defineProperty(module.exports, \"errorToJson\", {\n    enumerable: true,\n    get: function() {\n        return $5z3hl.errorToJson;\n    }\n});\nObject.defineProperty(module.exports, \"errorToJsonBytes\", {\n    enumerable: true,\n    get: function() {\n        return $5z3hl.errorToJsonBytes;\n    }\n});\n\nvar $91teX = parcelRequire(\"91teX\");\nObject.defineProperty(module.exports, \"parseContentType\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.parseContentType;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeUnaryProto\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeUnaryProto;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeUnaryJson\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeUnaryJson;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeStreamProto\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeStreamProto;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeStreamJson\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeStreamJson;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeRegExp\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeRegExp;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeUnaryRegExp\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeUnaryRegExp;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeStreamRegExp\", {\n    enumerable: true,\n    get: function() {\n        return $91teX.contentTypeStreamRegExp;\n    }\n});\n\nvar $sQNNB = parcelRequire(\"sQNNB\");\nObject.defineProperty(module.exports, \"parseTimeout\", {\n    enumerable: true,\n    get: function() {\n        return $sQNNB.parseTimeout;\n    }\n});\n\nvar $fHJsY = parcelRequire(\"fHJsY\");\nObject.defineProperty(module.exports, \"validateResponse\", {\n    enumerable: true,\n    get: function() {\n        return $fHJsY.validateResponse;\n    }\n});\nObject.defineProperty(module.exports, \"validateResponseWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $fHJsY.validateResponseWithCompression;\n    }\n});\n\nvar $f9Qm8 = parcelRequire(\"f9Qm8\");\nObject.defineProperty(module.exports, \"trailerMux\", {\n    enumerable: true,\n    get: function() {\n        return $f9Qm8.trailerMux;\n    }\n});\nObject.defineProperty(module.exports, \"trailerDemux\", {\n    enumerable: true,\n    get: function() {\n        return $f9Qm8.trailerDemux;\n    }\n});\n\n$34c3d594ed34db37$var$__exportStar((parcelRequire(\"2vMsJ\")), module.exports);\n\nvar $iLIBn = parcelRequire(\"iLIBn\");\nObject.defineProperty(module.exports, \"transformConnectPostToGetRequest\", {\n    enumerable: true,\n    get: function() {\n        return $iLIBn.transformConnectPostToGetRequest;\n    }\n});\n\nvar $lJphl = parcelRequire(\"lJphl\");\nObject.defineProperty(module.exports, \"protocolVersion\", {\n    enumerable: true,\n    get: function() {\n        return $lJphl.protocolVersion;\n    }\n});\n\nvar $dpeGY = parcelRequire(\"dpeGY\");\nObject.defineProperty(module.exports, \"codeFromString\", {\n    enumerable: true,\n    get: function() {\n        return $dpeGY.codeFromString;\n    }\n});\n\nvar $dpeGY = parcelRequire(\"dpeGY\");\nObject.defineProperty(module.exports, \"codeToString\", {\n    enumerable: true,\n    get: function() {\n        return $dpeGY.codeToString;\n    }\n});\n\n});\nparcelRequire.register(\"9jc4q\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createHandlerFactory = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\n\nvar $91teX = parcelRequire(\"91teX\");\n\nvar $5PCxW = parcelRequire(\"5PCxW\");\n\nvar $5z3hl = parcelRequire(\"5z3hl\");\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $gomUo = parcelRequire(\"gomUo\");\n\nvar $sQNNB = parcelRequire(\"sQNNB\");\n\nvar $im48N = parcelRequire(\"im48N\");\n\nvar $f9Qm8 = parcelRequire(\"f9Qm8\");\n\nvar $lJphl = parcelRequire(\"lJphl\");\n\nvar $cFI6K = parcelRequire(\"cFI6K\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n\nvar $9FNZj = parcelRequire(\"9FNZj\");\n\nvar $5cbVl = parcelRequire(\"5cbVl\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $dHfIs = parcelRequire(\"dHfIs\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $kPxXG = parcelRequire(\"kPxXG\");\nconst $6c6f4053d5b7b913$var$protocolName = \"connect\";\nconst $6c6f4053d5b7b913$var$methodPost = \"POST\";\nconst $6c6f4053d5b7b913$var$methodGet = \"GET\";\n/**\n * Create a factory that creates Connect handlers.\n */ function $6c6f4053d5b7b913$var$createHandlerFactory(options) {\n    const opt = (0, $9FNZj.validateUniversalHandlerOptions)(options);\n    const endStreamSerialization = (0, $5PCxW.createEndStreamSerialization)(opt.jsonOptions);\n    function fact(spec) {\n        let h;\n        let contentTypeRegExp;\n        const serialization = (0, $3mgpQ.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n        switch(spec.kind){\n            case $hNn7i.MethodKind.Unary:\n                contentTypeRegExp = $91teX.contentTypeUnaryRegExp;\n                h = $6c6f4053d5b7b913$var$createUnaryHandler(opt, spec, serialization);\n                break;\n            default:\n                contentTypeRegExp = $91teX.contentTypeStreamRegExp;\n                h = $6c6f4053d5b7b913$var$createStreamHandler(opt, spec, serialization, endStreamSerialization);\n                break;\n        }\n        const allowedMethods = [\n            $6c6f4053d5b7b913$var$methodPost\n        ];\n        if (spec.method.idempotency === $hNn7i.MethodIdempotency.NoSideEffects) allowedMethods.push($6c6f4053d5b7b913$var$methodGet);\n        return Object.assign(h, {\n            protocolNames: [\n                $6c6f4053d5b7b913$var$protocolName\n            ],\n            supportedContentType: (0, $dHfIs.contentTypeMatcher)(contentTypeRegExp),\n            allowedMethods: allowedMethods,\n            requestPath: (0, $3xity.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method\n        });\n    }\n    fact.protocolName = $6c6f4053d5b7b913$var$protocolName;\n    return fact;\n}\nmodule.exports.createHandlerFactory = $6c6f4053d5b7b913$var$createHandlerFactory;\nfunction $6c6f4053d5b7b913$var$createUnaryHandler(opt, spec, serialization) {\n    return async function handle(req) {\n        const isGet = req.method == $6c6f4053d5b7b913$var$methodGet;\n        if (isGet && spec.method.idempotency != $hNn7i.MethodIdempotency.NoSideEffects) return $5cbVl.uResponseMethodNotAllowed;\n        const queryParams = new URL(req.url).searchParams;\n        const compressionRequested = isGet ? queryParams.get($im48N.paramCompression) : req.header.get($2vMsJ.headerUnaryEncoding);\n        const type = isGet ? (0, $91teX.parseEncodingQuery)(queryParams.get($im48N.paramEncoding)) : (0, $91teX.parseContentType)(req.header.get($2vMsJ.headerContentType));\n        if (type == undefined || type.stream) return $5cbVl.uResponseUnsupportedMediaType;\n        const timeout = (0, $sQNNB.parseTimeout)(req.header.get($2vMsJ.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, $4Jmw5.createHandlerContext)(Object.assign(Object.assign({}, spec), {\n            requestMethod: req.method,\n            protocolName: $6c6f4053d5b7b913$var$protocolName,\n            timeoutMs: timeout.timeoutMs,\n            shutdownSignal: opt.shutdownSignal,\n            requestSignal: req.signal,\n            requestHeader: req.header,\n            responseHeader: {\n                [$2vMsJ.headerContentType]: type.binary ? $91teX.contentTypeUnaryProto : $91teX.contentTypeUnaryJson\n            }\n        }));\n        const compression = (0, $cFI6K.compressionNegotiate)(opt.acceptCompression, compressionRequested, req.header.get($2vMsJ.headerUnaryAcceptEncoding), $2vMsJ.headerUnaryAcceptEncoding);\n        let status = $5cbVl.uResponseOk.status;\n        let body;\n        try {\n            if (opt.requireConnectProtocolHeader) {\n                if (isGet) (0, $lJphl.requireProtocolVersionParam)(queryParams);\n                else (0, $lJphl.requireProtocolVersionHeader)(req.header);\n            }\n            // raise compression error to serialize it as a error response\n            if (compression.error) throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) throw timeout.error;\n            let reqBody;\n            if (isGet) reqBody = await $6c6f4053d5b7b913$var$readUnaryMessageFromQuery(opt.readMaxBytes, compression.request, queryParams);\n            else reqBody = await $6c6f4053d5b7b913$var$readUnaryMessageFromBody(opt.readMaxBytes, compression.request, req);\n            const input = $6c6f4053d5b7b913$var$parseUnaryMessage(spec.method, type.binary, serialization, reqBody);\n            const output = await (0, $kPxXG.invokeUnaryImplementation)(spec, context, input);\n            body = serialization.getO(type.binary).serialize(output);\n        } catch (e) {\n            let error;\n            if (e instanceof $dbKGs.ConnectError) error = e;\n            else error = new $dbKGs.ConnectError(\"internal error\", $2S2uU.Code.Internal, undefined, undefined, e);\n            status = (0, $gomUo.codeToHttpStatus)(error.code);\n            context.responseHeader.set($2vMsJ.headerContentType, $91teX.contentTypeUnaryJson);\n            error.metadata.forEach((value, key)=>{\n                context.responseHeader.set(key, value);\n            });\n            body = (0, $5z3hl.errorToJsonBytes)(error, opt.jsonOptions);\n        } finally{\n            context.abort();\n        }\n        if (compression.response && body.byteLength >= opt.compressMinBytes) {\n            body = await compression.response.compress(body);\n            context.responseHeader.set($2vMsJ.headerUnaryEncoding, compression.response.name);\n        }\n        const header = (0, $f9Qm8.trailerMux)(context.responseHeader, context.responseTrailer);\n        header.set($2vMsJ.headerUnaryContentLength, body.byteLength.toString(10));\n        return {\n            status: status,\n            body: (0, $4TIBd.createAsyncIterable)([\n                body\n            ]),\n            header: header\n        };\n    };\n}\nasync function $6c6f4053d5b7b913$var$readUnaryMessageFromBody(readMaxBytes, compression, request) {\n    if (typeof request.body == \"object\" && request.body !== null && Symbol.asyncIterator in request.body) {\n        let reqBytes = await (0, $4TIBd.readAllBytes)(request.body, readMaxBytes, request.header.get($2vMsJ.headerUnaryContentLength));\n        if (compression) reqBytes = await compression.decompress(reqBytes, readMaxBytes);\n        return reqBytes;\n    }\n    return request.body;\n}\nasync function $6c6f4053d5b7b913$var$readUnaryMessageFromQuery(readMaxBytes, compression, queryParams) {\n    var _a;\n    const base64 = queryParams.get($im48N.paramBase64);\n    const message = (_a = queryParams.get($im48N.paramMessage)) !== null && _a !== void 0 ? _a : \"\";\n    let decoded;\n    if (base64 === \"1\") decoded = $hNn7i.protoBase64.dec(message);\n    else decoded = new TextEncoder().encode(message);\n    if (compression) decoded = await compression.decompress(decoded, readMaxBytes);\n    return decoded;\n}\nfunction $6c6f4053d5b7b913$var$parseUnaryMessage(method, useBinaryFormat, serialization, input) {\n    if (input instanceof Uint8Array) return serialization.getI(useBinaryFormat).parse(input);\n    if (useBinaryFormat) throw new $dbKGs.ConnectError(\"received parsed JSON request body, but content-type indicates binary format\", $2S2uU.Code.Internal);\n    try {\n        return method.I.fromJson(input);\n    } catch (e) {\n        throw $dbKGs.ConnectError.from(e, $2S2uU.Code.InvalidArgument);\n    }\n}\nfunction $6c6f4053d5b7b913$var$createStreamHandler(opt, spec, serialization, endStreamSerialization) {\n    return async function handle(req) {\n        (0, $5cbVl.assertByteStreamRequest)(req);\n        const type = (0, $91teX.parseContentType)(req.header.get($2vMsJ.headerContentType));\n        if (type == undefined || !type.stream) return $5cbVl.uResponseUnsupportedMediaType;\n        if (req.method !== $6c6f4053d5b7b913$var$methodPost) return $5cbVl.uResponseMethodNotAllowed;\n        const timeout = (0, $sQNNB.parseTimeout)(req.header.get($2vMsJ.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, $4Jmw5.createHandlerContext)(Object.assign(Object.assign({}, spec), {\n            requestMethod: req.method,\n            protocolName: $6c6f4053d5b7b913$var$protocolName,\n            timeoutMs: timeout.timeoutMs,\n            shutdownSignal: opt.shutdownSignal,\n            requestSignal: req.signal,\n            requestHeader: req.header,\n            responseHeader: {\n                [$2vMsJ.headerContentType]: type.binary ? $91teX.contentTypeStreamProto : $91teX.contentTypeStreamJson\n            }\n        }));\n        const compression = (0, $cFI6K.compressionNegotiate)(opt.acceptCompression, req.header.get($2vMsJ.headerStreamEncoding), req.header.get($2vMsJ.headerStreamAcceptEncoding), $2vMsJ.headerStreamAcceptEncoding);\n        if (compression.response) context.responseHeader.set($2vMsJ.headerStreamEncoding, compression.response.name);\n        const outputIt = (0, $4TIBd.pipe)(req.body, (0, $4TIBd.transformPrepend)(()=>{\n            if (opt.requireConnectProtocolHeader) (0, $lJphl.requireProtocolVersionHeader)(req.header);\n            // raise compression error to serialize it as the end stream response\n            if (compression.error) throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) throw timeout.error;\n            return undefined;\n        }), (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getI(type.binary), $5PCxW.endStreamFlag), (0, $kPxXG.transformInvokeImplementation)(spec, context), (0, $4TIBd.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, $4TIBd.transformCatchFinally)((e)=>{\n            context.abort();\n            const end = {\n                metadata: context.responseTrailer\n            };\n            if (e instanceof $dbKGs.ConnectError) end.error = e;\n            else if (e !== undefined) end.error = new $dbKGs.ConnectError(\"internal error\", $2S2uU.Code.Internal, undefined, undefined, e);\n            return {\n                flags: $5PCxW.endStreamFlag,\n                data: endStreamSerialization.serialize(end)\n            };\n        }), (0, $4TIBd.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)());\n        return Object.assign(Object.assign({}, $5cbVl.uResponseOk), {\n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, $4TIBd.untilFirst)(outputIt),\n            header: context.responseHeader\n        });\n    };\n}\n\n});\nparcelRequire.register(\"4Jmw5\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createServiceImplSpec = module.exports.createMethodImplSpec = module.exports.createHandlerContext = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $5iLQY = parcelRequire(\"5iLQY\");\n/**\n * Create a new HandlerContext.\n *\n * The context is usually automatically created by handlers, but if a service\n * implementation is used in unit tests, this function can be used to create\n * a context.\n */ function $371cd4b334e49bf5$var$createHandlerContext(init) {\n    let timeoutMs;\n    if (init.timeoutMs !== undefined) {\n        const date = new Date(Date.now() + init.timeoutMs);\n        timeoutMs = ()=>date.getTime() - Date.now();\n    } else timeoutMs = ()=>undefined;\n    const deadline = (0, $5iLQY.createDeadlineSignal)(init.timeoutMs);\n    const abortController = (0, $5iLQY.createLinkedAbortController)(deadline.signal, init.requestSignal, init.shutdownSignal);\n    return Object.assign(Object.assign({}, init), {\n        signal: abortController.signal,\n        timeoutMs: timeoutMs,\n        requestHeader: new Headers(init.requestHeader),\n        responseHeader: new Headers(init.responseHeader),\n        responseTrailer: new Headers(init.responseTrailer),\n        abort (reason) {\n            deadline.cleanup();\n            abortController.abort(reason);\n        }\n    });\n}\nmodule.exports.createHandlerContext = $371cd4b334e49bf5$var$createHandlerContext;\n/**\n * Create an MethodImplSpec - a user-provided implementation for a method,\n * wrapped in a discriminated union type along with service and method metadata.\n */ function $371cd4b334e49bf5$var$createMethodImplSpec(service, method, impl) {\n    return {\n        kind: method.kind,\n        service: service,\n        method: method,\n        impl: impl\n    };\n}\nmodule.exports.createMethodImplSpec = $371cd4b334e49bf5$var$createMethodImplSpec;\n/**\n * Create an ServiceImplSpec - a user-provided service implementation wrapped\n * with metadata.\n */ function $371cd4b334e49bf5$var$createServiceImplSpec(service, impl) {\n    const s = {\n        service: service,\n        methods: {}\n    };\n    for (const [localName, methodInfo] of Object.entries(service.methods)){\n        let fn = impl[localName];\n        if (typeof fn == \"function\") fn = fn.bind(impl);\n        else {\n            const message = `${service.typeName}.${methodInfo.name} is not implemented`;\n            fn = function unimplemented() {\n                throw new $dbKGs.ConnectError(message, $2S2uU.Code.Unimplemented);\n            };\n        }\n        s.methods[localName] = $371cd4b334e49bf5$var$createMethodImplSpec(service, methodInfo, fn);\n    }\n    return s;\n}\nmodule.exports.createServiceImplSpec = $371cd4b334e49bf5$var$createServiceImplSpec;\n\n});\n\nparcelRequire.register(\"91teX\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseEncodingQuery = module.exports.parseContentType = module.exports.contentTypeStreamJson = module.exports.contentTypeStreamProto = module.exports.contentTypeUnaryJson = module.exports.contentTypeUnaryProto = module.exports.contentTypeStreamRegExp = module.exports.contentTypeUnaryRegExp = module.exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid Connect Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.contentTypeRegExp = /^application\\/(connect\\+)?(?:(json)(?:; ?charset=utf-?8)?|(proto))$/i;\n/**\n * Regular Expression that matches a Connect unary Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.contentTypeUnaryRegExp = /^application\\/(?:json(?:; ?charset=utf-?8)?|proto)$/i;\n/**\n * Regular Expression that matches a Connect streaming Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.contentTypeStreamRegExp = /^application\\/connect\\+?(?:json(?:; ?charset=utf-?8)?|proto)$/i;\nmodule.exports.contentTypeUnaryProto = \"application/proto\";\nmodule.exports.contentTypeUnaryJson = \"application/json\";\nmodule.exports.contentTypeStreamProto = \"application/connect+proto\";\nmodule.exports.contentTypeStreamJson = \"application/connect+json\";\nconst $691ae390a5b52bb5$var$encodingProto = \"proto\";\nconst $691ae390a5b52bb5$var$encodingJson = \"json\";\n/**\n * Parse a Connect Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $691ae390a5b52bb5$var$parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(module.exports.contentTypeRegExp);\n    if (!match) return undefined;\n    const stream = !!match[1];\n    const binary = !!match[3];\n    return {\n        stream: stream,\n        binary: binary\n    };\n}\nmodule.exports.parseContentType = $691ae390a5b52bb5$var$parseContentType;\n/**\n * Parse a Connect Get encoding query parameter.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $691ae390a5b52bb5$var$parseEncodingQuery(encoding) {\n    switch(encoding){\n        case $691ae390a5b52bb5$var$encodingProto:\n            return {\n                stream: false,\n                binary: true\n            };\n        case $691ae390a5b52bb5$var$encodingJson:\n            return {\n                stream: false,\n                binary: false\n            };\n        default:\n            return undefined;\n    }\n}\nmodule.exports.parseEncodingQuery = $691ae390a5b52bb5$var$parseEncodingQuery;\n\n});\n\nparcelRequire.register(\"5PCxW\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createEndStreamSerialization = module.exports.endStreamToJson = module.exports.endStreamFromJson = module.exports.endStreamFlag = void 0;\n\nvar $5z3hl = parcelRequire(\"5z3hl\");\n\nvar $b1qwC = parcelRequire(\"b1qwC\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * endStreamFlag indicates that the data in a EnvelopedMessage\n * is a EndStreamResponse of the Connect protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.endStreamFlag = 2;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n * Throws a ConnectError on malformed input.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $43ef9db3a58ea7de$var$endStreamFromJson(data) {\n    const parseErr = new $dbKGs.ConnectError(\"invalid end stream\", $2S2uU.Code.InvalidArgument);\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(typeof data == \"string\" ? data : new TextDecoder().decode(data));\n    } catch (e) {\n        throw parseErr;\n    }\n    if (typeof jsonValue != \"object\" || jsonValue == null || Array.isArray(jsonValue)) throw parseErr;\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" || jsonValue.metadata == null || Array.isArray(jsonValue.metadata)) throw parseErr;\n        for (const [key, values] of Object.entries(jsonValue.metadata)){\n            if (!Array.isArray(values) || values.some((value)=>typeof value != \"string\")) throw parseErr;\n            for (const value of values)metadata.append(key, value);\n        }\n    }\n    const error = \"error\" in jsonValue ? (0, $5z3hl.errorFromJson)(jsonValue.error, metadata, parseErr) : undefined;\n    return {\n        metadata: metadata,\n        error: error\n    };\n}\nmodule.exports.endStreamFromJson = $43ef9db3a58ea7de$var$endStreamFromJson;\n/**\n * Serialize the given EndStreamResponse to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation of error details if the detail uses\n * google.protobuf.Any.\n *\n * See https://connect.build/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $43ef9db3a58ea7de$var$endStreamToJson(metadata, error, jsonWriteOptions) {\n    const es = {};\n    if (error !== undefined) {\n        es.error = (0, $5z3hl.errorToJson)(error, jsonWriteOptions);\n        metadata = (0, $b1qwC.appendHeaders)(metadata, error.metadata);\n    }\n    let hasMetadata = false;\n    const md = {};\n    metadata.forEach((value, key)=>{\n        hasMetadata = true;\n        md[key] = [\n            value\n        ];\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (hasMetadata) es.metadata = md;\n    return es;\n}\nmodule.exports.endStreamToJson = $43ef9db3a58ea7de$var$endStreamToJson;\n/**\n * Create a Serialization object that serializes a Connect EndStreamResponse.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $43ef9db3a58ea7de$var$createEndStreamSerialization(options) {\n    const textEncoder = new TextEncoder();\n    return {\n        serialize (data) {\n            try {\n                const jsonObject = $43ef9db3a58ea7de$var$endStreamToJson(data.metadata, data.error, options);\n                const jsonString = JSON.stringify(jsonObject);\n                return textEncoder.encode(jsonString);\n            } catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new $dbKGs.ConnectError(`failed to serialize EndStreamResponse: ${m}`, $2S2uU.Code.Internal);\n            }\n        },\n        parse (data) {\n            try {\n                return $43ef9db3a58ea7de$var$endStreamFromJson(data);\n            } catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new $dbKGs.ConnectError(`failed to parse EndStreamResponse: ${m}`, $2S2uU.Code.InvalidArgument);\n            }\n        }\n    };\n}\nmodule.exports.createEndStreamSerialization = $43ef9db3a58ea7de$var$createEndStreamSerialization;\n\n});\nparcelRequire.register(\"5z3hl\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $40d2c3b657f2a7ca$var$__rest = module.exports && module.exports.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.errorToJsonBytes = module.exports.errorToJson = module.exports.errorFromJsonBytes = module.exports.errorFromJson = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $dpeGY = parcelRequire(\"dpeGY\");\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $40d2c3b657f2a7ca$var$errorFromJson(jsonValue, metadata, fallback) {\n    if (metadata) new Headers(metadata).forEach((value, key)=>fallback.metadata.append(key, value));\n    if (typeof jsonValue !== \"object\" || jsonValue == null || Array.isArray(jsonValue) || !(\"code\" in jsonValue) || typeof jsonValue.code !== \"string\") throw fallback;\n    const code = (0, $dpeGY.codeFromString)(jsonValue.code);\n    if (code === undefined) throw fallback;\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") throw fallback;\n    const error = new $dbKGs.ConnectError(message !== null && message !== void 0 ? message : \"\", code, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) for (const detail of jsonValue.details){\n        if (detail === null || typeof detail != \"object\" || Array.isArray(detail) || typeof detail.type != \"string\" || typeof detail.value != \"string\" || \"debug\" in detail && typeof detail.debug != \"object\") throw fallback;\n        try {\n            error.details.push({\n                type: detail.type,\n                value: $hNn7i.protoBase64.dec(detail.value),\n                debug: detail.debug\n            });\n        } catch (e) {\n            throw fallback;\n        }\n    }\n    return error;\n}\nmodule.exports.errorFromJson = $40d2c3b657f2a7ca$var$errorFromJson;\n/**\n * Parse a Connect error from a serialized JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $40d2c3b657f2a7ca$var$errorFromJsonBytes(bytes, metadata, fallback) {\n    let jsonValue;\n    try {\n        jsonValue = JSON.parse(new TextDecoder().decode(bytes));\n    } catch (e) {\n        throw fallback;\n    }\n    return $40d2c3b657f2a7ca$var$errorFromJson(jsonValue, metadata, fallback);\n}\nmodule.exports.errorFromJsonBytes = $40d2c3b657f2a7ca$var$errorFromJsonBytes;\n/**\n * Serialize the given error to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation in the \"debug\" key if the detail uses\n * google.protobuf.Any. If serialization of the \"debug\" value fails, it\n * is silently disregarded.\n *\n * See https://connect.build/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $40d2c3b657f2a7ca$var$errorToJson(error, jsonWriteOptions) {\n    const o = {\n        code: (0, $dpeGY.codeToString)(error.code)\n    };\n    if (error.rawMessage.length > 0) o.message = error.rawMessage;\n    if (error.details.length > 0) o.details = error.details.map((value)=>{\n        if (value instanceof $hNn7i.Message) {\n            const i = {\n                type: value.getType().typeName,\n                value: value.toBinary()\n            };\n            try {\n                i.debug = value.toJson(jsonWriteOptions);\n            } catch (e) {\n            // We deliberately ignore errors that may occur when serializing\n            // a message to JSON (the message contains an Any).\n            // The rationale is that we are only trying to provide optional\n            // debug information.\n            }\n            return i;\n        }\n        return value;\n    }).map((_a)=>{\n        var { value: value } = _a, rest = $40d2c3b657f2a7ca$var$__rest(_a, [\n            \"value\"\n        ]);\n        return Object.assign(Object.assign({}, rest), {\n            value: $hNn7i.protoBase64.enc(value)\n        });\n    });\n    return o;\n}\nmodule.exports.errorToJson = $40d2c3b657f2a7ca$var$errorToJson;\n/**\n * Serialize the given error to JSON. This calls errorToJson(), but stringifies\n * the result, and converts it into a UInt8Array.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $40d2c3b657f2a7ca$var$errorToJsonBytes(error, jsonWriteOptions) {\n    const textEncoder = new TextEncoder();\n    try {\n        const jsonObject = $40d2c3b657f2a7ca$var$errorToJson(error, jsonWriteOptions);\n        const jsonString = JSON.stringify(jsonObject);\n        return textEncoder.encode(jsonString);\n    } catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new $dbKGs.ConnectError(`failed to serialize Connect Error: ${m}`, $2S2uU.Code.Internal);\n    }\n}\nmodule.exports.errorToJsonBytes = $40d2c3b657f2a7ca$var$errorToJsonBytes;\n\n});\n\nparcelRequire.register(\"b1qwC\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.appendHeaders = module.exports.decodeBinaryHeader = module.exports.encodeBinaryHeader = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with unpadded base64 and returns a string that can be used for\n * a header whose name ends with `-bin`.\n */ function $80645d0cc536252f$var$encodeBinaryHeader(value) {\n    let bytes;\n    if (value instanceof $hNn7i.Message) bytes = value.toBinary();\n    else if (typeof value == \"string\") bytes = new TextEncoder().encode(value);\n    else bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    return $hNn7i.protoBase64.enc(bytes).replace(/=+$/, \"\");\n}\nmodule.exports.encodeBinaryHeader = $80645d0cc536252f$var$encodeBinaryHeader;\nfunction $80645d0cc536252f$var$decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = $hNn7i.protoBase64.dec(value);\n        if (type) return type.fromBinary(bytes, options);\n        return bytes;\n    } catch (e) {\n        throw $dbKGs.ConnectError.from(e, $2S2uU.Code.DataLoss);\n    }\n}\nmodule.exports.decodeBinaryHeader = $80645d0cc536252f$var$decodeBinaryHeader;\n/**\n * Merge two or more Headers objects by appending all fields from\n * all inputs to a new Headers object.\n */ function $80645d0cc536252f$var$appendHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers)e.forEach((value, key)=>{\n        h.append(key, value);\n    });\n    return h;\n}\nmodule.exports.appendHeaders = $80645d0cc536252f$var$appendHeaders;\n\n});\n\n\nparcelRequire.register(\"gomUo\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.codeToHttpStatus = module.exports.codeFromHttpStatus = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Determine the Connect error code for the given HTTP status code.\n * See https://connect.build/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $bef0a867f2c16ad8$var$codeFromHttpStatus(httpStatus) {\n    switch(httpStatus){\n        case 400:\n            return $2S2uU.Code.InvalidArgument;\n        case 401:\n            return $2S2uU.Code.Unauthenticated;\n        case 403:\n            return $2S2uU.Code.PermissionDenied;\n        case 404:\n            return $2S2uU.Code.Unimplemented;\n        case 408:\n            return $2S2uU.Code.DeadlineExceeded;\n        case 409:\n            return $2S2uU.Code.Aborted;\n        case 412:\n            return $2S2uU.Code.FailedPrecondition;\n        case 413:\n            return $2S2uU.Code.ResourceExhausted;\n        case 415:\n            return $2S2uU.Code.Internal;\n        case 429:\n            return $2S2uU.Code.Unavailable;\n        case 431:\n            return $2S2uU.Code.ResourceExhausted;\n        case 502:\n            return $2S2uU.Code.Unavailable;\n        case 503:\n            return $2S2uU.Code.Unavailable;\n        case 504:\n            return $2S2uU.Code.Unavailable;\n        default:\n            return $2S2uU.Code.Unknown;\n    }\n}\nmodule.exports.codeFromHttpStatus = $bef0a867f2c16ad8$var$codeFromHttpStatus;\n/**\n * Returns a HTTP status code for the given Connect code.\n * See https://connect.build/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $bef0a867f2c16ad8$var$codeToHttpStatus(code) {\n    switch(code){\n        case $2S2uU.Code.Canceled:\n            return 408; // Request Timeout\n        case $2S2uU.Code.Unknown:\n            return 500; // Internal Server Error\n        case $2S2uU.Code.InvalidArgument:\n            return 400; // Bad Request\n        case $2S2uU.Code.DeadlineExceeded:\n            return 408; // Request Timeout\n        case $2S2uU.Code.NotFound:\n            return 404; // Not Found\n        case $2S2uU.Code.AlreadyExists:\n            return 409; // Conflict\n        case $2S2uU.Code.PermissionDenied:\n            return 403; // Forbidden\n        case $2S2uU.Code.ResourceExhausted:\n            return 429; // Too Many Requests\n        case $2S2uU.Code.FailedPrecondition:\n            return 412; // Precondition Failed\n        case $2S2uU.Code.Aborted:\n            return 409; // Conflict\n        case $2S2uU.Code.OutOfRange:\n            return 400; // Bad Request\n        case $2S2uU.Code.Unimplemented:\n            return 404; // Not Found\n        case $2S2uU.Code.Internal:\n            return 500; // Internal Server Error\n        case $2S2uU.Code.Unavailable:\n            return 503; // Service Unavailable\n        case $2S2uU.Code.DataLoss:\n            return 500; // Internal Server Error\n        case $2S2uU.Code.Unauthenticated:\n            return 401; // Unauthorized\n        default:\n            return 500; // same as CodeUnknown\n    }\n}\nmodule.exports.codeToHttpStatus = $bef0a867f2c16ad8$var$codeToHttpStatus;\n\n});\n\nparcelRequire.register(\"sQNNB\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseTimeout = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n/**\n * Parse a Connect Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $056b930f068290d0$var$parseTimeout(value, maxTimeoutMs) {\n    if (value === null) return {};\n    const results = /^\\d{1,10}$/.exec(value);\n    if (results === null) return {\n        error: new $dbKGs.ConnectError(`protocol error: invalid connect timeout value: ${value}`, $2S2uU.Code.InvalidArgument)\n    };\n    const timeoutMs = parseInt(results[0]);\n    if (timeoutMs > maxTimeoutMs) return {\n        timeoutMs: timeoutMs,\n        error: new $dbKGs.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, $2S2uU.Code.InvalidArgument)\n    };\n    return {\n        timeoutMs: parseInt(results[0])\n    };\n}\nmodule.exports.parseTimeout = $056b930f068290d0$var$parseTimeout;\n\n});\n\nparcelRequire.register(\"im48N\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.paramMessage = module.exports.paramBase64 = module.exports.paramCompression = module.exports.paramEncoding = module.exports.paramConnectVersion = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.paramConnectVersion = \"connect\";\nmodule.exports.paramEncoding = \"encoding\";\nmodule.exports.paramCompression = \"compression\";\nmodule.exports.paramBase64 = \"base64\";\nmodule.exports.paramMessage = \"message\";\n\n});\n\nparcelRequire.register(\"f9Qm8\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.trailerMux = module.exports.trailerDemux = void 0;\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $b0904f194051de55$var$trailerDemux(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key)=>{\n        if (key.toLowerCase().startsWith(\"trailer-\")) t.set(key.substring(8), value);\n        else h.set(key, value);\n    });\n    return [\n        h,\n        t\n    ];\n}\nmodule.exports.trailerDemux = $b0904f194051de55$var$trailerDemux;\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function muxes a header and a trailer into a single Headers object.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $b0904f194051de55$var$trailerMux(header, trailer) {\n    const h = new Headers(header);\n    trailer.forEach((value, key)=>{\n        h.set(`trailer-${key}`, value);\n    });\n    return h;\n}\nmodule.exports.trailerMux = $b0904f194051de55$var$trailerMux;\n\n});\n\nparcelRequire.register(\"lJphl\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.requireProtocolVersionParam = module.exports.requireProtocolVersionHeader = module.exports.protocolVersion = void 0;\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $im48N = parcelRequire(\"im48N\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * The only know value for the header Connect-Protocol-Version.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.protocolVersion = \"1\";\n/**\n * Requires the Connect-Protocol-Version header to be present with the expected\n * value. Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $fd2168c5e4e03618$var$requireProtocolVersionHeader(requestHeader) {\n    const v = requestHeader.get($2vMsJ.headerProtocolVersion);\n    if (v === null) throw new $dbKGs.ConnectError(`missing required header: set ${$2vMsJ.headerProtocolVersion} to \"${module.exports.protocolVersion}\"`, $2S2uU.Code.InvalidArgument);\n    else if (v !== module.exports.protocolVersion) throw new $dbKGs.ConnectError(`${$2vMsJ.headerProtocolVersion} must be \"${module.exports.protocolVersion}\": got \"${v}\"`, $2S2uU.Code.InvalidArgument);\n}\nmodule.exports.requireProtocolVersionHeader = $fd2168c5e4e03618$var$requireProtocolVersionHeader;\n/**\n * Requires the connect query parameter to be present with the expected value.\n * Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $fd2168c5e4e03618$var$requireProtocolVersionParam(queryParams) {\n    const v = queryParams.get($im48N.paramConnectVersion);\n    if (v === null) throw new $dbKGs.ConnectError(`missing required parameter: set ${$im48N.paramConnectVersion} to \"v${module.exports.protocolVersion}\"`, $2S2uU.Code.InvalidArgument);\n    else if (v !== `v${module.exports.protocolVersion}`) throw new $dbKGs.ConnectError(`${$im48N.paramConnectVersion} must be \"v${module.exports.protocolVersion}\": got \"${v}\"`, $2S2uU.Code.InvalidArgument);\n}\nmodule.exports.requireProtocolVersionParam = $fd2168c5e4e03618$var$requireProtocolVersionParam;\n\n});\n\n\nparcelRequire.register(\"ciggp\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $8f33c8137accfad6$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $8f33c8137accfad6$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $8f33c8137accfad6$var$__await ? (this.v = v, this) : new $8f33c8137accfad6$var$__await(v);\n};\nvar $8f33c8137accfad6$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $8f33c8137accfad6$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createTransport = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $kPVNl = parcelRequire(\"kPVNl\");\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $fHJsY = parcelRequire(\"fHJsY\");\n\nvar $f9Qm8 = parcelRequire(\"f9Qm8\");\n\nvar $5z3hl = parcelRequire(\"5z3hl\");\n\nvar $5PCxW = parcelRequire(\"5PCxW\");\n\nvar $iLIBn = parcelRequire(\"iLIBn\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $b1qwC = parcelRequire(\"b1qwC\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $85AEY = parcelRequire(\"85AEY\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n/**\n * Create a Transport for the Connect protocol.\n */ function $8f33c8137accfad6$var$createTransport(opt) {\n    return {\n        async unary (service, method, signal, timeoutMs, header, message) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, $85AEY.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: false,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, $kPVNl.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: message instanceof method.I ? message : new method.I(message)\n                },\n                next: async (req)=>{\n                    var _a;\n                    let requestBody = serialization.getI(opt.useBinaryFormat).serialize(req.message);\n                    if (opt.sendCompression && requestBody.byteLength > opt.compressMinBytes) {\n                        requestBody = await opt.sendCompression.compress(requestBody);\n                        req.header.set($2vMsJ.headerUnaryEncoding, opt.sendCompression.name);\n                    } else req.header.delete($2vMsJ.headerUnaryEncoding);\n                    const useGet = opt.useHttpGet === true && method.idempotency === $hNn7i.MethodIdempotency.NoSideEffects;\n                    let body;\n                    if (useGet) req = (0, $iLIBn.transformConnectPostToGetRequest)(req, requestBody, opt.useBinaryFormat);\n                    else body = (0, $4TIBd.createAsyncIterable)([\n                        requestBody\n                    ]);\n                    const universalResponse = await opt.httpClient({\n                        url: req.url,\n                        method: (_a = req.init.method) !== null && _a !== void 0 ? _a : \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: body\n                    });\n                    const { compression: compression, isUnaryError: isUnaryError, unaryError: unaryError } = (0, $fHJsY.validateResponseWithCompression)(method.kind, opt.acceptCompression, universalResponse.status, universalResponse.header);\n                    const [header, trailer] = (0, $f9Qm8.trailerDemux)(universalResponse.header);\n                    let responseBody = await (0, $4TIBd.pipeTo)(universalResponse.body, (0, $4TIBd.sinkAllBytes)(opt.readMaxBytes, universalResponse.header.get($2vMsJ.headerUnaryContentLength)), {\n                        propagateDownStreamError: false\n                    });\n                    if (compression) responseBody = await compression.decompress(responseBody, opt.readMaxBytes);\n                    if (isUnaryError) throw (0, $5z3hl.errorFromJsonBytes)(responseBody, (0, $b1qwC.appendHeaders)(header, trailer), unaryError);\n                    return {\n                        stream: false,\n                        service: service,\n                        method: method,\n                        header: header,\n                        message: serialization.getO(opt.useBinaryFormat).parse(responseBody),\n                        trailer: trailer\n                    };\n                }\n            });\n        },\n        async stream (service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            const endStreamSerialization = (0, $5PCxW.createEndStreamSerialization)(opt.jsonOptions);\n            return (0, $85AEY.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: true,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $kPVNl.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, $4TIBd.pipe)(input, (0, $4TIBd.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true\n                    })\n                },\n                next: async (req)=>{\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, $4TIBd.pipe)(req.message, (0, $4TIBd.transformNormalizeMessage)(method.I), (0, $4TIBd.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, $4TIBd.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    const { compression: compression } = (0, $fHJsY.validateResponseWithCompression)(method.kind, opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), {\n                        header: uRes.header,\n                        trailer: new Headers(),\n                        message: (0, $4TIBd.pipe)(uRes.body, (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), $5PCxW.endStreamFlag, endStreamSerialization), function(iterable) {\n                            return $8f33c8137accfad6$var$__asyncGenerator(this, arguments, function*() {\n                                var _a, e_1, _b, _c;\n                                let endStreamReceived = false;\n                                try {\n                                    for(var _d = true, iterable_1 = $8f33c8137accfad6$var$__asyncValues(iterable), iterable_1_1; iterable_1_1 = yield $8f33c8137accfad6$var$__await(iterable_1.next()), _a = iterable_1_1.done, !_a;){\n                                        _c = iterable_1_1.value;\n                                        _d = false;\n                                        try {\n                                            const chunk = _c;\n                                            if (chunk.end) {\n                                                if (endStreamReceived) throw new $dbKGs.ConnectError(\"protocol error: received extra EndStreamResponse\", $2S2uU.Code.InvalidArgument);\n                                                endStreamReceived = true;\n                                                if (chunk.value.error) throw chunk.value.error;\n                                                chunk.value.metadata.forEach((value, key)=>res.trailer.set(key, value));\n                                                continue;\n                                            }\n                                            if (endStreamReceived) throw new $dbKGs.ConnectError(\"protocol error: received extra message after EndStreamResponse\", $2S2uU.Code.InvalidArgument);\n                                            yield yield $8f33c8137accfad6$var$__await(chunk.value);\n                                        } finally{\n                                            _d = true;\n                                        }\n                                    }\n                                } catch (e_1_1) {\n                                    e_1 = {\n                                        error: e_1_1\n                                    };\n                                } finally{\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_1.return)) yield $8f33c8137accfad6$var$__await(_b.call(iterable_1));\n                                    } finally{\n                                        if (e_1) throw e_1.error;\n                                    }\n                                }\n                                if (!endStreamReceived) throw new $dbKGs.ConnectError(\"protocol error: missing EndStreamResponse\", $2S2uU.Code.InvalidArgument);\n                            });\n                        }, {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    return res;\n                }\n            });\n        }\n    };\n}\nmodule.exports.createTransport = $8f33c8137accfad6$var$createTransport;\n\n});\nparcelRequire.register(\"kPVNl\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.requestHeaderWithCompression = module.exports.requestHeader = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $lJphl = parcelRequire(\"lJphl\");\n\nvar $91teX = parcelRequire(\"91teX\");\n/**\n * Creates headers for a Connect request.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $f2b566ef41ecece4$var$requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    if (timeoutMs !== undefined) result.set($2vMsJ.headerTimeout, `${timeoutMs}`);\n    result.set($2vMsJ.headerContentType, methodKind == $hNn7i.MethodKind.Unary ? useBinaryFormat ? $91teX.contentTypeUnaryProto : $91teX.contentTypeUnaryJson : useBinaryFormat ? $91teX.contentTypeStreamProto : $91teX.contentTypeStreamJson);\n    result.set($2vMsJ.headerProtocolVersion, $lJphl.protocolVersion);\n    return result;\n}\nmodule.exports.requestHeader = $f2b566ef41ecece4$var$requestHeader;\n/**\n * Creates headers for a Connect request with compression.\n *\n * Note that we always set the Content-Encoding header for unary methods.\n * It is up to the caller to decide whether to apply compression - and remove\n * the header if compression is not used, for example because the payload is\n * too small to make compression effective.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $f2b566ef41ecece4$var$requestHeaderWithCompression(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = $f2b566ef41ecece4$var$requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        const name = methodKind == $hNn7i.MethodKind.Unary ? $2vMsJ.headerUnaryEncoding : $2vMsJ.headerStreamEncoding;\n        result.set(name, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        const name = methodKind == $hNn7i.MethodKind.Unary ? $2vMsJ.headerUnaryAcceptEncoding : $2vMsJ.headerStreamAcceptEncoding;\n        result.set(name, acceptCompression.map((c)=>c.name).join(\",\"));\n    }\n    return result;\n}\nmodule.exports.requestHeaderWithCompression = $f2b566ef41ecece4$var$requestHeaderWithCompression;\n\n});\n\nparcelRequire.register(\"fHJsY\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.validateResponseWithCompression = module.exports.validateResponse = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $gomUo = parcelRequire(\"gomUo\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $91teX = parcelRequire(\"91teX\");\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n/**\n * Validates response status and header for the Connect protocol.\n * Throws a ConnectError if the header indicates an error, or if\n * the content type is unexpected, with the following exception:\n * For unary RPCs with an HTTP error status, this returns an error\n * derived from the HTTP status instead of throwing it, giving an\n * implementation a chance to parse a Connect error from the wire.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $b6ee23d341f4cbe8$var$validateResponse(methodKind, status, headers) {\n    const mimeType = headers.get(\"Content-Type\");\n    const parsedType = (0, $91teX.parseContentType)(mimeType);\n    if (status !== 200) {\n        const errorFromStatus = new $dbKGs.ConnectError(`HTTP ${status}`, (0, $gomUo.codeFromHttpStatus)(status), headers);\n        // If parsedType is defined and it is not binary, then this is a unary JSON response\n        if (methodKind == $hNn7i.MethodKind.Unary && parsedType && !parsedType.binary) return {\n            isUnaryError: true,\n            unaryError: errorFromStatus\n        };\n        throw errorFromStatus;\n    }\n    return {\n        isUnaryError: false\n    };\n}\nmodule.exports.validateResponse = $b6ee23d341f4cbe8$var$validateResponse;\n/**\n * Validates response status and header for the Connect protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * @private\n */ function $b6ee23d341f4cbe8$var$validateResponseWithCompression(methodKind, acceptCompression, status, headers) {\n    let compression;\n    const encoding = headers.get(methodKind == $hNn7i.MethodKind.Unary ? $2vMsJ.headerUnaryEncoding : $2vMsJ.headerStreamEncoding);\n    if (encoding != null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c)=>c.name === encoding);\n        if (!compression) throw new $dbKGs.ConnectError(`unsupported response encoding \"${encoding}\"`, $2S2uU.Code.InvalidArgument, headers);\n    }\n    return Object.assign({\n        compression: compression\n    }, $b6ee23d341f4cbe8$var$validateResponse(methodKind, status, headers));\n}\nmodule.exports.validateResponseWithCompression = $b6ee23d341f4cbe8$var$validateResponseWithCompression;\n\n});\n\nparcelRequire.register(\"iLIBn\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.transformConnectPostToGetRequest = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $lJphl = parcelRequire(\"lJphl\");\nconst $da9f36cca8d50374$var$contentTypePrefix = \"application/\";\nfunction $da9f36cca8d50374$var$encodeMessageForUrl(message, useBase64) {\n    if (useBase64) // TODO(jchadwick-buf): Three regex replaces seems excessive.\n    // Can we make protoBase64.enc more flexible?\n    return $hNn7i.protoBase64.enc(message).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    else return encodeURIComponent(new TextDecoder().decode(message));\n}\n/**\n * @private Internal code, does not follow semantic versioning.\n */ function $da9f36cca8d50374$var$transformConnectPostToGetRequest(request, message, useBase64) {\n    let query = `?connect=v${$lJphl.protocolVersion}`;\n    const contentType = request.header.get($2vMsJ.headerContentType);\n    if ((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf($da9f36cca8d50374$var$contentTypePrefix)) === 0) query += \"&encoding=\" + encodeURIComponent(contentType.slice($da9f36cca8d50374$var$contentTypePrefix.length));\n    const compression = request.header.get($2vMsJ.headerUnaryEncoding);\n    if (compression !== null && compression !== \"identity\") {\n        query += \"&compression=\" + encodeURIComponent(compression);\n        // Force base64 for compressed payloads.\n        useBase64 = true;\n    }\n    if (useBase64) query += \"&base64=1\";\n    query += \"&message=\" + $da9f36cca8d50374$var$encodeMessageForUrl(message, useBase64);\n    const url = request.url + query;\n    // Omit headers that are not used for unary GET requests.\n    const header = new Headers(request.header);\n    header.delete($2vMsJ.headerProtocolVersion);\n    header.delete($2vMsJ.headerContentType);\n    header.delete($2vMsJ.headerUnaryContentLength);\n    header.delete($2vMsJ.headerUnaryEncoding);\n    header.delete($2vMsJ.headerUnaryAcceptEncoding);\n    return Object.assign(Object.assign({}, request), {\n        init: Object.assign(Object.assign({}, request.init), {\n            method: \"GET\"\n        }),\n        url: url,\n        header: header\n    });\n}\nmodule.exports.transformConnectPostToGetRequest = $da9f36cca8d50374$var$transformConnectPostToGetRequest;\n\n});\n\n\n\nparcelRequire.register(\"lVcsM\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $ff5896c2885feba8$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $ff5896c2885feba8$var$__exportStar = module.exports && module.exports.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) $ff5896c2885feba8$var$__createBinding(exports1, m, p);\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.grpcStatusOk = module.exports.validateTrailer = module.exports.setTrailerStatus = module.exports.parseTimeout = module.exports.createTrailerSerialization = module.exports.trailerSerialize = module.exports.trailerParse = module.exports.trailerFlag = module.exports.validateResponseWithCompression = module.exports.validateResponse = module.exports.contentTypeJson = module.exports.contentTypeProto = module.exports.contentTypeRegExp = module.exports.parseContentType = module.exports.requestHeaderWithCompression = module.exports.requestHeader = module.exports.createTransport = module.exports.createHandlerFactory = void 0;\n\nvar $dNf8z = parcelRequire(\"dNf8z\");\nObject.defineProperty(module.exports, \"createHandlerFactory\", {\n    enumerable: true,\n    get: function() {\n        return $dNf8z.createHandlerFactory;\n    }\n});\n\nvar $5OJoL = parcelRequire(\"5OJoL\");\nObject.defineProperty(module.exports, \"createTransport\", {\n    enumerable: true,\n    get: function() {\n        return $5OJoL.createTransport;\n    }\n});\n\nvar $2PueP = parcelRequire(\"2PueP\");\nObject.defineProperty(module.exports, \"requestHeader\", {\n    enumerable: true,\n    get: function() {\n        return $2PueP.requestHeader;\n    }\n});\nObject.defineProperty(module.exports, \"requestHeaderWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $2PueP.requestHeaderWithCompression;\n    }\n});\n\nvar $eqULm = parcelRequire(\"eqULm\");\nObject.defineProperty(module.exports, \"parseContentType\", {\n    enumerable: true,\n    get: function() {\n        return $eqULm.parseContentType;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeRegExp\", {\n    enumerable: true,\n    get: function() {\n        return $eqULm.contentTypeRegExp;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeProto\", {\n    enumerable: true,\n    get: function() {\n        return $eqULm.contentTypeProto;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeJson\", {\n    enumerable: true,\n    get: function() {\n        return $eqULm.contentTypeJson;\n    }\n});\n\nvar $3AVUK = parcelRequire(\"3AVUK\");\nObject.defineProperty(module.exports, \"validateResponse\", {\n    enumerable: true,\n    get: function() {\n        return $3AVUK.validateResponse;\n    }\n});\nObject.defineProperty(module.exports, \"validateResponseWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $3AVUK.validateResponseWithCompression;\n    }\n});\n\nvar $butBH = parcelRequire(\"butBH\");\nObject.defineProperty(module.exports, \"trailerFlag\", {\n    enumerable: true,\n    get: function() {\n        return $butBH.trailerFlag;\n    }\n});\nObject.defineProperty(module.exports, \"trailerParse\", {\n    enumerable: true,\n    get: function() {\n        return $butBH.trailerParse;\n    }\n});\nObject.defineProperty(module.exports, \"trailerSerialize\", {\n    enumerable: true,\n    get: function() {\n        return $butBH.trailerSerialize;\n    }\n});\nObject.defineProperty(module.exports, \"createTrailerSerialization\", {\n    enumerable: true,\n    get: function() {\n        return $butBH.createTrailerSerialization;\n    }\n});\n\nvar $lOZg6 = parcelRequire(\"lOZg6\");\nObject.defineProperty(module.exports, \"parseTimeout\", {\n    enumerable: true,\n    get: function() {\n        return $lOZg6.parseTimeout;\n    }\n});\nObject.defineProperty(module.exports, \"setTrailerStatus\", {\n    enumerable: true,\n    get: function() {\n        return $lOZg6.setTrailerStatus;\n    }\n});\nObject.defineProperty(module.exports, \"validateTrailer\", {\n    enumerable: true,\n    get: function() {\n        return $lOZg6.validateTrailer;\n    }\n});\nObject.defineProperty(module.exports, \"grpcStatusOk\", {\n    enumerable: true,\n    get: function() {\n        return $lOZg6.grpcStatusOk;\n    }\n});\n\n$ff5896c2885feba8$var$__exportStar((parcelRequire(\"bAe87\")), module.exports);\n\n});\nparcelRequire.register(\"dNf8z\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createHandlerFactory = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\n\nvar $butBH = parcelRequire(\"butBH\");\n\nvar $bAe87 = parcelRequire(\"bAe87\");\n\nvar $eqULm = parcelRequire(\"eqULm\");\n\nvar $cvlyH = parcelRequire(\"cvlyH\");\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $cFI6K = parcelRequire(\"cFI6K\");\n\nvar $dHfIs = parcelRequire(\"dHfIs\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $kPxXG = parcelRequire(\"kPxXG\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n\nvar $9FNZj = parcelRequire(\"9FNZj\");\n\nvar $5cbVl = parcelRequire(\"5cbVl\");\nconst $a0ab97ea14ded1e8$var$protocolName = \"grpc-web\";\nconst $a0ab97ea14ded1e8$var$methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC-web handlers.\n */ function $a0ab97ea14ded1e8$var$createHandlerFactory(options) {\n    const opt = (0, $9FNZj.validateUniversalHandlerOptions)(options);\n    const trailerSerialization = (0, $butBH.createTrailerSerialization)();\n    function fact(spec) {\n        const h = $a0ab97ea14ded1e8$var$createHandler(opt, trailerSerialization, spec);\n        return Object.assign(h, {\n            protocolNames: [\n                $a0ab97ea14ded1e8$var$protocolName\n            ],\n            allowedMethods: [\n                $a0ab97ea14ded1e8$var$methodPost\n            ],\n            supportedContentType: (0, $dHfIs.contentTypeMatcher)($eqULm.contentTypeRegExp),\n            requestPath: (0, $3xity.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method\n        });\n    }\n    fact.protocolName = $a0ab97ea14ded1e8$var$protocolName;\n    return fact;\n}\nmodule.exports.createHandlerFactory = $a0ab97ea14ded1e8$var$createHandlerFactory;\nfunction $a0ab97ea14ded1e8$var$createHandler(opt, trailerSerialization, spec) {\n    const serialization = (0, $3mgpQ.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0, $5cbVl.assertByteStreamRequest)(req);\n        const type = (0, $eqULm.parseContentType)(req.header.get($bAe87.headerContentType));\n        if (type == undefined || type.text) return $5cbVl.uResponseUnsupportedMediaType;\n        if (req.method !== $a0ab97ea14ded1e8$var$methodPost) return $5cbVl.uResponseMethodNotAllowed;\n        const timeout = (0, $cvlyH.parseTimeout)(req.header.get($bAe87.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, $4Jmw5.createHandlerContext)(Object.assign(Object.assign({}, spec), {\n            requestMethod: req.method,\n            protocolName: $a0ab97ea14ded1e8$var$protocolName,\n            timeoutMs: timeout.timeoutMs,\n            shutdownSignal: opt.shutdownSignal,\n            requestSignal: req.signal,\n            requestHeader: req.header,\n            responseHeader: {\n                [$bAe87.headerContentType]: type.binary ? $eqULm.contentTypeProto : $eqULm.contentTypeJson\n            },\n            responseTrailer: {\n                [$bAe87.headerGrpcStatus]: $7x6hp.grpcStatusOk\n            }\n        }));\n        const compression = (0, $cFI6K.compressionNegotiate)(opt.acceptCompression, req.header.get($bAe87.headerEncoding), req.header.get($bAe87.headerAcceptEncoding), $bAe87.headerAcceptEncoding);\n        if (compression.response) context.responseHeader.set($bAe87.headerEncoding, compression.response.name);\n        const outputIt = (0, $4TIBd.pipe)(req.body, (0, $4TIBd.transformPrepend)(()=>{\n            // raise compression error to serialize it as a trailer status\n            if (compression.error) throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) throw timeout.error;\n            return undefined;\n        }), (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getI(type.binary), $butBH.trailerFlag), (0, $kPxXG.transformInvokeImplementation)(spec, context), (0, $4TIBd.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, $4TIBd.transformCatchFinally)((e)=>{\n            context.abort();\n            if (e instanceof $dbKGs.ConnectError) (0, $7x6hp.setTrailerStatus)(context.responseTrailer, e);\n            else if (e !== undefined) (0, $7x6hp.setTrailerStatus)(context.responseTrailer, new $dbKGs.ConnectError(\"internal error\", $2S2uU.Code.Internal, undefined, undefined, e));\n            return {\n                flags: $butBH.trailerFlag,\n                data: trailerSerialization.serialize(context.responseTrailer)\n            };\n        }), (0, $4TIBd.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)());\n        return Object.assign(Object.assign({}, $5cbVl.uResponseOk), {\n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, $4TIBd.untilFirst)(outputIt),\n            header: context.responseHeader\n        });\n    };\n}\n\n});\nparcelRequire.register(\"butBH\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createTrailerSerialization = module.exports.trailerSerialize = module.exports.trailerParse = module.exports.trailerFlag = void 0;\n/**\n * trailerFlag indicates that the data in a EnvelopedMessage\n * is a set of trailers of the gRPC-web protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.trailerFlag = 128;\n/**\n * Parse a gRPC-web trailer, a set of header fields separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $85d9766512bac2be$var$trailerParse(data) {\n    const headers = new Headers();\n    const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n    for (const line of lines){\n        if (line === \"\") continue;\n        const i = line.indexOf(\":\");\n        if (i > 0) {\n            const name = line.substring(0, i).trim();\n            const value = line.substring(i + 1).trim();\n            headers.append(name, value);\n        }\n    }\n    return headers;\n}\nmodule.exports.trailerParse = $85d9766512bac2be$var$trailerParse;\n/**\n * Serialize a Headers object as a gRPC-web trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $85d9766512bac2be$var$trailerSerialize(trailer) {\n    const lines = [];\n    trailer.forEach((value, key)=>{\n        lines.push(`${key}: ${value}\\r\\n`);\n    });\n    return new TextEncoder().encode(lines.join(\"\"));\n}\nmodule.exports.trailerSerialize = $85d9766512bac2be$var$trailerSerialize;\n/**\n * Create a Serialization object that serializes a gRPC-web trailer, a Headers\n * object that is serialized as a set of header fields, separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $85d9766512bac2be$var$createTrailerSerialization() {\n    return {\n        serialize: $85d9766512bac2be$var$trailerSerialize,\n        parse: $85d9766512bac2be$var$trailerParse\n    };\n}\nmodule.exports.createTrailerSerialization = $85d9766512bac2be$var$createTrailerSerialization;\n\n});\n\nparcelRequire.register(\"eqULm\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseContentType = module.exports.contentTypeJson = module.exports.contentTypeProto = module.exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid gRPC-web Content-Type header value.\n * Note that this includes application/grpc-web-text with the additional base64\n * encoding.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.contentTypeRegExp = /^application\\/grpc-web(-text)?(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nmodule.exports.contentTypeProto = \"application/grpc-web+proto\";\nmodule.exports.contentTypeJson = \"application/grpc-web+json\";\n/**\n * Parse a gRPC-web Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $a81f86523083220c$var$parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(module.exports.contentTypeRegExp);\n    if (!match) return undefined;\n    const text = !!match[1];\n    const binary = !match[2];\n    return {\n        text: text,\n        binary: binary\n    };\n}\nmodule.exports.parseContentType = $a81f86523083220c$var$parseContentType;\n\n});\n\nparcelRequire.register(\"cvlyH\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseTimeout = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n/**\n * Parse a gRPC Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $91a91a668c1e828f$var$parseTimeout(value, maxTimeoutMs) {\n    if (value === null) return {};\n    const results = /^(\\d{1,8})([HMSmun])$/.exec(value);\n    if (results === null) return {\n        error: new $dbKGs.ConnectError(`protocol error: invalid grpc timeout value: ${value}`, $2S2uU.Code.InvalidArgument)\n    };\n    const unitToMultiplicand = {\n        H: 3600000,\n        M: 60000,\n        S: 1000,\n        m: 1,\n        u: 0.001,\n        n: 0.000001\n    };\n    const timeoutMs = unitToMultiplicand[results[2]] * parseInt(results[1]);\n    if (timeoutMs > maxTimeoutMs) return {\n        timeoutMs: timeoutMs,\n        error: new $dbKGs.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, $2S2uU.Code.InvalidArgument)\n    };\n    return {\n        timeoutMs: timeoutMs\n    };\n}\nmodule.exports.parseTimeout = $91a91a668c1e828f$var$parseTimeout;\n\n});\n\nparcelRequire.register(\"7x6hp\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.findTrailerError = module.exports.setTrailerStatus = module.exports.grpcStatusOk = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $1xuzX = parcelRequire(\"1xuzX\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $b1qwC = parcelRequire(\"b1qwC\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\n/**\n * The value of the Grpc-Status header or trailer in case of success.\n * Used by the gRPC and gRPC-web protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.grpcStatusOk = \"0\";\n/**\n * Sets the fields \"grpc-status\" and \"grpc-message\" in the given\n * Headers object.\n * If an error is given and contains error details, the function\n * will also set the field \"grpc-status-details-bin\" with an encoded\n * google.rpc.Status message including the error details.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $57c07c7e2f7478b3$var$setTrailerStatus(target, error) {\n    if (error) {\n        target.set($d5YNv.headerGrpcStatus, error.code.toString(10));\n        target.set($d5YNv.headerGrpcMessage, encodeURIComponent(error.rawMessage));\n        if (error.details.length > 0) {\n            const status = new $1xuzX.Status({\n                code: error.code,\n                message: error.rawMessage,\n                details: error.details.map((value)=>value instanceof $hNn7i.Message ? $hNn7i.Any.pack(value) : new $hNn7i.Any({\n                        typeUrl: `type.googleapis.com/${value.type}`,\n                        value: value.value\n                    }))\n            });\n            target.set($d5YNv.headerStatusDetailsBin, (0, $b1qwC.encodeBinaryHeader)(status));\n        }\n    } else target.set($d5YNv.headerGrpcStatus, module.exports.grpcStatusOk.toString());\n    return target;\n}\nmodule.exports.setTrailerStatus = $57c07c7e2f7478b3$var$setTrailerStatus;\n/**\n * Find an error status in the given Headers object, which can be either\n * a trailer, or a header (as allowed for so-called trailers-only responses).\n * The field \"grpc-status-details-bin\" is inspected, and if not present,\n * the fields \"grpc-status\" and \"grpc-message\" are used.\n * Returns an error only if the gRPC status code is > 0.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $57c07c7e2f7478b3$var$findTrailerError(headerOrTrailer) {\n    // TODO\n    // let code: Code;\n    // let message: string = \"\";\n    var _a;\n    // Prefer the protobuf-encoded data to the grpc-status header.\n    const statusBytes = headerOrTrailer.get($d5YNv.headerStatusDetailsBin);\n    if (statusBytes != null) {\n        const status = (0, $b1qwC.decodeBinaryHeader)(statusBytes, $1xuzX.Status);\n        if (status.code == 0) return undefined;\n        const error = new $dbKGs.ConnectError(status.message, status.code, headerOrTrailer);\n        error.details = status.details.map((any)=>({\n                type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n                value: any.value\n            }));\n        return error;\n    }\n    const grpcStatus = headerOrTrailer.get($d5YNv.headerGrpcStatus);\n    if (grpcStatus != null) {\n        if (grpcStatus === module.exports.grpcStatusOk) return undefined;\n        const code = parseInt(grpcStatus, 10);\n        if (code in $2S2uU.Code) return new $dbKGs.ConnectError(decodeURIComponent((_a = headerOrTrailer.get($d5YNv.headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n        return new $dbKGs.ConnectError(`invalid grpc-status: ${grpcStatus}`, $2S2uU.Code.Internal, headerOrTrailer);\n    }\n    return undefined;\n}\nmodule.exports.findTrailerError = $57c07c7e2f7478b3$var$findTrailerError;\n\n});\nparcelRequire.register(\"1xuzX\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.Status = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n/**\n * The `Status` type defines a logical error model that is suitable for different\n * programming environments, including REST APIs and RPC APIs. It is used by\n * [gRPC](https://github.com/grpc). The error model is designed to be:\n *\n * - Simple to use and understand for most users\n * - Flexible enough to meet unexpected needs\n *\n * # Overview\n *\n * The `Status` message contains three pieces of data: error code, error message,\n * and error details. The error code should be an enum value of\n * [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\n * error message should be a developer-facing English message that helps\n * developers *understand* and *resolve* the error. If a localized user-facing\n * error message is needed, put the localized message in the error details or\n * localize it in the client. The optional error details may contain arbitrary\n * information about the error. There is a predefined set of error detail types\n * in the package `google.rpc` which can be used for common error conditions.\n *\n * # Language mapping\n *\n * The `Status` message is the logical representation of the error model, but it\n * is not necessarily the actual wire format. When the `Status` message is\n * exposed in different client libraries and different wire protocols, it can be\n * mapped differently. For example, it will likely be mapped to some exceptions\n * in Java, but more likely mapped to some error codes in C.\n *\n * # Other uses\n *\n * The error model and the `Status` message can be used in a variety of\n * environments, either with or without APIs, to provide a\n * consistent developer experience across different environments.\n *\n * Example uses of this error model include:\n *\n * - Partial errors. If a service needs to return partial errors to the client,\n *     it may embed the `Status` in the normal response to indicate the partial\n *     errors.\n *\n * - Workflow errors. A typical workflow has multiple steps. Each step may\n *     have a `Status` message for error reporting purpose.\n *\n * - Batch operations. If a client uses batch request and batch response, the\n *     `Status` message should be used directly inside batch response, one for\n *     each error sub-response.\n *\n * - Asynchronous operations. If an API call embeds asynchronous operation\n *     results in its response, the status of those operations should be\n *     represented directly using the `Status` message.\n *\n * - Logging. If some API errors are stored in logs, the message `Status` could\n *     be used directly after any stripping needed for security/privacy reasons.\n *\n * @generated from message google.rpc.Status\n */ class $11f097e0fd3ec76c$var$Status extends $hNn7i.Message {\n    constructor(data){\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */ this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */ this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There will be a\n         * common set of message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */ this.details = [];\n        $hNn7i.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new $11f097e0fd3ec76c$var$Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $11f097e0fd3ec76c$var$Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $11f097e0fd3ec76c$var$Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return $hNn7i.proto3.util.equals($11f097e0fd3ec76c$var$Status, a, b);\n    }\n}\n$11f097e0fd3ec76c$var$Status.runtime = $hNn7i.proto3;\n$11f097e0fd3ec76c$var$Status.typeName = \"google.rpc.Status\";\n$11f097e0fd3ec76c$var$Status.fields = $hNn7i.proto3.util.newFieldList(()=>[\n        {\n            no: 1,\n            name: \"code\",\n            kind: \"scalar\",\n            T: 5 /* ScalarType.INT32 */ \n        },\n        {\n            no: 2,\n            name: \"message\",\n            kind: \"scalar\",\n            T: 9 /* ScalarType.STRING */ \n        },\n        {\n            no: 3,\n            name: \"details\",\n            kind: \"message\",\n            T: $hNn7i.Any,\n            repeated: true\n        }\n    ]);\nmodule.exports.Status = $11f097e0fd3ec76c$var$Status;\n\n});\n\n\n\nparcelRequire.register(\"5OJoL\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $43c4d67102148167$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $43c4d67102148167$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $43c4d67102148167$var$__await ? (this.v = v, this) : new $43c4d67102148167$var$__await(v);\n};\nvar $43c4d67102148167$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $43c4d67102148167$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createTransport = void 0;\n\nvar $lwDrP = parcelRequire(\"lwDrP\");\n\nvar $2PueP = parcelRequire(\"2PueP\");\n\nvar $3AVUK = parcelRequire(\"3AVUK\");\n\nvar $butBH = parcelRequire(\"butBH\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $85AEY = parcelRequire(\"85AEY\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n/**\n * Create a Transport for the gRPC-web protocol.\n */ function $43c4d67102148167$var$createTransport(opt) {\n    return {\n        async unary (service, method, signal, timeoutMs, header, message) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, $85AEY.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: false,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, $2PueP.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: message instanceof method.I ? message : new method.I(message)\n                },\n                next: async (req)=>{\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, $4TIBd.pipe)((0, $4TIBd.createAsyncIterable)([\n                            req.message\n                        ]), (0, $4TIBd.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, $4TIBd.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    const { compression: compression } = (0, $3AVUK.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const { trailer: trailer, message: message } = await (0, $4TIBd.pipeTo)(uRes.body, (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), $butBH.trailerFlag, (0, $butBH.createTrailerSerialization)()), async (iterable)=>{\n                        var _a, e_1, _b, _c;\n                        let message;\n                        let trailer;\n                        try {\n                            for(var _d = true, iterable_1 = $43c4d67102148167$var$__asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;){\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                try {\n                                    const env = _c;\n                                    if (env.end) {\n                                        if (trailer !== undefined) throw new $dbKGs.ConnectError(\"protocol error: received extra trailer\", $2S2uU.Code.InvalidArgument);\n                                        trailer = env.value;\n                                    } else {\n                                        if (message !== undefined) throw new $dbKGs.ConnectError(\"protocol error: received extra output message for unary method\", $2S2uU.Code.InvalidArgument);\n                                        message = env.value;\n                                    }\n                                } finally{\n                                    _d = true;\n                                }\n                            }\n                        } catch (e_1_1) {\n                            e_1 = {\n                                error: e_1_1\n                            };\n                        } finally{\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            } finally{\n                                if (e_1) throw e_1.error;\n                            }\n                        }\n                        return {\n                            trailer: trailer,\n                            message: message\n                        };\n                    }, {\n                        propagateDownStreamError: false\n                    });\n                    if (trailer === undefined) throw new $dbKGs.ConnectError(\"protocol error: missing trailer\", $2S2uU.Code.InvalidArgument);\n                    (0, $lwDrP.validateTrailer)(trailer);\n                    if (message === undefined) throw new $dbKGs.ConnectError(\"protocol error: missing output message for unary method\", $2S2uU.Code.InvalidArgument);\n                    return {\n                        stream: false,\n                        service: service,\n                        method: method,\n                        header: uRes.header,\n                        message: message,\n                        trailer: trailer\n                    };\n                }\n            });\n        },\n        async stream (service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return (0, $85AEY.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: true,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $2PueP.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, $4TIBd.pipe)(input, (0, $4TIBd.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true\n                    })\n                },\n                next: async (req)=>{\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, $4TIBd.pipe)(req.message, (0, $4TIBd.transformNormalizeMessage)(method.I), (0, $4TIBd.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, $4TIBd.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    const { compression: compression, foundStatus: foundStatus } = (0, $3AVUK.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), {\n                        header: uRes.header,\n                        trailer: new Headers(),\n                        message: (0, $4TIBd.pipe)(uRes.body, (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), $butBH.trailerFlag, (0, $butBH.createTrailerSerialization)()), function(iterable) {\n                            return $43c4d67102148167$var$__asyncGenerator(this, arguments, function*() {\n                                var _a, e_2, _b, _c;\n                                if (foundStatus) {\n                                    // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                                    // response (a response without a body and no trailers).\n                                    //\n                                    // The spec seems to disallow a trailers-only response for status 0 - we are\n                                    // lenient and only verify that the body is empty.\n                                    //\n                                    // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                                    // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                                    const r = yield $43c4d67102148167$var$__await(iterable[Symbol.asyncIterator]().next());\n                                    if (r.done !== true) throw new $dbKGs.ConnectError(\"protocol error: extra data for trailers-only\", $2S2uU.Code.InvalidArgument);\n                                    return yield $43c4d67102148167$var$__await(void 0);\n                                }\n                                let trailerReceived = false;\n                                try {\n                                    for(var _d = true, iterable_2 = $43c4d67102148167$var$__asyncValues(iterable), iterable_2_1; iterable_2_1 = yield $43c4d67102148167$var$__await(iterable_2.next()), _a = iterable_2_1.done, !_a;){\n                                        _c = iterable_2_1.value;\n                                        _d = false;\n                                        try {\n                                            const chunk = _c;\n                                            if (chunk.end) {\n                                                if (trailerReceived) throw new $dbKGs.ConnectError(\"protocol error: received extra trailer\", $2S2uU.Code.InvalidArgument);\n                                                trailerReceived = true;\n                                                (0, $lwDrP.validateTrailer)(chunk.value);\n                                                chunk.value.forEach((value, key)=>res.trailer.set(key, value));\n                                                continue;\n                                            }\n                                            if (trailerReceived) throw new $dbKGs.ConnectError(\"protocol error: received extra message after trailer\", $2S2uU.Code.InvalidArgument);\n                                            yield yield $43c4d67102148167$var$__await(chunk.value);\n                                        } finally{\n                                            _d = true;\n                                        }\n                                    }\n                                } catch (e_2_1) {\n                                    e_2 = {\n                                        error: e_2_1\n                                    };\n                                } finally{\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_2.return)) yield $43c4d67102148167$var$__await(_b.call(iterable_2));\n                                    } finally{\n                                        if (e_2) throw e_2.error;\n                                    }\n                                }\n                                if (!trailerReceived) throw new $dbKGs.ConnectError(\"protocol error: missing trailer\", $2S2uU.Code.InvalidArgument);\n                            });\n                        }, {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    return res;\n                }\n            });\n        }\n    };\n}\nmodule.exports.createTransport = $43c4d67102148167$var$createTransport;\n\n});\nparcelRequire.register(\"lwDrP\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.validateTrailer = void 0;\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\n/**\n * Validates a trailer for the gRPC and the gRPC-web protocol.\n * Throws a ConnectError if the trailer contains an error status.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $fabb2fa59cb0ce56$var$validateTrailer(trailer) {\n    const err = (0, $7x6hp.findTrailerError)(trailer);\n    if (err) throw err;\n}\nmodule.exports.validateTrailer = $fabb2fa59cb0ce56$var$validateTrailer;\n\n});\n\nparcelRequire.register(\"2PueP\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.requestHeaderWithCompression = module.exports.requestHeader = void 0;\n\nvar $bAe87 = parcelRequire(\"bAe87\");\n\nvar $eqULm = parcelRequire(\"eqULm\");\n/**\n * Creates headers for a gRPC-web request.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $20f7ccddee2fb6c6$var$requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    // Note that we do not support the grpc-web-text format.\n    // https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md#protocol-differences-vs-grpc-over-http2\n    result.set($bAe87.headerContentType, useBinaryFormat ? $eqULm.contentTypeProto : $eqULm.contentTypeJson);\n    result.set($bAe87.headerXGrpcWeb, \"1\");\n    // Note that we do not comply with recommended structure for the\n    // user-agent string.\n    // https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set($bAe87.headerXUserAgent, \"@bufbuild/connect-web\");\n    if (timeoutMs !== undefined) result.set($bAe87.headerTimeout, `${timeoutMs}m`);\n    return result;\n}\nmodule.exports.requestHeader = $20f7ccddee2fb6c6$var$requestHeader;\n/**\n * Creates headers for a gRPC-web request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $20f7ccddee2fb6c6$var$requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = $20f7ccddee2fb6c6$var$requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) result.set($bAe87.headerEncoding, sendCompression.name);\n    if (acceptCompression.length > 0) result.set($bAe87.headerAcceptEncoding, acceptCompression.map((c)=>c.name).join(\",\"));\n    return result;\n}\nmodule.exports.requestHeaderWithCompression = $20f7ccddee2fb6c6$var$requestHeaderWithCompression;\n\n});\n\nparcelRequire.register(\"3AVUK\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.validateResponseWithCompression = module.exports.validateResponse = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $bAe87 = parcelRequire(\"bAe87\");\n\nvar $hRSmW = parcelRequire(\"hRSmW\");\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\n/**\n * Validates response status and header for the gRPC-web protocol.\n *\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $29e1a875c1633d15$var$validateResponse(status, headers) {\n    var _a;\n    // For compatibility with the `grpc-web` package, we treat all HTTP status\n    // codes in the 200 range as valid, not just HTTP 200.\n    if (status >= 200 && status < 300) {\n        const err = (0, $7x6hp.findTrailerError)(headers);\n        if (err) throw err;\n        return {\n            foundStatus: headers.has($bAe87.headerGrpcStatus)\n        };\n    }\n    throw new $dbKGs.ConnectError(decodeURIComponent((_a = headers.get($bAe87.headerGrpcMessage)) !== null && _a !== void 0 ? _a : `HTTP ${status}`), (0, $hRSmW.codeFromHttpStatus)(status), headers);\n}\nmodule.exports.validateResponse = $29e1a875c1633d15$var$validateResponse;\n/**\n * Validates response status and header for the gRPC-web protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $29e1a875c1633d15$var$validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus: foundStatus } = $29e1a875c1633d15$var$validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get($bAe87.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c)=>c.name === encoding);\n        if (!compression) throw new $dbKGs.ConnectError(`unsupported response encoding \"${encoding}\"`, $2S2uU.Code.InvalidArgument, headers);\n    }\n    return {\n        foundStatus: foundStatus,\n        compression: compression\n    };\n}\nmodule.exports.validateResponseWithCompression = $29e1a875c1633d15$var$validateResponseWithCompression;\n\n});\nparcelRequire.register(\"hRSmW\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.codeFromHttpStatus = void 0;\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n/**\n * Determine the gRPC-web error code for the given HTTP status code.\n * See https://github.com/grpc/grpc/blob/master/doc/http-grpc-status-mapping.md.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $d0218f73d067f9a5$var$codeFromHttpStatus(httpStatus) {\n    switch(httpStatus){\n        case 400:\n            return $2S2uU.Code.Internal;\n        case 401:\n            return $2S2uU.Code.Unauthenticated;\n        case 403:\n            return $2S2uU.Code.PermissionDenied;\n        case 404:\n            return $2S2uU.Code.Unimplemented;\n        case 429:\n            return $2S2uU.Code.Unavailable;\n        case 502:\n            return $2S2uU.Code.Unavailable;\n        case 503:\n            return $2S2uU.Code.Unavailable;\n        case 504:\n            return $2S2uU.Code.Unavailable;\n        default:\n            // 200 is UNKNOWN because there should be a grpc-status in case of truly OK response.\n            return $2S2uU.Code.Unknown;\n    }\n}\nmodule.exports.codeFromHttpStatus = $d0218f73d067f9a5$var$codeFromHttpStatus;\n\n});\n\n\n\nparcelRequire.register(\"lOZg6\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $fe2dc92b62f974b3$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    };\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar $fe2dc92b62f974b3$var$__exportStar = module.exports && module.exports.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) $fe2dc92b62f974b3$var$__createBinding(exports1, m, p);\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.validateTrailer = module.exports.validateResponseWithCompression = module.exports.validateResponse = module.exports.grpcStatusOk = module.exports.setTrailerStatus = module.exports.findTrailerError = module.exports.parseTimeout = module.exports.contentTypeProto = module.exports.contentTypeJson = module.exports.contentTypeRegExp = module.exports.parseContentType = module.exports.requestHeaderWithCompression = module.exports.requestHeader = module.exports.codeFromHttpStatus = module.exports.createTransport = module.exports.createHandlerFactory = void 0;\n\nvar $jso5J = parcelRequire(\"jso5J\");\nObject.defineProperty(module.exports, \"createHandlerFactory\", {\n    enumerable: true,\n    get: function() {\n        return $jso5J.createHandlerFactory;\n    }\n});\n\nvar $cehvE = parcelRequire(\"cehvE\");\nObject.defineProperty(module.exports, \"createTransport\", {\n    enumerable: true,\n    get: function() {\n        return $cehvE.createTransport;\n    }\n});\n\nvar $hRSmW = parcelRequire(\"hRSmW\");\nObject.defineProperty(module.exports, \"codeFromHttpStatus\", {\n    enumerable: true,\n    get: function() {\n        return $hRSmW.codeFromHttpStatus;\n    }\n});\n\nvar $axkTu = parcelRequire(\"axkTu\");\nObject.defineProperty(module.exports, \"requestHeader\", {\n    enumerable: true,\n    get: function() {\n        return $axkTu.requestHeader;\n    }\n});\nObject.defineProperty(module.exports, \"requestHeaderWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $axkTu.requestHeaderWithCompression;\n    }\n});\n\nvar $4xd0I = parcelRequire(\"4xd0I\");\nObject.defineProperty(module.exports, \"parseContentType\", {\n    enumerable: true,\n    get: function() {\n        return $4xd0I.parseContentType;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeRegExp\", {\n    enumerable: true,\n    get: function() {\n        return $4xd0I.contentTypeRegExp;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeJson\", {\n    enumerable: true,\n    get: function() {\n        return $4xd0I.contentTypeJson;\n    }\n});\nObject.defineProperty(module.exports, \"contentTypeProto\", {\n    enumerable: true,\n    get: function() {\n        return $4xd0I.contentTypeProto;\n    }\n});\n\nvar $cvlyH = parcelRequire(\"cvlyH\");\nObject.defineProperty(module.exports, \"parseTimeout\", {\n    enumerable: true,\n    get: function() {\n        return $cvlyH.parseTimeout;\n    }\n});\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\nObject.defineProperty(module.exports, \"findTrailerError\", {\n    enumerable: true,\n    get: function() {\n        return $7x6hp.findTrailerError;\n    }\n});\nObject.defineProperty(module.exports, \"setTrailerStatus\", {\n    enumerable: true,\n    get: function() {\n        return $7x6hp.setTrailerStatus;\n    }\n});\nObject.defineProperty(module.exports, \"grpcStatusOk\", {\n    enumerable: true,\n    get: function() {\n        return $7x6hp.grpcStatusOk;\n    }\n});\n\nvar $8N0Wq = parcelRequire(\"8N0Wq\");\nObject.defineProperty(module.exports, \"validateResponse\", {\n    enumerable: true,\n    get: function() {\n        return $8N0Wq.validateResponse;\n    }\n});\nObject.defineProperty(module.exports, \"validateResponseWithCompression\", {\n    enumerable: true,\n    get: function() {\n        return $8N0Wq.validateResponseWithCompression;\n    }\n});\n\nvar $lwDrP = parcelRequire(\"lwDrP\");\nObject.defineProperty(module.exports, \"validateTrailer\", {\n    enumerable: true,\n    get: function() {\n        return $lwDrP.validateTrailer;\n    }\n});\n\n$fe2dc92b62f974b3$var$__exportStar((parcelRequire(\"d5YNv\")), module.exports);\n\n});\nparcelRequire.register(\"jso5J\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createHandlerFactory = void 0;\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $4xd0I = parcelRequire(\"4xd0I\");\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\n\nvar $cvlyH = parcelRequire(\"cvlyH\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $cFI6K = parcelRequire(\"cFI6K\");\n\nvar $dHfIs = parcelRequire(\"dHfIs\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $kPxXG = parcelRequire(\"kPxXG\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n\nvar $9FNZj = parcelRequire(\"9FNZj\");\n\nvar $5cbVl = parcelRequire(\"5cbVl\");\nconst $e2a351eb06925d84$var$protocolName = \"grpc\";\nconst $e2a351eb06925d84$var$methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC handlers.\n */ function $e2a351eb06925d84$var$createHandlerFactory(options) {\n    const opt = (0, $9FNZj.validateUniversalHandlerOptions)(options);\n    function fact(spec) {\n        const h = $e2a351eb06925d84$var$createHandler(opt, spec);\n        return Object.assign(h, {\n            protocolNames: [\n                $e2a351eb06925d84$var$protocolName\n            ],\n            allowedMethods: [\n                $e2a351eb06925d84$var$methodPost\n            ],\n            supportedContentType: (0, $dHfIs.contentTypeMatcher)($4xd0I.contentTypeRegExp),\n            requestPath: (0, $3xity.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method\n        });\n    }\n    fact.protocolName = $e2a351eb06925d84$var$protocolName;\n    return fact;\n}\nmodule.exports.createHandlerFactory = $e2a351eb06925d84$var$createHandlerFactory;\nfunction $e2a351eb06925d84$var$createHandler(opt, spec) {\n    const serialization = (0, $3mgpQ.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0, $5cbVl.assertByteStreamRequest)(req);\n        const type = (0, $4xd0I.parseContentType)(req.header.get($d5YNv.headerContentType));\n        if (type == undefined) return $5cbVl.uResponseUnsupportedMediaType;\n        if (req.method !== $e2a351eb06925d84$var$methodPost) return $5cbVl.uResponseMethodNotAllowed;\n        const timeout = (0, $cvlyH.parseTimeout)(req.header.get($d5YNv.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, $4Jmw5.createHandlerContext)(Object.assign(Object.assign({}, spec), {\n            requestMethod: req.method,\n            protocolName: $e2a351eb06925d84$var$protocolName,\n            timeoutMs: timeout.timeoutMs,\n            shutdownSignal: opt.shutdownSignal,\n            requestSignal: req.signal,\n            requestHeader: req.header,\n            responseHeader: {\n                [$d5YNv.headerContentType]: type.binary ? $4xd0I.contentTypeProto : $4xd0I.contentTypeJson\n            },\n            responseTrailer: {\n                [$d5YNv.headerGrpcStatus]: $7x6hp.grpcStatusOk\n            }\n        }));\n        const compression = (0, $cFI6K.compressionNegotiate)(opt.acceptCompression, req.header.get($d5YNv.headerEncoding), req.header.get($d5YNv.headerAcceptEncoding), $d5YNv.headerAcceptEncoding);\n        if (compression.response) context.responseHeader.set($d5YNv.headerEncoding, compression.response.name);\n        const outputIt = (0, $4TIBd.pipe)(req.body, (0, $4TIBd.transformPrepend)(()=>{\n            // raise compression error to serialize it as a trailer status\n            if (compression.error) throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) throw timeout.error;\n            return undefined;\n        }), (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getI(type.binary)), (0, $kPxXG.transformInvokeImplementation)(spec, context), (0, $4TIBd.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, $4TIBd.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), (0, $4TIBd.transformCatchFinally)((e)=>{\n            context.abort();\n            if (e instanceof $dbKGs.ConnectError) (0, $7x6hp.setTrailerStatus)(context.responseTrailer, e);\n            else if (e !== undefined) (0, $7x6hp.setTrailerStatus)(context.responseTrailer, new $dbKGs.ConnectError(\"internal error\", $2S2uU.Code.Internal, undefined, undefined, e));\n        }));\n        return Object.assign(Object.assign({}, $5cbVl.uResponseOk), {\n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, $4TIBd.untilFirst)(outputIt),\n            header: context.responseHeader,\n            trailer: context.responseTrailer\n        });\n    };\n}\n\n});\nparcelRequire.register(\"4xd0I\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.parseContentType = module.exports.contentTypeJson = module.exports.contentTypeProto = module.exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid gRPC Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */ module.exports.contentTypeRegExp = /^application\\/grpc(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nmodule.exports.contentTypeProto = \"application/grpc+proto\";\nmodule.exports.contentTypeJson = \"application/grpc+json\";\n/**\n * Parse a gRPC Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $34d4561e7a0540a7$var$parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(module.exports.contentTypeRegExp);\n    if (!match) return undefined;\n    const binary = !match[1];\n    return {\n        binary: binary\n    };\n}\nmodule.exports.parseContentType = $34d4561e7a0540a7$var$parseContentType;\n\n});\n\n\nparcelRequire.register(\"cehvE\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $8e745fe03fabacf7$var$__asyncValues = module.exports && module.exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $8e745fe03fabacf7$var$__await = module.exports && module.exports.__await || function(v) {\n    return this instanceof $8e745fe03fabacf7$var$__await ? (this.v = v, this) : new $8e745fe03fabacf7$var$__await(v);\n};\nvar $8e745fe03fabacf7$var$__asyncDelegator = module.exports && module.exports.__asyncDelegator || function(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $8e745fe03fabacf7$var$__await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n};\nvar $8e745fe03fabacf7$var$__asyncGenerator = module.exports && module.exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $8e745fe03fabacf7$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.createTransport = void 0;\n\nvar $axkTu = parcelRequire(\"axkTu\");\n\nvar $8N0Wq = parcelRequire(\"8N0Wq\");\n\nvar $lwDrP = parcelRequire(\"lwDrP\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n\nvar $3xity = parcelRequire(\"3xity\");\n\nvar $85AEY = parcelRequire(\"85AEY\");\n\nvar $3mgpQ = parcelRequire(\"3mgpQ\");\n/**\n * Create a Transport for the gRPC protocol.\n */ function $8e745fe03fabacf7$var$createTransport(opt) {\n    return {\n        async unary (service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, $85AEY.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: false,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, $axkTu.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: input instanceof method.I ? input : new method.I(input)\n                },\n                next: async (req)=>{\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, $4TIBd.pipe)((0, $4TIBd.createAsyncIterable)([\n                            req.message\n                        ]), (0, $4TIBd.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, $4TIBd.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    const { compression: compression } = (0, $8N0Wq.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const message = await (0, $4TIBd.pipeTo)(uRes.body, (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), async (iterable)=>{\n                        var _a, e_1, _b, _c;\n                        let message;\n                        try {\n                            for(var _d = true, iterable_1 = $8e745fe03fabacf7$var$__asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;){\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                try {\n                                    const chunk = _c;\n                                    if (message !== undefined) throw new $dbKGs.ConnectError(\"protocol error: received extra output message for unary method\", $2S2uU.Code.InvalidArgument);\n                                    message = chunk;\n                                } finally{\n                                    _d = true;\n                                }\n                            }\n                        } catch (e_1_1) {\n                            e_1 = {\n                                error: e_1_1\n                            };\n                        } finally{\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            } finally{\n                                if (e_1) throw e_1.error;\n                            }\n                        }\n                        return message;\n                    }, {\n                        propagateDownStreamError: false\n                    });\n                    (0, $lwDrP.validateTrailer)(uRes.trailer);\n                    if (message === undefined) throw new $dbKGs.ConnectError(\"protocol error: missing output message for unary method\", $2S2uU.Code.InvalidArgument);\n                    return {\n                        stream: false,\n                        service: service,\n                        method: method,\n                        header: uRes.header,\n                        message: message,\n                        trailer: uRes.trailer\n                    };\n                }\n            });\n        },\n        async stream (service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, $3mgpQ.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return (0, $85AEY.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: true,\n                    service: service,\n                    method: method,\n                    url: (0, $3xity.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, $axkTu.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, $4TIBd.pipe)(input, (0, $4TIBd.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true\n                    })\n                },\n                next: async (req)=>{\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, $4TIBd.pipe)(req.message, (0, $4TIBd.transformNormalizeMessage)(method.I), (0, $4TIBd.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, $4TIBd.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, $4TIBd.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    const { compression: compression, foundStatus: foundStatus } = (0, $8N0Wq.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), {\n                        header: uRes.header,\n                        trailer: uRes.trailer,\n                        message: (0, $4TIBd.pipe)(uRes.body, (0, $4TIBd.transformSplitEnvelope)(opt.readMaxBytes), (0, $4TIBd.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, $4TIBd.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), function(iterable) {\n                            return $8e745fe03fabacf7$var$__asyncGenerator(this, arguments, function*() {\n                                yield $8e745fe03fabacf7$var$__await((yield* $8e745fe03fabacf7$var$__asyncDelegator($8e745fe03fabacf7$var$__asyncValues(iterable))));\n                                if (!foundStatus) (0, $lwDrP.validateTrailer)(uRes.trailer);\n                            });\n                        }, {\n                            propagateDownStreamError: true\n                        })\n                    });\n                    return res;\n                }\n            });\n        }\n    };\n}\nmodule.exports.createTransport = $8e745fe03fabacf7$var$createTransport;\n\n});\nparcelRequire.register(\"axkTu\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.requestHeaderWithCompression = module.exports.requestHeader = void 0;\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\n\nvar $4xd0I = parcelRequire(\"4xd0I\");\n/**\n * Creates headers for a gRPC request.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $7abd31960b3a9f0b$var$requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    result.set($d5YNv.headerContentType, useBinaryFormat ? $4xd0I.contentTypeProto : $4xd0I.contentTypeJson);\n    // Note that we do not comply with recommended structure for the\n    // user-agent string.\n    // https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set($d5YNv.headerUserAgent, \"@bufbuild/connect-web\");\n    if (timeoutMs !== undefined) result.set($d5YNv.headerTimeout, `${timeoutMs}m`);\n    // The gRPC-HTTP2 specification requires this - it flushes out proxies that\n    // don't support HTTP trailers.\n    result.set(\"Te\", \"trailers\");\n    return result;\n}\nmodule.exports.requestHeader = $7abd31960b3a9f0b$var$requestHeader;\n/**\n * Creates headers for a gRPC request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $7abd31960b3a9f0b$var$requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = $7abd31960b3a9f0b$var$requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) result.set($d5YNv.headerEncoding, sendCompression.name);\n    if (acceptCompression.length > 0) result.set($d5YNv.headerAcceptEncoding, acceptCompression.map((c)=>c.name).join(\",\"));\n    return result;\n}\nmodule.exports.requestHeaderWithCompression = $7abd31960b3a9f0b$var$requestHeaderWithCompression;\n\n});\n\nparcelRequire.register(\"8N0Wq\", function(module, exports) {\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.validateResponseWithCompression = module.exports.validateResponse = void 0;\n\nvar $hRSmW = parcelRequire(\"hRSmW\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $7x6hp = parcelRequire(\"7x6hp\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\n/**\n * Validates response status and header for the gRPC protocol.\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $6663a141d9eb6881$var$validateResponse(status, headers) {\n    if (status != 200) throw new $dbKGs.ConnectError(`HTTP ${status}`, (0, $hRSmW.codeFromHttpStatus)(status), headers);\n    const err = (0, $7x6hp.findTrailerError)(headers);\n    if (err) throw err;\n    return {\n        foundStatus: headers.has($d5YNv.headerGrpcStatus)\n    };\n}\nmodule.exports.validateResponse = $6663a141d9eb6881$var$validateResponse;\n/**\n * Validates response status and header for the gRPC protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */ function $6663a141d9eb6881$var$validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus: foundStatus } = $6663a141d9eb6881$var$validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get($d5YNv.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c)=>c.name === encoding);\n        if (!compression) throw new $dbKGs.ConnectError(`unsupported response encoding \"${encoding}\"`, $2S2uU.Code.InvalidArgument, headers);\n    }\n    return {\n        foundStatus: foundStatus,\n        compression: compression\n    };\n}\nmodule.exports.validateResponseWithCompression = $6663a141d9eb6881$var$validateResponseWithCompression;\n\n});\n\n\n\n\nvar $d29c05496bcb6d6e$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($d29c05496bcb6d6e$exports, \"__esModule\", {\n    value: true\n});\n$d29c05496bcb6d6e$exports.createRouterTransport = $d29c05496bcb6d6e$exports.createMethodImplSpec = $d29c05496bcb6d6e$exports.createServiceImplSpec = $d29c05496bcb6d6e$exports.makeAnyClient = $d29c05496bcb6d6e$exports.runStreaming = $d29c05496bcb6d6e$exports.runUnary = $d29c05496bcb6d6e$exports.cors = $d29c05496bcb6d6e$exports.createHandlerContext = $d29c05496bcb6d6e$exports.createConnectRouter = $d29c05496bcb6d6e$exports.createPromiseClient = $d29c05496bcb6d6e$exports.createCallbackClient = $d29c05496bcb6d6e$exports.appendHeaders = $d29c05496bcb6d6e$exports.decodeBinaryHeader = $d29c05496bcb6d6e$exports.encodeBinaryHeader = $d29c05496bcb6d6e$exports.Code = $d29c05496bcb6d6e$exports.connectErrorFromReason = $d29c05496bcb6d6e$exports.connectErrorDetails = $d29c05496bcb6d6e$exports.ConnectError = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\nObject.defineProperty($d29c05496bcb6d6e$exports, \"ConnectError\", {\n    enumerable: true,\n    get: function() {\n        return $dbKGs.ConnectError;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"connectErrorDetails\", {\n    enumerable: true,\n    get: function() {\n        return $dbKGs.connectErrorDetails;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"connectErrorFromReason\", {\n    enumerable: true,\n    get: function() {\n        return $dbKGs.connectErrorFromReason;\n    }\n});\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\nObject.defineProperty($d29c05496bcb6d6e$exports, \"Code\", {\n    enumerable: true,\n    get: function() {\n        return $2S2uU.Code;\n    }\n});\n\nvar $b1qwC = parcelRequire(\"b1qwC\");\nObject.defineProperty($d29c05496bcb6d6e$exports, \"encodeBinaryHeader\", {\n    enumerable: true,\n    get: function() {\n        return $b1qwC.encodeBinaryHeader;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"decodeBinaryHeader\", {\n    enumerable: true,\n    get: function() {\n        return $b1qwC.decodeBinaryHeader;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"appendHeaders\", {\n    enumerable: true,\n    get: function() {\n        return $b1qwC.appendHeaders;\n    }\n});\nvar $be8d41fc155fe396$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $be8d41fc155fe396$var$__asyncValues = $be8d41fc155fe396$exports && $be8d41fc155fe396$exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nObject.defineProperty($be8d41fc155fe396$exports, \"__esModule\", {\n    value: true\n});\n$be8d41fc155fe396$exports.createCallbackClient = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\nvar $83008738c4ad9b66$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($83008738c4ad9b66$exports, \"__esModule\", {\n    value: true\n});\n$83008738c4ad9b66$exports.makeAnyClient = void 0;\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */ function $83008738c4ad9b66$var$makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)){\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), {\n            localName: localName,\n            service: service\n        }));\n        if (method != null) client[localName] = method;\n    }\n    return client;\n}\n$83008738c4ad9b66$exports.makeAnyClient = $83008738c4ad9b66$var$makeAnyClient;\n\n\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n/**\n * Create a CallbackClient for the given service, invoking RPCs through the\n * given transport.\n */ function $be8d41fc155fe396$var$createCallbackClient(service, transport) {\n    return (0, $83008738c4ad9b66$exports.makeAnyClient)(service, (method)=>{\n        switch(method.kind){\n            case $hNn7i.MethodKind.Unary:\n                return $be8d41fc155fe396$var$createUnaryFn(transport, service, method);\n            case $hNn7i.MethodKind.ServerStreaming:\n                return $be8d41fc155fe396$var$createServerStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\n$be8d41fc155fe396$exports.createCallbackClient = $be8d41fc155fe396$var$createCallbackClient;\nfunction $be8d41fc155fe396$var$createUnaryFn(transport, service, method) {\n    return function(requestMessage, callback, options) {\n        const abort = new AbortController();\n        options = $be8d41fc155fe396$var$wrapSignal(abort, options);\n        transport.unary(service, method, abort.signal, options.timeoutMs, options.headers, requestMessage).then((response)=>{\n            var _a, _b;\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 || _a.call(options, response.header);\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 || _b.call(options, response.trailer);\n            callback(undefined, response.message);\n        }, (reason)=>{\n            const err = $dbKGs.ConnectError.from(reason, $2S2uU.Code.Internal);\n            if (err.code === $2S2uU.Code.Canceled && abort.signal.aborted) // As documented, discard Canceled errors if canceled by the user.\n            return;\n            callback(err, new method.O());\n        });\n        return ()=>abort.abort();\n    };\n}\nfunction $be8d41fc155fe396$var$createServerStreamingFn(transport, service, method) {\n    return function(input, onResponse, onClose, options) {\n        const abort = new AbortController();\n        const inputMessage = input instanceof method.I ? input : new method.I(input);\n        async function run() {\n            var _a, e_1, _b, _c;\n            var _d, _e;\n            options = $be8d41fc155fe396$var$wrapSignal(abort, options);\n            const response = await transport.stream(service, method, options.signal, options.timeoutMs, options.headers, (0, $4TIBd.createAsyncIterable)([\n                inputMessage\n            ]));\n            (_d = options.onHeader) === null || _d === void 0 || _d.call(options, response.header);\n            try {\n                for(var _f = true, _g = $be8d41fc155fe396$var$__asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a;){\n                    _c = _h.value;\n                    _f = false;\n                    try {\n                        const message = _c;\n                        onResponse(message);\n                    } finally{\n                        _f = true;\n                    }\n                }\n            } catch (e_1_1) {\n                e_1 = {\n                    error: e_1_1\n                };\n            } finally{\n                try {\n                    if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n                } finally{\n                    if (e_1) throw e_1.error;\n                }\n            }\n            (_e = options.onTrailer) === null || _e === void 0 || _e.call(options, response.trailer);\n            onClose(undefined);\n        }\n        run().catch((reason)=>{\n            const err = $dbKGs.ConnectError.from(reason, $2S2uU.Code.Internal);\n            if (err.code === $2S2uU.Code.Canceled && abort.signal.aborted) // As documented, discard Canceled errors if canceled by the user,\n            // but do invoke the close-callback.\n            onClose(undefined);\n            else onClose(err);\n        });\n        return ()=>abort.abort();\n    };\n}\nfunction $be8d41fc155fe396$var$wrapSignal(abort, options) {\n    if (options === null || options === void 0 ? void 0 : options.signal) {\n        options.signal.addEventListener(\"abort\", ()=>abort.abort());\n        if (options.signal.aborted) abort.abort();\n    }\n    return Object.assign(Object.assign({}, options), {\n        signal: abort.signal\n    });\n}\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createCallbackClient\", {\n    enumerable: true,\n    get: function() {\n        return $be8d41fc155fe396$exports.createCallbackClient;\n    }\n});\nvar $dd505730e24bcb50$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $dd505730e24bcb50$var$__await = $dd505730e24bcb50$exports && $dd505730e24bcb50$exports.__await || function(v) {\n    return this instanceof $dd505730e24bcb50$var$__await ? (this.v = v, this) : new $dd505730e24bcb50$var$__await(v);\n};\nvar $dd505730e24bcb50$var$__asyncValues = $dd505730e24bcb50$exports && $dd505730e24bcb50$exports.__asyncValues || function(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n};\nvar $dd505730e24bcb50$var$__asyncDelegator = $dd505730e24bcb50$exports && $dd505730e24bcb50$exports.__asyncDelegator || function(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: $dd505730e24bcb50$var$__await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n};\nvar $dd505730e24bcb50$var$__asyncGenerator = $dd505730e24bcb50$exports && $dd505730e24bcb50$exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $dd505730e24bcb50$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty($dd505730e24bcb50$exports, \"__esModule\", {\n    value: true\n});\n$dd505730e24bcb50$exports.createBiDiStreamingFn = $dd505730e24bcb50$exports.createClientStreamingFn = $dd505730e24bcb50$exports.createServerStreamingFn = $dd505730e24bcb50$exports.createPromiseClient = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $4TIBd = parcelRequire(\"4TIBd\");\n/**\n * Create a PromiseClient for the given service, invoking RPCs through the\n * given transport.\n */ function $dd505730e24bcb50$var$createPromiseClient(service, transport) {\n    return (0, $83008738c4ad9b66$exports.makeAnyClient)(service, (method)=>{\n        switch(method.kind){\n            case $hNn7i.MethodKind.Unary:\n                return $dd505730e24bcb50$var$createUnaryFn(transport, service, method);\n            case $hNn7i.MethodKind.ServerStreaming:\n                return $dd505730e24bcb50$var$createServerStreamingFn(transport, service, method);\n            case $hNn7i.MethodKind.ClientStreaming:\n                return $dd505730e24bcb50$var$createClientStreamingFn(transport, service, method);\n            case $hNn7i.MethodKind.BiDiStreaming:\n                return $dd505730e24bcb50$var$createBiDiStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\n$dd505730e24bcb50$exports.createPromiseClient = $dd505730e24bcb50$var$createPromiseClient;\nfunction $dd505730e24bcb50$var$createUnaryFn(transport, service, method) {\n    return async function(input, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 || _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 || _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction $dd505730e24bcb50$var$createServerStreamingFn(transport, service, method) {\n    return function(input, options) {\n        var _a, _b;\n        return $dd505730e24bcb50$var$__asyncGenerator(this, arguments, function*() {\n            const inputMessage = input instanceof method.I ? input : new method.I(input);\n            const response = yield $dd505730e24bcb50$var$__await(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, (0, $4TIBd.createAsyncIterable)([\n                inputMessage\n            ])));\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 || _a.call(options, response.header);\n            yield $dd505730e24bcb50$var$__await((yield* $dd505730e24bcb50$var$__asyncDelegator($dd505730e24bcb50$var$__asyncValues(response.message))));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 || _b.call(options, response.trailer);\n        });\n    };\n}\n$dd505730e24bcb50$exports.createServerStreamingFn = $dd505730e24bcb50$var$createServerStreamingFn;\nfunction $dd505730e24bcb50$var$createClientStreamingFn(transport, service, method) {\n    return async function(request, options) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        function input() {\n            return $dd505730e24bcb50$var$__asyncGenerator(this, arguments, function* input_1() {\n                var _a, e_2, _b, _c;\n                try {\n                    for(var _d = true, request_1 = $dd505730e24bcb50$var$__asyncValues(request), request_1_1; request_1_1 = yield $dd505730e24bcb50$var$__await(request_1.next()), _a = request_1_1.done, !_a;){\n                        _c = request_1_1.value;\n                        _d = false;\n                        try {\n                            const partial = _c;\n                            yield yield $dd505730e24bcb50$var$__await(partial instanceof method.I ? partial : new method.I(partial));\n                        } finally{\n                            _d = true;\n                        }\n                    }\n                } catch (e_2_1) {\n                    e_2 = {\n                        error: e_2_1\n                    };\n                } finally{\n                    try {\n                        if (!_d && !_a && (_b = request_1.return)) yield $dd505730e24bcb50$var$__await(_b.call(request_1));\n                    } finally{\n                        if (e_2) throw e_2.error;\n                    }\n                }\n            });\n        }\n        const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input());\n        (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 || _d.call(options, response.header);\n        let singleMessage;\n        try {\n            for(var _f = true, _g = $dd505730e24bcb50$var$__asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a;){\n                _c = _h.value;\n                _f = false;\n                try {\n                    const message = _c;\n                    singleMessage = message;\n                } finally{\n                    _f = true;\n                }\n            }\n        } catch (e_1_1) {\n            e_1 = {\n                error: e_1_1\n            };\n        } finally{\n            try {\n                if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n            } finally{\n                if (e_1) throw e_1.error;\n            }\n        }\n        if (!singleMessage) throw new $dbKGs.ConnectError(\"protocol error: missing response message\", $2S2uU.Code.Internal);\n        (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 || _e.call(options, response.trailer);\n        return singleMessage;\n    };\n}\n$dd505730e24bcb50$exports.createClientStreamingFn = $dd505730e24bcb50$var$createClientStreamingFn;\nfunction $dd505730e24bcb50$var$createBiDiStreamingFn(transport, service, method) {\n    return function(request, options) {\n        var _a, _b;\n        return $dd505730e24bcb50$var$__asyncGenerator(this, arguments, function*() {\n            function input() {\n                return $dd505730e24bcb50$var$__asyncGenerator(this, arguments, function* input_2() {\n                    var _a, e_3, _b, _c;\n                    try {\n                        for(var _d = true, request_2 = $dd505730e24bcb50$var$__asyncValues(request), request_2_1; request_2_1 = yield $dd505730e24bcb50$var$__await(request_2.next()), _a = request_2_1.done, !_a;){\n                            _c = request_2_1.value;\n                            _d = false;\n                            try {\n                                const partial = _c;\n                                yield yield $dd505730e24bcb50$var$__await(partial instanceof method.I ? partial : new method.I(partial));\n                            } finally{\n                                _d = true;\n                            }\n                        }\n                    } catch (e_3_1) {\n                        e_3 = {\n                            error: e_3_1\n                        };\n                    } finally{\n                        try {\n                            if (!_d && !_a && (_b = request_2.return)) yield $dd505730e24bcb50$var$__await(_b.call(request_2));\n                        } finally{\n                            if (e_3) throw e_3.error;\n                        }\n                    }\n                });\n            }\n            const response = yield $dd505730e24bcb50$var$__await(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input()));\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 || _a.call(options, response.header);\n            yield $dd505730e24bcb50$var$__await((yield* $dd505730e24bcb50$var$__asyncDelegator($dd505730e24bcb50$var$__asyncValues(response.message))));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 || _b.call(options, response.trailer);\n        });\n    };\n}\n$dd505730e24bcb50$exports.createBiDiStreamingFn = $dd505730e24bcb50$var$createBiDiStreamingFn;\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createPromiseClient\", {\n    enumerable: true,\n    get: function() {\n        return $dd505730e24bcb50$exports.createPromiseClient;\n    }\n});\nvar $f3a9c8f5d6a6846a$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($f3a9c8f5d6a6846a$exports, \"__esModule\", {\n    value: true\n});\n$f3a9c8f5d6a6846a$exports.createConnectRouter = void 0;\n\nvar $dbKGs = parcelRequire(\"dbKGs\");\n\nvar $2S2uU = parcelRequire(\"2S2uU\");\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\n\nvar $dNf8z = parcelRequire(\"dNf8z\");\n\nvar $jso5J = parcelRequire(\"jso5J\");\n\nvar $9jc4q = parcelRequire(\"9jc4q\");\n\nvar $9FNZj = parcelRequire(\"9FNZj\");\n/**\n * Create a new ConnectRouter.\n */ function $f3a9c8f5d6a6846a$var$createConnectRouter(routerOptions) {\n    const base = $f3a9c8f5d6a6846a$var$whichProtocols(routerOptions);\n    const handlers = [];\n    return {\n        handlers: handlers,\n        service (service, implementation, options) {\n            const { protocols: protocols } = $f3a9c8f5d6a6846a$var$whichProtocols(options, base);\n            handlers.push(...(0, $9FNZj.createUniversalServiceHandlers)((0, $4Jmw5.createServiceImplSpec)(service, implementation), protocols));\n            return this;\n        },\n        rpc (service, method, implementation, options) {\n            const { protocols: protocols } = $f3a9c8f5d6a6846a$var$whichProtocols(options, base);\n            handlers.push((0, $9FNZj.createUniversalMethodHandler)((0, $4Jmw5.createMethodImplSpec)(service, method, implementation), protocols));\n            return this;\n        }\n    };\n}\n$f3a9c8f5d6a6846a$exports.createConnectRouter = $f3a9c8f5d6a6846a$var$createConnectRouter;\nfunction $f3a9c8f5d6a6846a$var$whichProtocols(options, base) {\n    if (base && !options) return base;\n    const opt = base ? Object.assign(Object.assign({}, (0, $9FNZj.validateUniversalHandlerOptions)(base.options)), options) : Object.assign(Object.assign({}, options), (0, $9FNZj.validateUniversalHandlerOptions)(options !== null && options !== void 0 ? options : {}));\n    const protocols = [];\n    if ((options === null || options === void 0 ? void 0 : options.grpc) !== false) protocols.push((0, $jso5J.createHandlerFactory)(opt));\n    if ((options === null || options === void 0 ? void 0 : options.grpcWeb) !== false) protocols.push((0, $dNf8z.createHandlerFactory)(opt));\n    if ((options === null || options === void 0 ? void 0 : options.connect) !== false) protocols.push((0, $9jc4q.createHandlerFactory)(opt));\n    if (protocols.length === 0) throw new $dbKGs.ConnectError(\"cannot create handler, all protocols are disabled\", $2S2uU.Code.InvalidArgument);\n    return {\n        options: opt,\n        protocols: protocols\n    };\n}\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createConnectRouter\", {\n    enumerable: true,\n    get: function() {\n        return $f3a9c8f5d6a6846a$exports.createConnectRouter;\n    }\n});\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createHandlerContext\", {\n    enumerable: true,\n    get: function() {\n        return $4Jmw5.createHandlerContext;\n    }\n});\nvar $3f08055aa3acf793$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($3f08055aa3acf793$exports, \"__esModule\", {\n    value: true\n});\n$3f08055aa3acf793$exports.cors = void 0;\n\nvar $2vMsJ = parcelRequire(\"2vMsJ\");\n\nvar $d5YNv = parcelRequire(\"d5YNv\");\n\nvar $bAe87 = parcelRequire(\"bAe87\");\n/**\n * CORS prevents rogue scripts in a web browser from making arbitrary requests\n * to other web servers.\n *\n * This object provides helpful constants to configure CORS middleware for\n * cross-domain requests with the protocols supported by Connect.\n *\n * Make sure to add application-specific headers that your application\n * uses as well.\n */ $3f08055aa3acf793$exports.cors = {\n    /**\n     * Request methods that scripts running in the browser are permitted to use.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these headers fields must be included in the preflight response header\n     * Access-Control-Allow-Methods.\n     */ allowedMethods: [\n        \"POST\",\n        \"GET\"\n    ],\n    /**\n     * Header fields that scripts running in the browser are permitted to send.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in the preflight response header\n     * Access-Control-Allow-Headers.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * may send.\n     */ allowedHeaders: [\n        $2vMsJ.headerContentType,\n        $2vMsJ.headerProtocolVersion,\n        $2vMsJ.headerTimeout,\n        $2vMsJ.headerStreamEncoding,\n        $2vMsJ.headerStreamAcceptEncoding,\n        $2vMsJ.headerUnaryEncoding,\n        $2vMsJ.headerUnaryAcceptEncoding,\n        $d5YNv.headerMessageType,\n        $bAe87.headerXGrpcWeb,\n        $bAe87.headerXUserAgent,\n        $bAe87.headerTimeout\n    ],\n    /**\n     * Header fields that scripts running the browser are permitted to see.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in header Access-Control-Expose-Headers\n     * of the actual response.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * should see. If your application uses trailers, they will be sent as header\n     * fields with a `Trailer-` prefix for Connect unary RPCs - make sure to\n     * expose them as well if you want them to be visible in all supported\n     * protocols.\n     */ exposedHeaders: [\n        $bAe87.headerGrpcStatus,\n        $bAe87.headerGrpcMessage,\n        $bAe87.headerStatusDetailsBin,\n        $2vMsJ.headerUnaryEncoding,\n        $2vMsJ.headerStreamEncoding\n    ]\n};\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"cors\", {\n    enumerable: true,\n    get: function() {\n        return $3f08055aa3acf793$exports.cors;\n    }\n});\nvar $b29d408944d5e2cf$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($b29d408944d5e2cf$exports, \"__esModule\", {\n    value: true\n});\n$b29d408944d5e2cf$exports.runStreaming = $b29d408944d5e2cf$exports.runUnary = void 0;\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n *\n * @deprecated Use runUnaryCall from @bufbuild/connect/protocol instead.\n */ function $b29d408944d5e2cf$var$runUnary(req, next, interceptors) {\n    if (interceptors) next = $b29d408944d5e2cf$var$applyInterceptors(next, interceptors);\n    return next(req);\n}\n$b29d408944d5e2cf$exports.runUnary = $b29d408944d5e2cf$var$runUnary;\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n *\n * @deprecated Use runStreamingCall from @bufbuild/connect/protocol instead.\n */ function $b29d408944d5e2cf$var$runStreaming(req, next, interceptors) {\n    if (interceptors) next = $b29d408944d5e2cf$var$applyInterceptors(next, interceptors);\n    return next(req);\n}\n$b29d408944d5e2cf$exports.runStreaming = $b29d408944d5e2cf$var$runStreaming;\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */ function $b29d408944d5e2cf$var$applyInterceptors(next, interceptors) {\n    return interceptors.concat().reverse().reduce(// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i)=>i(n), next // eslint-disable-line @typescript-eslint/no-explicit-any\n    );\n}\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"runUnary\", {\n    enumerable: true,\n    get: function() {\n        return $b29d408944d5e2cf$exports.runUnary;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"runStreaming\", {\n    enumerable: true,\n    get: function() {\n        return $b29d408944d5e2cf$exports.runStreaming;\n    }\n});\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"makeAnyClient\", {\n    enumerable: true,\n    get: function() {\n        return $83008738c4ad9b66$exports.makeAnyClient;\n    }\n});\n\nvar $4Jmw5 = parcelRequire(\"4Jmw5\");\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createServiceImplSpec\", {\n    enumerable: true,\n    get: function() {\n        return $4Jmw5.createServiceImplSpec;\n    }\n});\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createMethodImplSpec\", {\n    enumerable: true,\n    get: function() {\n        return $4Jmw5.createMethodImplSpec;\n    }\n});\nvar $0ccc67c58f017fe8$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($0ccc67c58f017fe8$exports, \"__esModule\", {\n    value: true\n});\n$0ccc67c58f017fe8$exports.createRouterTransport = void 0;\n\nvar $ciggp = parcelRequire(\"ciggp\");\n\nvar $dVUld = parcelRequire(\"dVUld\");\n\n/**\n * Creates a Transport that routes requests to the configured router. Useful for testing\n * and calling services running in the same process.\n *\n * This can be used to test both client logic by using this to stub/mock the backend,\n * and to test server logic by using this to run without needing to spin up a server.\n */ function $0ccc67c58f017fe8$var$createRouterTransport(routes, options) {\n    var _a, _b;\n    const router = (0, $f3a9c8f5d6a6846a$exports.createConnectRouter)(Object.assign(Object.assign({}, (_a = options === null || options === void 0 ? void 0 : options.router) !== null && _a !== void 0 ? _a : {}), {\n        connect: true\n    }));\n    routes(router);\n    return (0, $ciggp.createTransport)(Object.assign({\n        httpClient: (0, $dVUld.createUniversalHandlerClient)(router.handlers),\n        baseUrl: \"https://in-memory\",\n        useBinaryFormat: true,\n        interceptors: [],\n        acceptCompression: [],\n        sendCompression: null,\n        compressMinBytes: Number.MAX_SAFE_INTEGER,\n        readMaxBytes: Number.MAX_SAFE_INTEGER,\n        writeMaxBytes: Number.MAX_SAFE_INTEGER\n    }, (_b = options === null || options === void 0 ? void 0 : options.transport) !== null && _b !== void 0 ? _b : {}));\n}\n$0ccc67c58f017fe8$exports.createRouterTransport = $0ccc67c58f017fe8$var$createRouterTransport;\n\n\nObject.defineProperty($d29c05496bcb6d6e$exports, \"createRouterTransport\", {\n    enumerable: true,\n    get: function() {\n        return $0ccc67c58f017fe8$exports.createRouterTransport;\n    }\n});\n\n\nvar $bb5abba579f9f96c$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($bb5abba579f9f96c$exports, \"__esModule\", {\n    value: true\n});\n$bb5abba579f9f96c$exports.createGrpcWebTransport = $bb5abba579f9f96c$exports.createConnectTransport = void 0;\nvar $c892c532d475ad55$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $c892c532d475ad55$var$__await = $c892c532d475ad55$exports && $c892c532d475ad55$exports.__await || function(v) {\n    return this instanceof $c892c532d475ad55$var$__await ? (this.v = v, this) : new $c892c532d475ad55$var$__await(v);\n};\nvar $c892c532d475ad55$var$__asyncGenerator = $c892c532d475ad55$exports && $c892c532d475ad55$exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $c892c532d475ad55$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty($c892c532d475ad55$exports, \"__esModule\", {\n    value: true\n});\n$c892c532d475ad55$exports.createConnectTransport = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $85618898c1be81b4$exports = {};\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// workaround for bundlers that do not support subpath exports.\n\n$85618898c1be81b4$exports = (parcelRequire(\"lKy3O\"));\n\n\nvar $073a1d431124c308$exports = {};\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// Workaround for bundlers that do not support subpath exports.\n\n$073a1d431124c308$exports = (parcelRequire(\"4wRJK\"));\n\n\nvar $05f920a7fdf2108e$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty($05f920a7fdf2108e$exports, \"__esModule\", {\n    value: true\n});\n$05f920a7fdf2108e$exports.assertFetchApi = void 0;\n/**\n * Asserts that the fetch API is available.\n */ function $05f920a7fdf2108e$var$assertFetchApi() {\n    try {\n        new Headers();\n    } catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\n$05f920a7fdf2108e$exports.assertFetchApi = $05f920a7fdf2108e$var$assertFetchApi;\n\n\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */ function $c892c532d475ad55$var$createConnectTransport(options) {\n    var _a;\n    (0, $05f920a7fdf2108e$exports.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary (service, method, signal, timeoutMs, header, message) {\n            var _a;\n            const { normalize: normalize, serialize: serialize, parse: parse } = (0, $85618898c1be81b4$exports.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            return await (0, $85618898c1be81b4$exports.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: false,\n                    service: service,\n                    method: method,\n                    url: (0, $85618898c1be81b4$exports.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $073a1d431124c308$exports.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header),\n                    message: normalize(message)\n                },\n                next: async (req)=>{\n                    var _a;\n                    const useGet = options.useHttpGet === true && method.idempotency === $hNn7i.MethodIdempotency.NoSideEffects;\n                    let body = null;\n                    if (useGet) req = (0, $073a1d431124c308$exports.transformConnectPostToGetRequest)(req, serialize(req.message), useBinaryFormat);\n                    else body = serialize(req.message);\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), {\n                        headers: req.header,\n                        signal: req.signal,\n                        body: body\n                    }));\n                    const { isUnaryError: isUnaryError, unaryError: unaryError } = (0, $073a1d431124c308$exports.validateResponse)(method.kind, response.status, response.headers);\n                    if (isUnaryError) throw (0, $073a1d431124c308$exports.errorFromJson)(await response.json(), (0, $d29c05496bcb6d6e$exports.appendHeaders)(...(0, $073a1d431124c308$exports.trailerDemux)(response.headers)), unaryError);\n                    const [demuxedHeader, demuxedTrailer] = (0, $073a1d431124c308$exports.trailerDemux)(response.headers);\n                    return {\n                        stream: false,\n                        service: service,\n                        method: method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat ? parse(new Uint8Array(await response.arrayBuffer())) : method.O.fromJson(await response.json(), (0, $85618898c1be81b4$exports.getJsonOptions)(options.jsonOptions)),\n                        trailer: demuxedTrailer\n                    };\n                }\n            });\n        },\n        async stream (service, method, signal, timeoutMs, header, input) {\n            var _a;\n            const { serialize: serialize, parse: parse } = (0, $85618898c1be81b4$exports.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, trailerTarget) {\n                return $c892c532d475ad55$var$__asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0, $85618898c1be81b4$exports.createEnvelopeReadableStream)(body).getReader();\n                    let endStreamReceived = false;\n                    for(;;){\n                        const result = yield $c892c532d475ad55$var$__await(reader.read());\n                        if (result.done) break;\n                        const { flags: flags, data: data } = result.value;\n                        if ((flags & $073a1d431124c308$exports.endStreamFlag) === $073a1d431124c308$exports.endStreamFlag) {\n                            endStreamReceived = true;\n                            const endStream = (0, $073a1d431124c308$exports.endStreamFromJson)(data);\n                            if (endStream.error) throw endStream.error;\n                            endStream.metadata.forEach((value, key)=>trailerTarget.set(key, value));\n                            continue;\n                        }\n                        yield yield $c892c532d475ad55$var$__await(parse(data));\n                    }\n                    if (!endStreamReceived) throw \"missing EndStreamResponse\";\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != $hNn7i.MethodKind.ServerStreaming) throw \"The fetch API does not support streaming request bodies\";\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) throw \"missing request message\";\n                return (0, $85618898c1be81b4$exports.encodeEnvelope)(0, serialize(r.value));\n            }\n            return await (0, $85618898c1be81b4$exports.runStreamingCall)({\n                interceptors: options.interceptors,\n                timeoutMs: timeoutMs,\n                signal: signal,\n                req: {\n                    stream: true,\n                    service: service,\n                    method: method,\n                    url: (0, $85618898c1be81b4$exports.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $073a1d431124c308$exports.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header),\n                    message: input\n                },\n                next: async (req)=>{\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), {\n                        headers: req.header,\n                        signal: req.signal,\n                        body: await createRequestBody(req.message)\n                    }));\n                    (0, $073a1d431124c308$exports.validateResponse)(method.kind, fRes.status, fRes.headers);\n                    if (fRes.body === null) throw \"missing response body\";\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), {\n                        header: fRes.headers,\n                        trailer: trailer,\n                        message: parseResponseBody(fRes.body, trailer)\n                    });\n                    return res;\n                }\n            });\n        }\n    };\n}\n$c892c532d475ad55$exports.createConnectTransport = $c892c532d475ad55$var$createConnectTransport;\n\n\nObject.defineProperty($bb5abba579f9f96c$exports, \"createConnectTransport\", {\n    enumerable: true,\n    get: function() {\n        return $c892c532d475ad55$exports.createConnectTransport;\n    }\n});\nvar $ebb60b8df3e53498$exports = {};\n\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar $ebb60b8df3e53498$var$__await = $ebb60b8df3e53498$exports && $ebb60b8df3e53498$exports.__await || function(v) {\n    return this instanceof $ebb60b8df3e53498$var$__await ? (this.v = v, this) : new $ebb60b8df3e53498$var$__await(v);\n};\nvar $ebb60b8df3e53498$var$__asyncGenerator = $ebb60b8df3e53498$exports && $ebb60b8df3e53498$exports.__asyncGenerator || function(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof $ebb60b8df3e53498$var$__await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n};\nObject.defineProperty($ebb60b8df3e53498$exports, \"__esModule\", {\n    value: true\n});\n$ebb60b8df3e53498$exports.createGrpcWebTransport = void 0;\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\n\nvar $43fd2868d32f080b$exports = {};\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// workaround for bundlers that do not support subpath exports.\n\n$43fd2868d32f080b$exports = (parcelRequire(\"lVcsM\"));\n\n\n\n/**\n * Create a Transport for the gRPC-web protocol. The protocol encodes\n * trailers in the response body and makes unary and server-streaming\n * methods available to web browsers. It uses the fetch API to make\n * HTTP requests.\n *\n * Note that this transport does not implement the grpc-web-text format,\n * which applies base64 encoding to the request and response bodies to\n * support reading streaming responses from an XMLHttpRequest.\n */ function $ebb60b8df3e53498$var$createGrpcWebTransport(options) {\n    var _a;\n    (0, $05f920a7fdf2108e$exports.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true;\n    return {\n        async unary (service, method, signal, timeoutMs, header, message) {\n            var _a;\n            const { normalize: normalize, serialize: serialize, parse: parse } = (0, $85618898c1be81b4$exports.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            return await (0, $85618898c1be81b4$exports.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: false,\n                    service: service,\n                    method: method,\n                    url: (0, $85618898c1be81b4$exports.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $43fd2868d32f080b$exports.requestHeader)(useBinaryFormat, timeoutMs, header),\n                    message: normalize(message)\n                },\n                next: async (req)=>{\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), {\n                        headers: req.header,\n                        signal: req.signal,\n                        body: (0, $85618898c1be81b4$exports.encodeEnvelope)(0, serialize(req.message))\n                    }));\n                    (0, $43fd2868d32f080b$exports.validateResponse)(response.status, response.headers);\n                    if (!response.body) throw \"missing response body\";\n                    const reader = (0, $85618898c1be81b4$exports.createEnvelopeReadableStream)(response.body).getReader();\n                    let trailer;\n                    let message;\n                    for(;;){\n                        const r = await reader.read();\n                        if (r.done) break;\n                        const { flags: flags, data: data } = r.value;\n                        if (flags === $43fd2868d32f080b$exports.trailerFlag) {\n                            if (trailer !== undefined) throw \"extra trailer\";\n                            // Unary responses require exactly one response message, but in\n                            // case of an error, it is perfectly valid to have a response body\n                            // that only contains error trailers.\n                            trailer = (0, $43fd2868d32f080b$exports.trailerParse)(data);\n                            continue;\n                        }\n                        if (message !== undefined) throw \"extra message\";\n                        message = parse(data);\n                    }\n                    if (trailer === undefined) throw \"missing trailer\";\n                    (0, $43fd2868d32f080b$exports.validateTrailer)(trailer);\n                    if (message === undefined) throw \"missing message\";\n                    return {\n                        stream: false,\n                        header: response.headers,\n                        message: message,\n                        trailer: trailer\n                    };\n                }\n            });\n        },\n        async stream (service, method, signal, timeoutMs, header, input) {\n            var _a;\n            const { serialize: serialize, parse: parse } = (0, $85618898c1be81b4$exports.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, foundStatus, trailerTarget) {\n                return $ebb60b8df3e53498$var$__asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0, $85618898c1be81b4$exports.createEnvelopeReadableStream)(body).getReader();\n                    if (foundStatus) {\n                        // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                        // response (a response without a body and no trailers).\n                        //\n                        // The spec seems to disallow a trailers-only response for status 0 - we are\n                        // lenient and only verify that the body is empty.\n                        //\n                        // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                        // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                        if (!(yield $ebb60b8df3e53498$var$__await(reader.read())).done) throw \"extra data for trailers-only\";\n                        return yield $ebb60b8df3e53498$var$__await(void 0);\n                    }\n                    let trailerReceived = false;\n                    for(;;){\n                        const result = yield $ebb60b8df3e53498$var$__await(reader.read());\n                        if (result.done) break;\n                        const { flags: flags, data: data } = result.value;\n                        if ((flags & $43fd2868d32f080b$exports.trailerFlag) === $43fd2868d32f080b$exports.trailerFlag) {\n                            if (trailerReceived) throw \"extra trailer\";\n                            trailerReceived = true;\n                            const trailer = (0, $43fd2868d32f080b$exports.trailerParse)(data);\n                            (0, $43fd2868d32f080b$exports.validateTrailer)(trailer);\n                            trailer.forEach((value, key)=>trailerTarget.set(key, value));\n                            continue;\n                        }\n                        if (trailerReceived) throw \"extra message\";\n                        yield yield $ebb60b8df3e53498$var$__await(parse(data));\n                        continue;\n                    }\n                    if (!trailerReceived) throw \"missing trailer\";\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != $hNn7i.MethodKind.ServerStreaming) throw \"The fetch API does not support streaming request bodies\";\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) throw \"missing request message\";\n                return (0, $85618898c1be81b4$exports.encodeEnvelope)(0, serialize(r.value));\n            }\n            return (0, $85618898c1be81b4$exports.runStreamingCall)({\n                interceptors: options.interceptors,\n                signal: signal,\n                timeoutMs: timeoutMs,\n                req: {\n                    stream: true,\n                    service: service,\n                    method: method,\n                    url: (0, $85618898c1be81b4$exports.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\"\n                    },\n                    header: (0, $43fd2868d32f080b$exports.requestHeader)(useBinaryFormat, timeoutMs, header),\n                    message: input\n                },\n                next: async (req)=>{\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), {\n                        headers: req.header,\n                        signal: req.signal,\n                        body: await createRequestBody(req.message)\n                    }));\n                    const { foundStatus: foundStatus } = (0, $43fd2868d32f080b$exports.validateResponse)(fRes.status, fRes.headers);\n                    if (!fRes.body) throw \"missing response body\";\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), {\n                        header: fRes.headers,\n                        trailer: trailer,\n                        message: parseResponseBody(fRes.body, foundStatus, trailer)\n                    });\n                    return res;\n                }\n            });\n        }\n    };\n}\n$ebb60b8df3e53498$exports.createGrpcWebTransport = $ebb60b8df3e53498$var$createGrpcWebTransport;\n\n\nObject.defineProperty($bb5abba579f9f96c$exports, \"createGrpcWebTransport\", {\n    enumerable: true,\n    get: function() {\n        return $ebb60b8df3e53498$exports.createGrpcWebTransport;\n    }\n});\n\n\n// @generated by protoc-gen-connect-es v0.12.0 with parameter \"target=ts\"\n// @generated from file golink/v1/golink.proto (package golink.v1, syntax proto3)\n/* eslint-disable */ // @ts-nocheck\n// @generated by protoc-gen-es v1.3.0 with parameter \"target=ts\"\n// @generated from file golink/v1/golink.proto (package golink.v1, syntax proto3)\n/* eslint-disable */ // @ts-nocheck\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\nclass $e85ef4e4708acee0$export$f2850b83364a06f extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        /**\n   * @generated from field: string url = 2;\n   */ this.url = \"\";\n        /**\n   * @generated from field: repeated string owners = 3;\n   */ this.owners = [];\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.Golink\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 2,\n                    name: \"url\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 3,\n                    name: \"owners\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ ,\n                    repeated: true\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$f2850b83364a06f().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$f2850b83364a06f().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$f2850b83364a06f().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$f2850b83364a06f, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$95c568565e56377b extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        /**\n   * @generated from field: string url = 2;\n   */ this.url = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.CreateGolinkRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 2,\n                    name: \"url\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$95c568565e56377b().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$95c568565e56377b().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$95c568565e56377b().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$95c568565e56377b, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$d0561031f3e5f6b3 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.CreateGolinkResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golink\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$d0561031f3e5f6b3().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$d0561031f3e5f6b3().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$d0561031f3e5f6b3().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$d0561031f3e5f6b3, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$176e77a363d6dd85 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.GetGolinkRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$176e77a363d6dd85().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$176e77a363d6dd85().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$176e77a363d6dd85().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$176e77a363d6dd85, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$b81e38a4ebf472e extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.GetGolinkResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golink\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$b81e38a4ebf472e().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$b81e38a4ebf472e().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$b81e38a4ebf472e().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$b81e38a4ebf472e, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$8ecb3010f5c08c83 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string owner = 1;\n   */ this.owner = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.ListGolinksRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"owner\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$8ecb3010f5c08c83().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$8ecb3010f5c08c83().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$8ecb3010f5c08c83().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$8ecb3010f5c08c83, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$64a6120861524b5c extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: repeated golink.v1.Golink golinks = 1;\n   */ this.golinks = [];\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.ListGolinksResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golinks\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f,\n                    repeated: true\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$64a6120861524b5c().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$64a6120861524b5c().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$64a6120861524b5c().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$64a6120861524b5c, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$dcc7c2e60581b008 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string url = 1;\n   */ this.url = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.ListGolinksByUrlRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"url\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$dcc7c2e60581b008().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$dcc7c2e60581b008().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$dcc7c2e60581b008().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$dcc7c2e60581b008, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$530b992b2baf63bb extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: repeated golink.v1.Golink golinks = 1;\n   */ this.golinks = [];\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.ListGolinksByUrlResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golinks\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f,\n                    repeated: true\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$530b992b2baf63bb().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$530b992b2baf63bb().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$530b992b2baf63bb().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$530b992b2baf63bb, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$7c7f741f624cedb5 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        /**\n   * @generated from field: string url = 2;\n   */ this.url = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.UpdateGolinkRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 2,\n                    name: \"url\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$7c7f741f624cedb5().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$7c7f741f624cedb5().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$7c7f741f624cedb5().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$7c7f741f624cedb5, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$2505ddf9464311a7 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.UpdateGolinkResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golink\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$2505ddf9464311a7().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$2505ddf9464311a7().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$2505ddf9464311a7().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$2505ddf9464311a7, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$fdd3d7e8d8deb018 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.DeleteGolinkRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$fdd3d7e8d8deb018().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$fdd3d7e8d8deb018().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$fdd3d7e8d8deb018().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$fdd3d7e8d8deb018, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$b4ec09bdda9aa5b8 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.DeleteGolinkResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$b4ec09bdda9aa5b8().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$b4ec09bdda9aa5b8().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$b4ec09bdda9aa5b8().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$b4ec09bdda9aa5b8, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$2e154683c494163b extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        /**\n   * email\n   *\n   * @generated from field: string owner = 2;\n   */ this.owner = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.AddOwnerRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 2,\n                    name: \"owner\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$2e154683c494163b().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$2e154683c494163b().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$2e154683c494163b().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$2e154683c494163b, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$aa2f45033b266548 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.AddOwnerResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golink\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$aa2f45033b266548().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$aa2f45033b266548().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$aa2f45033b266548().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$aa2f45033b266548, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$4167f916ddfb8355 extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        /**\n   * @generated from field: string name = 1;\n   */ this.name = \"\";\n        /**\n   * email\n   *\n   * @generated from field: string owner = 2;\n   */ this.owner = \"\";\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.RemoveOwnerRequest\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"name\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                },\n                {\n                    no: 2,\n                    name: \"owner\",\n                    kind: \"scalar\",\n                    T: 9 /* ScalarType.STRING */ \n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$4167f916ddfb8355().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$4167f916ddfb8355().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$4167f916ddfb8355().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$4167f916ddfb8355, a, b);\n    }\n}\nclass $e85ef4e4708acee0$export$f6c065a4c840b7dc extends (0, $hNn7i.Message) {\n    constructor(data){\n        super();\n        (0, $hNn7i.proto3).util.initPartial(data, this);\n    }\n    static #_ = (()=>{\n        this.runtime = (0, $hNn7i.proto3);\n    })();\n    static #_1 = (()=>{\n        this.typeName = \"golink.v1.RemoveOwnerResponse\";\n    })();\n    static #_2 = (()=>{\n        this.fields = (0, $hNn7i.proto3).util.newFieldList(()=>[\n                {\n                    no: 1,\n                    name: \"golink\",\n                    kind: \"message\",\n                    T: $e85ef4e4708acee0$export$f2850b83364a06f\n                }\n            ]);\n    })();\n    static fromBinary(bytes, options) {\n        return new $e85ef4e4708acee0$export$f6c065a4c840b7dc().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new $e85ef4e4708acee0$export$f6c065a4c840b7dc().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new $e85ef4e4708acee0$export$f6c065a4c840b7dc().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return (0, $hNn7i.proto3).util.equals($e85ef4e4708acee0$export$f6c065a4c840b7dc, a, b);\n    }\n}\n\n\n\nvar $hNn7i = parcelRequire(\"hNn7i\");\nconst $711c43b261558fea$export$512cb7579e4fe867 = {\n    typeName: \"golink.v1.GolinkService\",\n    methods: {\n        /**\n     * @generated from rpc golink.v1.GolinkService.CreateGolink\n     */ createGolink: {\n            name: \"CreateGolink\",\n            I: (0, $e85ef4e4708acee0$export$95c568565e56377b),\n            O: (0, $e85ef4e4708acee0$export$d0561031f3e5f6b3),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.GetGolink\n     */ getGolink: {\n            name: \"GetGolink\",\n            I: (0, $e85ef4e4708acee0$export$176e77a363d6dd85),\n            O: (0, $e85ef4e4708acee0$export$b81e38a4ebf472e),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.ListGolinks\n     */ listGolinks: {\n            name: \"ListGolinks\",\n            I: (0, $e85ef4e4708acee0$export$8ecb3010f5c08c83),\n            O: (0, $e85ef4e4708acee0$export$64a6120861524b5c),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.ListGolinksByUrl\n     */ listGolinksByUrl: {\n            name: \"ListGolinksByUrl\",\n            I: (0, $e85ef4e4708acee0$export$dcc7c2e60581b008),\n            O: (0, $e85ef4e4708acee0$export$530b992b2baf63bb),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.UpdateGolink\n     */ updateGolink: {\n            name: \"UpdateGolink\",\n            I: (0, $e85ef4e4708acee0$export$7c7f741f624cedb5),\n            O: (0, $e85ef4e4708acee0$export$2505ddf9464311a7),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.DeleteGolink\n     */ deleteGolink: {\n            name: \"DeleteGolink\",\n            I: (0, $e85ef4e4708acee0$export$fdd3d7e8d8deb018),\n            O: (0, $e85ef4e4708acee0$export$b4ec09bdda9aa5b8),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.AddOwner\n     */ addOwner: {\n            name: \"AddOwner\",\n            I: (0, $e85ef4e4708acee0$export$2e154683c494163b),\n            O: (0, $e85ef4e4708acee0$export$aa2f45033b266548),\n            kind: (0, $hNn7i.MethodKind).Unary\n        },\n        /**\n     * @generated from rpc golink.v1.GolinkService.RemoveOwner\n     */ removeOwner: {\n            name: \"RemoveOwner\",\n            I: (0, $e85ef4e4708acee0$export$4167f916ddfb8355),\n            O: (0, $e85ef4e4708acee0$export$f6c065a4c840b7dc),\n            kind: (0, $hNn7i.MethodKind).Unary\n        }\n    }\n};\n\n\nconst $566c8d9d74c4fb47$var$golinkUrlKey = \"golinkUrl\";\nclass $566c8d9d74c4fb47$var$GolinkPopup {\n    constructor(url){\n        this.onSave = async ()=>{\n            const name = document.getElementById(\"name\").value;\n            const url = document.getElementById(\"url\").value;\n            if (!name || !url) {\n                alert(\"name and url are required\");\n                return;\n            }\n            try {\n                await this.client.createGolink({\n                    name: name,\n                    url: url\n                });\n                document.getElementById(\"save\").hidden = true;\n                document.getElementById(\"saved\").hidden = false;\n            } catch (rawErr) {\n                const err = (0, $d29c05496bcb6d6e$exports.ConnectError).from(rawErr);\n                alert(err.message);\n            }\n        };\n        this.openConsole = async ()=>{\n            chrome.tabs.create({\n                url: this.url + \"c\"\n            });\n        };\n        this.url = url;\n        if (this.url) {\n            if (!this.url.endsWith(\"/\")) this.url += \"/\";\n            this.api = this.url + \"api\";\n            this.buildClient();\n        }\n    }\n    static async create() {\n        const url = (await chrome.storage.sync.get($566c8d9d74c4fb47$var$golinkUrlKey))[$566c8d9d74c4fb47$var$golinkUrlKey];\n        return new $566c8d9d74c4fb47$var$GolinkPopup(url);\n    }\n    async initialize() {\n        const notConfiguredElem = document.getElementById(\"not-configured\");\n        const unauthenticatedElem = document.getElementById(\"unauthenticated\");\n        const golinkUiElem = document.getElementById(\"golink-ui\");\n        const showNotConfigured = ()=>{\n            notConfiguredElem.hidden = false;\n            unauthenticatedElem.hidden = true;\n            golinkUiElem.hidden = true;\n        };\n        const showUnauthenticated = ()=>{\n            notConfiguredElem.hidden = true;\n            unauthenticatedElem.hidden = false;\n            golinkUiElem.hidden = true;\n        };\n        const showGolinkUi = ()=>{\n            notConfiguredElem.hidden = true;\n            unauthenticatedElem.hidden = true;\n            golinkUiElem.hidden = false;\n        };\n        if (!this.url) {\n            showNotConfigured();\n            return;\n        }\n        if (await this.checkAuth()) {\n            const tabs = await chrome.tabs.query({\n                active: true,\n                currentWindow: true\n            });\n            if (tabs.length > 0) {\n                const title = tabs[0].title || \"\";\n                document.getElementById(\"tab-title\").innerText = title;\n                document.getElementById(\"url\").value = tabs[0].url;\n                const match = title.match(/go\\/(?<name>[\\w-]+)/);\n                document.getElementById(\"name\").value = match?.groups?.name || \"\";\n            }\n            showGolinkUi();\n            await this.listGolinks();\n        } else showUnauthenticated();\n    }\n    async checkAuth() {\n        try {\n            const res = await fetch(this.api + \"/healthz\", {\n                credentials: \"include\"\n            });\n            return res.status === 200;\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n    buildClient() {\n        if (!this.url) return;\n        const transport = (0, $bb5abba579f9f96c$exports.createConnectTransport)({\n            baseUrl: this.api,\n            credentials: \"include\"\n        });\n        this.client = (0, $d29c05496bcb6d6e$exports.createPromiseClient)((0, $711c43b261558fea$export$512cb7579e4fe867), transport);\n    }\n    async listGolinks() {\n        const url = document.getElementById(\"url\").value;\n        if (!url) return;\n        try {\n            const res = await this.client.listGolinksByUrl({\n                url: url\n            });\n            const golinks = res.golinks;\n            if (golinks.length === 0) return;\n            const ul = document.getElementById(\"golinks\");\n            golinks.forEach((golink)=>{\n                const li = document.createElement(\"li\");\n                const a = document.createElement(\"a\");\n                a.href = golink.url;\n                a.innerText = \"go/\" + golink.name;\n                li.appendChild(a);\n                ul.appendChild(li);\n            });\n            document.getElementById(\"golinks-container\").hidden = false;\n        } catch (rawErr) {\n            const err = (0, $d29c05496bcb6d6e$exports.ConnectError).from(rawErr);\n            alert(err.message);\n        }\n    }\n}\nasync function $566c8d9d74c4fb47$var$initialize() {\n    const popup = await $566c8d9d74c4fb47$var$GolinkPopup.create();\n    await popup.initialize();\n    document.getElementById(\"open-options\").addEventListener(\"click\", async ()=>{\n        await chrome.runtime.openOptionsPage();\n    });\n    document.getElementById(\"open-console\").addEventListener(\"click\", popup.openConsole);\n    document.getElementById(\"save\").addEventListener(\"click\", popup.onSave);\n    console.log(\"initialized\");\n}\n$566c8d9d74c4fb47$var$initialize();\n\n\n//# sourceMappingURL=popup.861d9116.js.map\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GeneratedCodeInfo_Annotation_Semantic = exports.GeneratedCodeInfo_Annotation = exports.GeneratedCodeInfo = exports.SourceCodeInfo_Location = exports.SourceCodeInfo = exports.UninterpretedOption_NamePart = exports.UninterpretedOption = exports.MethodOptions_IdempotencyLevel = exports.MethodOptions = exports.ServiceOptions = exports.EnumValueOptions = exports.EnumOptions = exports.OneofOptions = exports.FieldOptions_OptionTargetType = exports.FieldOptions_OptionRetention = exports.FieldOptions_JSType = exports.FieldOptions_CType = exports.FieldOptions = exports.MessageOptions = exports.FileOptions_OptimizeMode = exports.FileOptions = exports.MethodDescriptorProto = exports.ServiceDescriptorProto = exports.EnumValueDescriptorProto = exports.EnumDescriptorProto_EnumReservedRange = exports.EnumDescriptorProto = exports.OneofDescriptorProto = exports.FieldDescriptorProto_Label = exports.FieldDescriptorProto_Type = exports.FieldDescriptorProto = exports.ExtensionRangeOptions_Declaration = exports.ExtensionRangeOptions_VerificationState = exports.ExtensionRangeOptions = exports.DescriptorProto_ReservedRange = exports.DescriptorProto_ExtensionRange = exports.DescriptorProto = exports.FileDescriptorProto = exports.FileDescriptorSet = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto2_js_1 = require(\"../../proto2.js\");\n/**\n * The protocol compiler can output a FileDescriptorSet containing the .proto\n * files it parses.\n *\n * @generated from message google.protobuf.FileDescriptorSet\n */\nclass FileDescriptorSet extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FileDescriptorProto file = 1;\n         */\n        this.file = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorSet().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorSet().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorSet().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(FileDescriptorSet, a, b);\n    }\n}\nexports.FileDescriptorSet = FileDescriptorSet;\nFileDescriptorSet.runtime = proto2_js_1.proto2;\nFileDescriptorSet.typeName = \"google.protobuf.FileDescriptorSet\";\nFileDescriptorSet.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"file\", kind: \"message\", T: FileDescriptorProto, repeated: true },\n]);\n/**\n * Describes a complete .proto file.\n *\n * @generated from message google.protobuf.FileDescriptorProto\n */\nclass FileDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Names of files imported by this file.\n         *\n         * @generated from field: repeated string dependency = 3;\n         */\n        this.dependency = [];\n        /**\n         * Indexes of the public imported files in the dependency list above.\n         *\n         * @generated from field: repeated int32 public_dependency = 10;\n         */\n        this.publicDependency = [];\n        /**\n         * Indexes of the weak imported files in the dependency list.\n         * For Google-internal migration only. Do not use.\n         *\n         * @generated from field: repeated int32 weak_dependency = 11;\n         */\n        this.weakDependency = [];\n        /**\n         * All top-level definitions in this file.\n         *\n         * @generated from field: repeated google.protobuf.DescriptorProto message_type = 4;\n         */\n        this.messageType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 5;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.ServiceDescriptorProto service = 6;\n         */\n        this.service = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 7;\n         */\n        this.extension = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(FileDescriptorProto, a, b);\n    }\n}\nexports.FileDescriptorProto = FileDescriptorProto;\nFileDescriptorProto.runtime = proto2_js_1.proto2;\nFileDescriptorProto.typeName = \"google.protobuf.FileDescriptorProto\";\nFileDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"dependency\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 10, name: \"public_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 11, name: \"weak_dependency\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true },\n    { no: 4, name: \"message_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 5, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 6, name: \"service\", kind: \"message\", T: ServiceDescriptorProto, repeated: true },\n    { no: 7, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FileOptions, opt: true },\n    { no: 9, name: \"source_code_info\", kind: \"message\", T: SourceCodeInfo, opt: true },\n    { no: 12, name: \"syntax\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 13, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * Describes a message type.\n *\n * @generated from message google.protobuf.DescriptorProto\n */\nclass DescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto field = 2;\n         */\n        this.field = [];\n        /**\n         * @generated from field: repeated google.protobuf.FieldDescriptorProto extension = 6;\n         */\n        this.extension = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto nested_type = 3;\n         */\n        this.nestedType = [];\n        /**\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto enum_type = 4;\n         */\n        this.enumType = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;\n         */\n        this.extensionRange = [];\n        /**\n         * @generated from field: repeated google.protobuf.OneofDescriptorProto oneof_decl = 8;\n         */\n        this.oneofDecl = [];\n        /**\n         * @generated from field: repeated google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved field names, which may not be used by fields in the same message.\n         * A given name may only be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 10;\n         */\n        this.reservedName = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(DescriptorProto, a, b);\n    }\n}\nexports.DescriptorProto = DescriptorProto;\nDescriptorProto.runtime = proto2_js_1.proto2;\nDescriptorProto.typeName = \"google.protobuf.DescriptorProto\";\nDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"field\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 6, name: \"extension\", kind: \"message\", T: FieldDescriptorProto, repeated: true },\n    { no: 3, name: \"nested_type\", kind: \"message\", T: DescriptorProto, repeated: true },\n    { no: 4, name: \"enum_type\", kind: \"message\", T: EnumDescriptorProto, repeated: true },\n    { no: 5, name: \"extension_range\", kind: \"message\", T: DescriptorProto_ExtensionRange, repeated: true },\n    { no: 8, name: \"oneof_decl\", kind: \"message\", T: OneofDescriptorProto, repeated: true },\n    { no: 7, name: \"options\", kind: \"message\", T: MessageOptions, opt: true },\n    { no: 9, name: \"reserved_range\", kind: \"message\", T: DescriptorProto_ReservedRange, repeated: true },\n    { no: 10, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.DescriptorProto.ExtensionRange\n */\nclass DescriptorProto_ExtensionRange extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ExtensionRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ExtensionRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ExtensionRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(DescriptorProto_ExtensionRange, a, b);\n    }\n}\nexports.DescriptorProto_ExtensionRange = DescriptorProto_ExtensionRange;\nDescriptorProto_ExtensionRange.runtime = proto2_js_1.proto2;\nDescriptorProto_ExtensionRange.typeName = \"google.protobuf.DescriptorProto.ExtensionRange\";\nDescriptorProto_ExtensionRange.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ExtensionRangeOptions, opt: true },\n]);\n/**\n * Range of reserved tag numbers. Reserved tag numbers may not be used by\n * fields or extension ranges in the same message. Reserved ranges may\n * not overlap.\n *\n * @generated from message google.protobuf.DescriptorProto.ReservedRange\n */\nclass DescriptorProto_ReservedRange extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DescriptorProto_ReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DescriptorProto_ReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DescriptorProto_ReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(DescriptorProto_ReservedRange, a, b);\n    }\n}\nexports.DescriptorProto_ReservedRange = DescriptorProto_ReservedRange;\nDescriptorProto_ReservedRange.runtime = proto2_js_1.proto2;\nDescriptorProto_ReservedRange.typeName = \"google.protobuf.DescriptorProto.ReservedRange\";\nDescriptorProto_ReservedRange.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions\n */\nclass ExtensionRangeOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        /**\n         * go/protobuf-stripping-extension-declarations\n         * Like Metadata, but we use a repeated field to hold all extension\n         * declarations. This should avoid the size increases of transforming a large\n         * extension range into small ranges in generated binaries.\n         *\n         * @generated from field: repeated google.protobuf.ExtensionRangeOptions.Declaration declaration = 2;\n         */\n        this.declaration = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(ExtensionRangeOptions, a, b);\n    }\n}\nexports.ExtensionRangeOptions = ExtensionRangeOptions;\nExtensionRangeOptions.runtime = proto2_js_1.proto2;\nExtensionRangeOptions.typeName = \"google.protobuf.ExtensionRangeOptions\";\nExtensionRangeOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n    { no: 2, name: \"declaration\", kind: \"message\", T: ExtensionRangeOptions_Declaration, repeated: true },\n    { no: 3, name: \"verification\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(ExtensionRangeOptions_VerificationState), opt: true, default: ExtensionRangeOptions_VerificationState.UNVERIFIED },\n]);\n/**\n * The verification state of the extension range.\n *\n * @generated from enum google.protobuf.ExtensionRangeOptions.VerificationState\n */\nvar ExtensionRangeOptions_VerificationState;\n(function (ExtensionRangeOptions_VerificationState) {\n    /**\n     * All the extensions of the range must be declared.\n     *\n     * @generated from enum value: DECLARATION = 0;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"DECLARATION\"] = 0] = \"DECLARATION\";\n    /**\n     * @generated from enum value: UNVERIFIED = 1;\n     */\n    ExtensionRangeOptions_VerificationState[ExtensionRangeOptions_VerificationState[\"UNVERIFIED\"] = 1] = \"UNVERIFIED\";\n})(ExtensionRangeOptions_VerificationState || (exports.ExtensionRangeOptions_VerificationState = ExtensionRangeOptions_VerificationState = {}));\n// Retrieve enum metadata with: proto2.getEnumType(ExtensionRangeOptions_VerificationState)\nproto2_js_1.proto2.util.setEnumType(ExtensionRangeOptions_VerificationState, \"google.protobuf.ExtensionRangeOptions.VerificationState\", [\n    { no: 0, name: \"DECLARATION\" },\n    { no: 1, name: \"UNVERIFIED\" },\n]);\n/**\n * @generated from message google.protobuf.ExtensionRangeOptions.Declaration\n */\nclass ExtensionRangeOptions_Declaration extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ExtensionRangeOptions_Declaration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ExtensionRangeOptions_Declaration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ExtensionRangeOptions_Declaration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(ExtensionRangeOptions_Declaration, a, b);\n    }\n}\nexports.ExtensionRangeOptions_Declaration = ExtensionRangeOptions_Declaration;\nExtensionRangeOptions_Declaration.runtime = proto2_js_1.proto2;\nExtensionRangeOptions_Declaration.typeName = \"google.protobuf.ExtensionRangeOptions.Declaration\";\nExtensionRangeOptions_Declaration.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"full_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"is_repeated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 5, name: \"reserved\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"repeated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * Describes a field within a message.\n *\n * @generated from message google.protobuf.FieldDescriptorProto\n */\nclass FieldDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(FieldDescriptorProto, a, b);\n    }\n}\nexports.FieldDescriptorProto = FieldDescriptorProto;\nFieldDescriptorProto.runtime = proto2_js_1.proto2;\nFieldDescriptorProto.typeName = \"google.protobuf.FieldDescriptorProto\";\nFieldDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"label\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldDescriptorProto_Label), opt: true },\n    { no: 5, name: \"type\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldDescriptorProto_Type), opt: true },\n    { no: 6, name: \"type_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"extendee\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 7, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 9, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"options\", kind: \"message\", T: FieldOptions, opt: true },\n    { no: 17, name: \"proto3_optional\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Type\n */\nvar FieldDescriptorProto_Type;\n(function (FieldDescriptorProto_Type) {\n    /**\n     * 0 is reserved for errors.\n     * Order is weird for historical reasons.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    /**\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FLOAT\"] = 2] = \"FLOAT\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT64\"] = 3] = \"INT64\";\n    /**\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT64\"] = 4] = \"UINT64\";\n    /**\n     * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n     * negative values are likely.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"INT32\"] = 5] = \"INT32\";\n    /**\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED64\"] = 6] = \"FIXED64\";\n    /**\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"FIXED32\"] = 7] = \"FIXED32\";\n    /**\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BOOL\"] = 8] = \"BOOL\";\n    /**\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"STRING\"] = 9] = \"STRING\";\n    /**\n     * Tag-delimited aggregate.\n     * Group type is deprecated and not supported in proto3. However, Proto3\n     * implementations should still be able to parse the group wire format and\n     * treat group fields as unknown fields.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"GROUP\"] = 10] = \"GROUP\";\n    /**\n     * Length-delimited aggregate.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"MESSAGE\"] = 11] = \"MESSAGE\";\n    /**\n     * New in version 2.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"BYTES\"] = 12] = \"BYTES\";\n    /**\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"UINT32\"] = 13] = \"UINT32\";\n    /**\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"ENUM\"] = 14] = \"ENUM\";\n    /**\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    /**\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT32\"] = 17] = \"SINT32\";\n    /**\n     * Uses ZigZag encoding.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    FieldDescriptorProto_Type[FieldDescriptorProto_Type[\"SINT64\"] = 18] = \"SINT64\";\n})(FieldDescriptorProto_Type || (exports.FieldDescriptorProto_Type = FieldDescriptorProto_Type = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Type)\nproto2_js_1.proto2.util.setEnumType(FieldDescriptorProto_Type, \"google.protobuf.FieldDescriptorProto.Type\", [\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldDescriptorProto.Label\n */\nvar FieldDescriptorProto_Label;\n(function (FieldDescriptorProto_Label) {\n    /**\n     * 0 is reserved for errors\n     *\n     * @generated from enum value: LABEL_OPTIONAL = 1;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * @generated from enum value: LABEL_REQUIRED = 2;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * @generated from enum value: LABEL_REPEATED = 3;\n     */\n    FieldDescriptorProto_Label[FieldDescriptorProto_Label[\"REPEATED\"] = 3] = \"REPEATED\";\n})(FieldDescriptorProto_Label || (exports.FieldDescriptorProto_Label = FieldDescriptorProto_Label = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldDescriptorProto_Label)\nproto2_js_1.proto2.util.setEnumType(FieldDescriptorProto_Label, \"google.protobuf.FieldDescriptorProto.Label\", [\n    { no: 1, name: \"LABEL_OPTIONAL\" },\n    { no: 2, name: \"LABEL_REQUIRED\" },\n    { no: 3, name: \"LABEL_REPEATED\" },\n]);\n/**\n * Describes a oneof.\n *\n * @generated from message google.protobuf.OneofDescriptorProto\n */\nclass OneofDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(OneofDescriptorProto, a, b);\n    }\n}\nexports.OneofDescriptorProto = OneofDescriptorProto;\nOneofDescriptorProto.runtime = proto2_js_1.proto2;\nOneofDescriptorProto.typeName = \"google.protobuf.OneofDescriptorProto\";\nOneofDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"options\", kind: \"message\", T: OneofOptions, opt: true },\n]);\n/**\n * Describes an enum type.\n *\n * @generated from message google.protobuf.EnumDescriptorProto\n */\nclass EnumDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.EnumValueDescriptorProto value = 2;\n         */\n        this.value = [];\n        /**\n         * Range of reserved numeric values. Reserved numeric values may not be used\n         * by enum values in the same enum declaration. Reserved ranges may not\n         * overlap.\n         *\n         * @generated from field: repeated google.protobuf.EnumDescriptorProto.EnumReservedRange reserved_range = 4;\n         */\n        this.reservedRange = [];\n        /**\n         * Reserved enum value names, which may not be reused. A given name may only\n         * be reserved once.\n         *\n         * @generated from field: repeated string reserved_name = 5;\n         */\n        this.reservedName = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(EnumDescriptorProto, a, b);\n    }\n}\nexports.EnumDescriptorProto = EnumDescriptorProto;\nEnumDescriptorProto.runtime = proto2_js_1.proto2;\nEnumDescriptorProto.typeName = \"google.protobuf.EnumDescriptorProto\";\nEnumDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"value\", kind: \"message\", T: EnumValueDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumOptions, opt: true },\n    { no: 4, name: \"reserved_range\", kind: \"message\", T: EnumDescriptorProto_EnumReservedRange, repeated: true },\n    { no: 5, name: \"reserved_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Range of reserved numeric values. Reserved values may not be used by\n * entries in the same enum. Reserved ranges may not overlap.\n *\n * Note that this is distinct from DescriptorProto.ReservedRange in that it\n * is inclusive such that it can appropriately represent the entire int32\n * domain.\n *\n * @generated from message google.protobuf.EnumDescriptorProto.EnumReservedRange\n */\nclass EnumDescriptorProto_EnumReservedRange extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumDescriptorProto_EnumReservedRange().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(EnumDescriptorProto_EnumReservedRange, a, b);\n    }\n}\nexports.EnumDescriptorProto_EnumReservedRange = EnumDescriptorProto_EnumReservedRange;\nEnumDescriptorProto_EnumReservedRange.runtime = proto2_js_1.proto2;\nEnumDescriptorProto_EnumReservedRange.typeName = \"google.protobuf.EnumDescriptorProto.EnumReservedRange\";\nEnumDescriptorProto_EnumReservedRange.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"start\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * Describes a value within an enum.\n *\n * @generated from message google.protobuf.EnumValueDescriptorProto\n */\nclass EnumValueDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(EnumValueDescriptorProto, a, b);\n    }\n}\nexports.EnumValueDescriptorProto = EnumValueDescriptorProto;\nEnumValueDescriptorProto.runtime = proto2_js_1.proto2;\nEnumValueDescriptorProto.typeName = \"google.protobuf.EnumValueDescriptorProto\";\nEnumValueDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"options\", kind: \"message\", T: EnumValueOptions, opt: true },\n]);\n/**\n * Describes a service.\n *\n * @generated from message google.protobuf.ServiceDescriptorProto\n */\nclass ServiceDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.MethodDescriptorProto method = 2;\n         */\n        this.method = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(ServiceDescriptorProto, a, b);\n    }\n}\nexports.ServiceDescriptorProto = ServiceDescriptorProto;\nServiceDescriptorProto.runtime = proto2_js_1.proto2;\nServiceDescriptorProto.typeName = \"google.protobuf.ServiceDescriptorProto\";\nServiceDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"method\", kind: \"message\", T: MethodDescriptorProto, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: ServiceOptions, opt: true },\n]);\n/**\n * Describes a method of a service.\n *\n * @generated from message google.protobuf.MethodDescriptorProto\n */\nclass MethodDescriptorProto extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodDescriptorProto().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodDescriptorProto().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodDescriptorProto().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(MethodDescriptorProto, a, b);\n    }\n}\nexports.MethodDescriptorProto = MethodDescriptorProto;\nMethodDescriptorProto.runtime = proto2_js_1.proto2;\nMethodDescriptorProto.typeName = \"google.protobuf.MethodDescriptorProto\";\nMethodDescriptorProto.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"input_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"output_type\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"options\", kind: \"message\", T: MethodOptions, opt: true },\n    { no: 5, name: \"client_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"server_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n]);\n/**\n * @generated from message google.protobuf.FileOptions\n */\nclass FileOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here.\n         * See the documentation for the \"Options\" section above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FileOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FileOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FileOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(FileOptions, a, b);\n    }\n}\nexports.FileOptions = FileOptions;\nFileOptions.runtime = proto2_js_1.proto2;\nFileOptions.typeName = \"google.protobuf.FileOptions\";\nFileOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"java_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 8, name: \"java_outer_classname\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 10, name: \"java_multiple_files\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 20, name: \"java_generate_equals_and_hash\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 27, name: \"java_string_check_utf8\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 9, name: \"optimize_for\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FileOptions_OptimizeMode), opt: true, default: FileOptions_OptimizeMode.SPEED },\n    { no: 11, name: \"go_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"cc_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"java_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 18, name: \"py_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 42, name: \"php_generic_services\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 23, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 31, name: \"cc_enable_arenas\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: true },\n    { no: 36, name: \"objc_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 37, name: \"csharp_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 39, name: \"swift_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 40, name: \"php_class_prefix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 41, name: \"php_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 44, name: \"php_metadata_namespace\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 45, name: \"ruby_package\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Generated classes can be optimized for speed or code size.\n *\n * @generated from enum google.protobuf.FileOptions.OptimizeMode\n */\nvar FileOptions_OptimizeMode;\n(function (FileOptions_OptimizeMode) {\n    /**\n     * Generate complete code for parsing, serialization,\n     *\n     * @generated from enum value: SPEED = 1;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"SPEED\"] = 1] = \"SPEED\";\n    /**\n     * etc.\n     *\n     * Use ReflectionOps to implement these methods.\n     *\n     * @generated from enum value: CODE_SIZE = 2;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"CODE_SIZE\"] = 2] = \"CODE_SIZE\";\n    /**\n     * Generate code using MessageLite and the lite runtime.\n     *\n     * @generated from enum value: LITE_RUNTIME = 3;\n     */\n    FileOptions_OptimizeMode[FileOptions_OptimizeMode[\"LITE_RUNTIME\"] = 3] = \"LITE_RUNTIME\";\n})(FileOptions_OptimizeMode || (exports.FileOptions_OptimizeMode = FileOptions_OptimizeMode = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FileOptions_OptimizeMode)\nproto2_js_1.proto2.util.setEnumType(FileOptions_OptimizeMode, \"google.protobuf.FileOptions.OptimizeMode\", [\n    { no: 1, name: \"SPEED\" },\n    { no: 2, name: \"CODE_SIZE\" },\n    { no: 3, name: \"LITE_RUNTIME\" },\n]);\n/**\n * @generated from message google.protobuf.MessageOptions\n */\nclass MessageOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MessageOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MessageOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MessageOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(MessageOptions, a, b);\n    }\n}\nexports.MessageOptions = MessageOptions;\nMessageOptions.runtime = proto2_js_1.proto2;\nMessageOptions.typeName = \"google.protobuf.MessageOptions\";\nMessageOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"message_set_wire_format\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 2, name: \"no_standard_descriptor_accessor\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 7, name: \"map_entry\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 11, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.FieldOptions\n */\nclass FieldOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.FieldOptions.OptionTargetType targets = 19;\n         */\n        this.targets = [];\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new FieldOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(FieldOptions, a, b);\n    }\n}\nexports.FieldOptions = FieldOptions;\nFieldOptions.runtime = proto2_js_1.proto2;\nFieldOptions.typeName = \"google.protobuf.FieldOptions\";\nFieldOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"ctype\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldOptions_CType), opt: true, default: FieldOptions_CType.STRING },\n    { no: 2, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 6, name: \"jstype\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldOptions_JSType), opt: true, default: FieldOptions_JSType.JS_NORMAL },\n    { no: 5, name: \"lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 15, name: \"unverified_lazy\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 10, name: \"weak\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 16, name: \"debug_redact\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 17, name: \"retention\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldOptions_OptionRetention), opt: true },\n    { no: 18, name: \"target\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldOptions_OptionTargetType), opt: true },\n    { no: 19, name: \"targets\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(FieldOptions_OptionTargetType), repeated: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.CType\n */\nvar FieldOptions_CType;\n(function (FieldOptions_CType) {\n    /**\n     * Default mode.\n     *\n     * @generated from enum value: STRING = 0;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING\"] = 0] = \"STRING\";\n    /**\n     * The option [ctype=CORD] may be applied to a non-repeated field of type\n     * \"bytes\". It indicates that in C++, the data should be stored in a Cord\n     * instead of a string.  For very large strings, this may reduce memory\n     * fragmentation. It may also allow better performance when parsing from a\n     * Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n     * alias the original buffer.\n     *\n     * @generated from enum value: CORD = 1;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"CORD\"] = 1] = \"CORD\";\n    /**\n     * @generated from enum value: STRING_PIECE = 2;\n     */\n    FieldOptions_CType[FieldOptions_CType[\"STRING_PIECE\"] = 2] = \"STRING_PIECE\";\n})(FieldOptions_CType || (exports.FieldOptions_CType = FieldOptions_CType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_CType)\nproto2_js_1.proto2.util.setEnumType(FieldOptions_CType, \"google.protobuf.FieldOptions.CType\", [\n    { no: 0, name: \"STRING\" },\n    { no: 1, name: \"CORD\" },\n    { no: 2, name: \"STRING_PIECE\" },\n]);\n/**\n * @generated from enum google.protobuf.FieldOptions.JSType\n */\nvar FieldOptions_JSType;\n(function (FieldOptions_JSType) {\n    /**\n     * Use the default type.\n     *\n     * @generated from enum value: JS_NORMAL = 0;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NORMAL\"] = 0] = \"JS_NORMAL\";\n    /**\n     * Use JavaScript strings.\n     *\n     * @generated from enum value: JS_STRING = 1;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_STRING\"] = 1] = \"JS_STRING\";\n    /**\n     * Use JavaScript numbers.\n     *\n     * @generated from enum value: JS_NUMBER = 2;\n     */\n    FieldOptions_JSType[FieldOptions_JSType[\"JS_NUMBER\"] = 2] = \"JS_NUMBER\";\n})(FieldOptions_JSType || (exports.FieldOptions_JSType = FieldOptions_JSType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_JSType)\nproto2_js_1.proto2.util.setEnumType(FieldOptions_JSType, \"google.protobuf.FieldOptions.JSType\", [\n    { no: 0, name: \"JS_NORMAL\" },\n    { no: 1, name: \"JS_STRING\" },\n    { no: 2, name: \"JS_NUMBER\" },\n]);\n/**\n * If set to RETENTION_SOURCE, the option will be omitted from the binary.\n * Note: as of January 2023, support for this is in progress and does not yet\n * have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionRetention\n */\nvar FieldOptions_OptionRetention;\n(function (FieldOptions_OptionRetention) {\n    /**\n     * @generated from enum value: RETENTION_UNKNOWN = 0;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_UNKNOWN\"] = 0] = \"RETENTION_UNKNOWN\";\n    /**\n     * @generated from enum value: RETENTION_RUNTIME = 1;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_RUNTIME\"] = 1] = \"RETENTION_RUNTIME\";\n    /**\n     * @generated from enum value: RETENTION_SOURCE = 2;\n     */\n    FieldOptions_OptionRetention[FieldOptions_OptionRetention[\"RETENTION_SOURCE\"] = 2] = \"RETENTION_SOURCE\";\n})(FieldOptions_OptionRetention || (exports.FieldOptions_OptionRetention = FieldOptions_OptionRetention = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionRetention)\nproto2_js_1.proto2.util.setEnumType(FieldOptions_OptionRetention, \"google.protobuf.FieldOptions.OptionRetention\", [\n    { no: 0, name: \"RETENTION_UNKNOWN\" },\n    { no: 1, name: \"RETENTION_RUNTIME\" },\n    { no: 2, name: \"RETENTION_SOURCE\" },\n]);\n/**\n * This indicates the types of entities that the field may apply to when used\n * as an option. If it is unset, then the field may be freely used as an\n * option on any kind of entity. Note: as of January 2023, support for this is\n * in progress and does not yet have an effect (b/264593489).\n *\n * @generated from enum google.protobuf.FieldOptions.OptionTargetType\n */\nvar FieldOptions_OptionTargetType;\n(function (FieldOptions_OptionTargetType) {\n    /**\n     * @generated from enum value: TARGET_TYPE_UNKNOWN = 0;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_UNKNOWN\"] = 0] = \"TARGET_TYPE_UNKNOWN\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FILE = 1;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FILE\"] = 1] = \"TARGET_TYPE_FILE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_EXTENSION_RANGE = 2;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_EXTENSION_RANGE\"] = 2] = \"TARGET_TYPE_EXTENSION_RANGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_MESSAGE = 3;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_MESSAGE\"] = 3] = \"TARGET_TYPE_MESSAGE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_FIELD = 4;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_FIELD\"] = 4] = \"TARGET_TYPE_FIELD\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ONEOF = 5;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ONEOF\"] = 5] = \"TARGET_TYPE_ONEOF\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM = 6;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM\"] = 6] = \"TARGET_TYPE_ENUM\";\n    /**\n     * @generated from enum value: TARGET_TYPE_ENUM_ENTRY = 7;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_ENUM_ENTRY\"] = 7] = \"TARGET_TYPE_ENUM_ENTRY\";\n    /**\n     * @generated from enum value: TARGET_TYPE_SERVICE = 8;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_SERVICE\"] = 8] = \"TARGET_TYPE_SERVICE\";\n    /**\n     * @generated from enum value: TARGET_TYPE_METHOD = 9;\n     */\n    FieldOptions_OptionTargetType[FieldOptions_OptionTargetType[\"TARGET_TYPE_METHOD\"] = 9] = \"TARGET_TYPE_METHOD\";\n})(FieldOptions_OptionTargetType || (exports.FieldOptions_OptionTargetType = FieldOptions_OptionTargetType = {}));\n// Retrieve enum metadata with: proto2.getEnumType(FieldOptions_OptionTargetType)\nproto2_js_1.proto2.util.setEnumType(FieldOptions_OptionTargetType, \"google.protobuf.FieldOptions.OptionTargetType\", [\n    { no: 0, name: \"TARGET_TYPE_UNKNOWN\" },\n    { no: 1, name: \"TARGET_TYPE_FILE\" },\n    { no: 2, name: \"TARGET_TYPE_EXTENSION_RANGE\" },\n    { no: 3, name: \"TARGET_TYPE_MESSAGE\" },\n    { no: 4, name: \"TARGET_TYPE_FIELD\" },\n    { no: 5, name: \"TARGET_TYPE_ONEOF\" },\n    { no: 6, name: \"TARGET_TYPE_ENUM\" },\n    { no: 7, name: \"TARGET_TYPE_ENUM_ENTRY\" },\n    { no: 8, name: \"TARGET_TYPE_SERVICE\" },\n    { no: 9, name: \"TARGET_TYPE_METHOD\" },\n]);\n/**\n * @generated from message google.protobuf.OneofOptions\n */\nclass OneofOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new OneofOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new OneofOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new OneofOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(OneofOptions, a, b);\n    }\n}\nexports.OneofOptions = OneofOptions;\nOneofOptions.runtime = proto2_js_1.proto2;\nOneofOptions.typeName = \"google.protobuf.OneofOptions\";\nOneofOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumOptions\n */\nclass EnumOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(EnumOptions, a, b);\n    }\n}\nexports.EnumOptions = EnumOptions;\nEnumOptions.runtime = proto2_js_1.proto2;\nEnumOptions.typeName = \"google.protobuf.EnumOptions\";\nEnumOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 2, name: \"allow_alias\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 3, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 6, name: \"deprecated_legacy_json_field_conflicts\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.EnumValueOptions\n */\nclass EnumValueOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValueOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValueOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValueOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(EnumValueOptions, a, b);\n    }\n}\nexports.EnumValueOptions = EnumValueOptions;\nEnumValueOptions.runtime = proto2_js_1.proto2;\nEnumValueOptions.typeName = \"google.protobuf.EnumValueOptions\";\nEnumValueOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.ServiceOptions\n */\nclass ServiceOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ServiceOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ServiceOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ServiceOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(ServiceOptions, a, b);\n    }\n}\nexports.ServiceOptions = ServiceOptions;\nServiceOptions.runtime = proto2_js_1.proto2;\nServiceOptions.typeName = \"google.protobuf.ServiceOptions\";\nServiceOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.MethodOptions\n */\nclass MethodOptions extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The parser stores options it doesn't recognize here. See above.\n         *\n         * @generated from field: repeated google.protobuf.UninterpretedOption uninterpreted_option = 999;\n         */\n        this.uninterpretedOption = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new MethodOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new MethodOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new MethodOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(MethodOptions, a, b);\n    }\n}\nexports.MethodOptions = MethodOptions;\nMethodOptions.runtime = proto2_js_1.proto2;\nMethodOptions.typeName = \"google.protobuf.MethodOptions\";\nMethodOptions.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 33, name: \"deprecated\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true, default: false },\n    { no: 34, name: \"idempotency_level\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(MethodOptions_IdempotencyLevel), opt: true, default: MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN },\n    { no: 999, name: \"uninterpreted_option\", kind: \"message\", T: UninterpretedOption, repeated: true },\n]);\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n * or neither? HTTP based RPC implementation may choose GET verb for safe\n * methods, and PUT verb for idempotent methods instead of the default POST.\n *\n * @generated from enum google.protobuf.MethodOptions.IdempotencyLevel\n */\nvar MethodOptions_IdempotencyLevel;\n(function (MethodOptions_IdempotencyLevel) {\n    /**\n     * @generated from enum value: IDEMPOTENCY_UNKNOWN = 0;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENCY_UNKNOWN\"] = 0] = \"IDEMPOTENCY_UNKNOWN\";\n    /**\n     * implies idempotent\n     *\n     * @generated from enum value: NO_SIDE_EFFECTS = 1;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"NO_SIDE_EFFECTS\"] = 1] = \"NO_SIDE_EFFECTS\";\n    /**\n     * idempotent, but may have side effects\n     *\n     * @generated from enum value: IDEMPOTENT = 2;\n     */\n    MethodOptions_IdempotencyLevel[MethodOptions_IdempotencyLevel[\"IDEMPOTENT\"] = 2] = \"IDEMPOTENT\";\n})(MethodOptions_IdempotencyLevel || (exports.MethodOptions_IdempotencyLevel = MethodOptions_IdempotencyLevel = {}));\n// Retrieve enum metadata with: proto2.getEnumType(MethodOptions_IdempotencyLevel)\nproto2_js_1.proto2.util.setEnumType(MethodOptions_IdempotencyLevel, \"google.protobuf.MethodOptions.IdempotencyLevel\", [\n    { no: 0, name: \"IDEMPOTENCY_UNKNOWN\" },\n    { no: 1, name: \"NO_SIDE_EFFECTS\" },\n    { no: 2, name: \"IDEMPOTENT\" },\n]);\n/**\n * A message representing a option the parser does not recognize. This only\n * appears in options protos created by the compiler::Parser class.\n * DescriptorPool resolves these when building Descriptor objects. Therefore,\n * options protos in descriptor objects (e.g. returned by Descriptor::options(),\n * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n * in them.\n *\n * @generated from message google.protobuf.UninterpretedOption\n */\nclass UninterpretedOption extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.UninterpretedOption.NamePart name = 2;\n         */\n        this.name = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(UninterpretedOption, a, b);\n    }\n}\nexports.UninterpretedOption = UninterpretedOption;\nUninterpretedOption.runtime = proto2_js_1.proto2;\nUninterpretedOption.typeName = \"google.protobuf.UninterpretedOption\";\nUninterpretedOption.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 2, name: \"name\", kind: \"message\", T: UninterpretedOption_NamePart, repeated: true },\n    { no: 3, name: \"identifier_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"positive_int_value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 5, name: \"negative_int_value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */, opt: true },\n    { no: 6, name: \"double_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 7, name: \"string_value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n    { no: 8, name: \"aggregate_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * The name of the uninterpreted option.  Each string represents a segment in\n * a dot-separated name.  is_extension is true iff a segment represents an\n * extension (denoted with parentheses in options specs in .proto files).\n * E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n * \"foo.(bar.baz).moo\".\n *\n * @generated from message google.protobuf.UninterpretedOption.NamePart\n */\nclass UninterpretedOption_NamePart extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UninterpretedOption_NamePart().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UninterpretedOption_NamePart().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UninterpretedOption_NamePart().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(UninterpretedOption_NamePart, a, b);\n    }\n}\nexports.UninterpretedOption_NamePart = UninterpretedOption_NamePart;\nUninterpretedOption_NamePart.runtime = proto2_js_1.proto2;\nUninterpretedOption_NamePart.typeName = \"google.protobuf.UninterpretedOption.NamePart\";\nUninterpretedOption_NamePart.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name_part\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"is_extension\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\n/**\n * Encapsulates information about the original source file from which a\n * FileDescriptorProto was generated.\n *\n * @generated from message google.protobuf.SourceCodeInfo\n */\nclass SourceCodeInfo extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * A Location identifies a piece of source code in a .proto file which\n         * corresponds to a particular definition.  This information is intended\n         * to be useful to IDEs, code indexers, documentation generators, and similar\n         * tools.\n         *\n         * For example, say we have a file like:\n         *   message Foo {\n         *     optional string foo = 1;\n         *   }\n         * Let's look at just the field definition:\n         *   optional string foo = 1;\n         *   ^       ^^     ^^  ^  ^^^\n         *   a       bc     de  f  ghi\n         * We have the following locations:\n         *   span   path               represents\n         *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n         *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n         *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n         *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n         *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n         *\n         * Notes:\n         * - A location may refer to a repeated field itself (i.e. not to any\n         *   particular index within it).  This is used whenever a set of elements are\n         *   logically enclosed in a single code segment.  For example, an entire\n         *   extend block (possibly containing multiple extension definitions) will\n         *   have an outer location whose path refers to the \"extensions\" repeated\n         *   field without an index.\n         * - Multiple locations may have the same path.  This happens when a single\n         *   logical declaration is spread out across multiple places.  The most\n         *   obvious example is the \"extend\" block again -- there may be multiple\n         *   extend blocks in the same scope, each of which will have the same path.\n         * - A location's span is not always a subset of its parent's span.  For\n         *   example, the \"extendee\" of an extension declaration appears at the\n         *   beginning of the \"extend\" block and is shared by all extensions within\n         *   the block.\n         * - Just because a location's span is a subset of some other location's span\n         *   does not mean that it is a descendant.  For example, a \"group\" defines\n         *   both a type and a field in a single declaration.  Thus, the locations\n         *   corresponding to the type and field and their components will overlap.\n         * - Code which tries to interpret locations should probably be designed to\n         *   ignore those that it doesn't understand, as more types of locations could\n         *   be recorded in the future.\n         *\n         * @generated from field: repeated google.protobuf.SourceCodeInfo.Location location = 1;\n         */\n        this.location = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(SourceCodeInfo, a, b);\n    }\n}\nexports.SourceCodeInfo = SourceCodeInfo;\nSourceCodeInfo.runtime = proto2_js_1.proto2;\nSourceCodeInfo.typeName = \"google.protobuf.SourceCodeInfo\";\nSourceCodeInfo.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"location\", kind: \"message\", T: SourceCodeInfo_Location, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.SourceCodeInfo.Location\n */\nclass SourceCodeInfo_Location extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies which part of the FileDescriptorProto was defined at this\n         * location.\n         *\n         * Each element is a field number or an index.  They form a path from\n         * the root FileDescriptorProto to the place where the definition occurs.\n         * For example, this path:\n         *   [ 4, 3, 2, 7, 1 ]\n         * refers to:\n         *   file.message_type(3)  // 4, 3\n         *       .field(7)         // 2, 7\n         *       .name()           // 1\n         * This is because FileDescriptorProto.message_type has field number 4:\n         *   repeated DescriptorProto message_type = 4;\n         * and DescriptorProto.field has field number 2:\n         *   repeated FieldDescriptorProto field = 2;\n         * and FieldDescriptorProto.name has field number 1:\n         *   optional string name = 1;\n         *\n         * Thus, the above path gives the location of a field name.  If we removed\n         * the last element:\n         *   [ 4, 3, 2, 7 ]\n         * this path refers to the whole field declaration (from the beginning\n         * of the label to the terminating semicolon).\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        /**\n         * Always has exactly three or four elements: start line, start column,\n         * end line (optional, otherwise assumed same as start line), end column.\n         * These are packed into a single field for efficiency.  Note that line\n         * and column numbers are zero-based -- typically you will want to add\n         * 1 to each before displaying to a user.\n         *\n         * @generated from field: repeated int32 span = 2 [packed = true];\n         */\n        this.span = [];\n        /**\n         * @generated from field: repeated string leading_detached_comments = 6;\n         */\n        this.leadingDetachedComments = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceCodeInfo_Location().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceCodeInfo_Location().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceCodeInfo_Location().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(SourceCodeInfo_Location, a, b);\n    }\n}\nexports.SourceCodeInfo_Location = SourceCodeInfo_Location;\nSourceCodeInfo_Location.runtime = proto2_js_1.proto2;\nSourceCodeInfo_Location.typeName = \"google.protobuf.SourceCodeInfo.Location\";\nSourceCodeInfo_Location.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"span\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 3, name: \"leading_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"trailing_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 6, name: \"leading_detached_comments\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * Describes the relationship between generated code and its original source\n * file. A GeneratedCodeInfo message is associated with only one generated\n * source file, but may contain references to different source .proto files.\n *\n * @generated from message google.protobuf.GeneratedCodeInfo\n */\nclass GeneratedCodeInfo extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * An Annotation connects some span of text in generated code to an element\n         * of its generating .proto file.\n         *\n         * @generated from field: repeated google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;\n         */\n        this.annotation = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(GeneratedCodeInfo, a, b);\n    }\n}\nexports.GeneratedCodeInfo = GeneratedCodeInfo;\nGeneratedCodeInfo.runtime = proto2_js_1.proto2;\nGeneratedCodeInfo.typeName = \"google.protobuf.GeneratedCodeInfo\";\nGeneratedCodeInfo.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"annotation\", kind: \"message\", T: GeneratedCodeInfo_Annotation, repeated: true },\n]);\n/**\n * @generated from message google.protobuf.GeneratedCodeInfo.Annotation\n */\nclass GeneratedCodeInfo_Annotation extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Identifies the element in the original source .proto file. This field\n         * is formatted the same as SourceCodeInfo.Location.path.\n         *\n         * @generated from field: repeated int32 path = 1 [packed = true];\n         */\n        this.path = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GeneratedCodeInfo_Annotation().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GeneratedCodeInfo_Annotation().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GeneratedCodeInfo_Annotation().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(GeneratedCodeInfo_Annotation, a, b);\n    }\n}\nexports.GeneratedCodeInfo_Annotation = GeneratedCodeInfo_Annotation;\nGeneratedCodeInfo_Annotation.runtime = proto2_js_1.proto2;\nGeneratedCodeInfo_Annotation.typeName = \"google.protobuf.GeneratedCodeInfo.Annotation\";\nGeneratedCodeInfo_Annotation.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"path\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, repeated: true, packed: true },\n    { no: 2, name: \"source_file\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"begin\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"end\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 5, name: \"semantic\", kind: \"enum\", T: proto2_js_1.proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic), opt: true },\n]);\n/**\n * Represents the identified object's effect on the element in the original\n * .proto file.\n *\n * @generated from enum google.protobuf.GeneratedCodeInfo.Annotation.Semantic\n */\nvar GeneratedCodeInfo_Annotation_Semantic;\n(function (GeneratedCodeInfo_Annotation_Semantic) {\n    /**\n     * There is no effect or the effect is indescribable.\n     *\n     * @generated from enum value: NONE = 0;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The element is set or otherwise mutated.\n     *\n     * @generated from enum value: SET = 1;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"SET\"] = 1] = \"SET\";\n    /**\n     * An alias to the element is returned.\n     *\n     * @generated from enum value: ALIAS = 2;\n     */\n    GeneratedCodeInfo_Annotation_Semantic[GeneratedCodeInfo_Annotation_Semantic[\"ALIAS\"] = 2] = \"ALIAS\";\n})(GeneratedCodeInfo_Annotation_Semantic || (exports.GeneratedCodeInfo_Annotation_Semantic = GeneratedCodeInfo_Annotation_Semantic = {}));\n// Retrieve enum metadata with: proto2.getEnumType(GeneratedCodeInfo_Annotation_Semantic)\nproto2_js_1.proto2.util.setEnumType(GeneratedCodeInfo_Annotation_Semantic, \"google.protobuf.GeneratedCodeInfo.Annotation.Semantic\", [\n    { no: 0, name: \"NONE\" },\n    { no: 1, name: \"SET\" },\n    { no: 2, name: \"ALIAS\" },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = void 0;\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nclass Message {\n    /**\n     * Compare with a message of the same type.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\nexports.Message = Message;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proto2 = void 0;\nconst proto_runtime_js_1 = require(\"./private/proto-runtime.js\");\nconst binary_format_proto2_js_1 = require(\"./private/binary-format-proto2.js\");\nconst util_common_js_1 = require(\"./private/util-common.js\");\nconst field_list_js_1 = require(\"./private/field-list.js\");\nconst field_js_1 = require(\"./private/field.js\");\nconst names_js_1 = require(\"./private/names.js\");\nconst json_format_proto2_js_1 = require(\"./private/json-format-proto2.js\");\n/**\n * Provides functionality for messages defined with the proto2 syntax.\n */\nexports.proto2 = (0, proto_runtime_js_1.makeProtoRuntime)(\"proto2\", (0, json_format_proto2_js_1.makeJsonFormatProto2)(), (0, binary_format_proto2_js_1.makeBinaryFormatProto2)(), Object.assign(Object.assign({}, (0, util_common_js_1.makeUtilCommon)()), { newFieldList(fields) {\n        return new field_list_js_1.InternalFieldList(fields, normalizeFieldInfosProto2);\n    },\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case \"oneof\":\n                    t[name] = { case: undefined };\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                case \"enum\":\n                case \"message\":\n                    // In contrast to proto3, enum and scalar fields have no intrinsic default value,\n                    // only an optional explicit default value.\n                    // Unlike proto3 intrinsic default values, proto2 explicit default values are not\n                    // set on construction, because they are not omitted on the wire. If we did set\n                    // default values on construction, a deserialize-serialize round-trip would add\n                    // fields to a message.\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto2(fieldInfos) {\n    var _a, _b, _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = (0, names_js_1.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0, names_js_1.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // In contrast to proto3, repeated fields are unpacked except when explicitly specified.\n        f.packed = (_c = field.packed) !== null && _c !== void 0 ? _c : false;\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new field_js_1.InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeProtoRuntime = void 0;\nconst enum_js_1 = require(\"./enum.js\");\nconst message_type_js_1 = require(\"./message-type.js\");\nfunction makeProtoRuntime(syntax, json, bin, util) {\n    return {\n        syntax,\n        json,\n        bin,\n        util,\n        makeMessageType(typeName, fields, opt) {\n            return (0, message_type_js_1.makeMessageType)(this, typeName, fields, opt);\n        },\n        makeEnum: enum_js_1.makeEnum,\n        makeEnumType: enum_js_1.makeEnumType,\n        getEnumType: enum_js_1.getEnumType,\n    };\n}\nexports.makeProtoRuntime = makeProtoRuntime;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeEnum = exports.makeEnumType = exports.setEnumType = exports.getEnumType = void 0;\nconst assert_js_1 = require(\"./assert.js\");\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nfunction getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    (0, assert_js_1.assert)(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\nexports.getEnumType = getEnumType;\n/**\n * Sets reflection information on a generated enum.\n */\nfunction setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\nexports.setEnumType = setEnumType;\n/**\n * Create a new EnumType with the given values.\n */\nfunction makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\nexports.makeEnumType = makeEnumType;\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nfunction makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nexports.makeEnum = makeEnum;\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertFloat32 = exports.assertUInt32 = exports.assertInt32 = exports.assert = void 0;\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nexports.assert = assert;\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nfunction assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nexports.assertInt32 = assertInt32;\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nexports.assertUInt32 = assertUInt32;\n/**\n * Assert a valid protobuf float value.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\nexports.assertFloat32 = assertFloat32;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeMessageType = void 0;\nconst message_js_1 = require(\"../message.js\");\n/**\n * Create a new message type using the given runtime.\n */\nfunction makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new message_js_1.Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\nexports.makeMessageType = makeMessageType;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeBinaryFormatProto2 = void 0;\nconst field_js_1 = require(\"../field.js\");\nconst binary_format_common_js_1 = require(\"./binary-format-common.js\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, no-case-declarations, prefer-const */\nfunction makeBinaryFormatProto2() {\n    return Object.assign(Object.assign({}, (0, binary_format_common_js_1.makeBinaryFormatCommon)()), { writeMessage(message, writer, options) {\n            const type = message.getType();\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    let value, // this will be our field value, whether it is member of a oneof or not\n                    repeated = field.repeated, localName = field.localName;\n                    if (field.oneof) {\n                        const oneof = message[field.oneof.localName];\n                        if (oneof.case !== localName) {\n                            continue; // field is not selected, skip\n                        }\n                        value = oneof.value;\n                    }\n                    else {\n                        value = message[localName];\n                        // In contrast to proto3, we raise an error if a non-optional (proto2 required)\n                        // field is missing a value.\n                        if (value === undefined && !field.oneof && !field.opt) {\n                            throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                        }\n                    }\n                    switch (field.kind) {\n                        case \"scalar\":\n                        case \"enum\":\n                            let scalarType = field.kind == \"enum\" ? field_js_1.ScalarType.INT32 : field.T;\n                            if (repeated) {\n                                if (field.packed) {\n                                    (0, binary_format_common_js_1.writePacked)(writer, scalarType, field.no, value);\n                                }\n                                else {\n                                    for (const item of value) {\n                                        (0, binary_format_common_js_1.writeScalar)(writer, scalarType, field.no, item, true);\n                                    }\n                                }\n                            }\n                            else {\n                                if (value !== undefined) {\n                                    // In contrast to proto3, we do not skip intrinsic default values.\n                                    // Explicit default values are not special cased either.\n                                    (0, binary_format_common_js_1.writeScalar)(writer, scalarType, field.no, value, true);\n                                }\n                            }\n                            break;\n                        case \"message\":\n                            if (repeated) {\n                                for (const item of value) {\n                                    (0, binary_format_common_js_1.writeMessageField)(writer, options, field.T, field.no, item);\n                                }\n                            }\n                            else {\n                                (0, binary_format_common_js_1.writeMessageField)(writer, options, field.T, field.no, value);\n                            }\n                            break;\n                        case \"map\":\n                            for (const [key, val] of Object.entries(value)) {\n                                (0, binary_format_common_js_1.writeMapEntry)(writer, options, field, key, val);\n                            }\n                            break;\n                    }\n                }\n            }\n            catch (e) {\n                let m = field\n                    ? `cannot encode field ${type.typeName}.${field === null || field === void 0 ? void 0 : field.name} to binary`\n                    : `cannot encode message ${type.typeName} to binary`;\n                let r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        } });\n}\nexports.makeBinaryFormatProto2 = makeBinaryFormatProto2;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScalarType = void 0;\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (exports.ScalarType = ScalarType = {}));\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writePacked = exports.writeScalar = exports.writeMessageField = exports.writeMapEntry = exports.makeBinaryFormatCommon = void 0;\nconst binary_encoding_js_1 = require(\"../binary-encoding.js\");\nconst message_js_1 = require(\"../message.js\");\nconst field_js_1 = require(\"../field.js\");\nconst field_wrapper_js_1 = require(\"./field-wrapper.js\");\nconst scalars_js_1 = require(\"./scalars.js\");\nconst assert_js_1 = require(\"./assert.js\");\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unnecessary-condition, no-case-declarations, prefer-const */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new binary_encoding_js_1.BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new binary_encoding_js_1.BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction makeBinaryFormatCommon() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, length, options) {\n            const type = message.getType();\n            const end = length === undefined ? reader.len : reader.pos + length;\n            while (reader.pos < end) {\n                const [fieldNo, wireType] = reader.tag(), field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                let target = message, repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    target = target[field.oneof.localName];\n                    if (target.case != localName) {\n                        delete target.value;\n                    }\n                    target.case = localName;\n                    localName = \"value\";\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        const scalarType = field.kind == \"enum\" ? field_js_1.ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                            if (wireType == binary_encoding_js_1.WireType.LengthDelimited &&\n                                scalarType != field_js_1.ScalarType.STRING &&\n                                scalarType != field_js_1.ScalarType.BYTES) {\n                                let e = reader.uint32() + reader.pos;\n                                while (reader.pos < e) {\n                                    arr.push(readScalar(reader, scalarType));\n                                }\n                            }\n                            else {\n                                arr.push(readScalar(reader, scalarType));\n                            }\n                        }\n                        else {\n                            target[localName] = readScalar(reader, scalarType);\n                        }\n                        break;\n                    case \"message\":\n                        const messageType = field.T;\n                        if (repeated) {\n                            // safe to assume presence of array, oneof cannot contain repeated values\n                            target[localName].push(readMessageField(reader, new messageType(), options));\n                        }\n                        else {\n                            if (target[localName] instanceof message_js_1.Message) {\n                                readMessageField(reader, target[localName], options);\n                            }\n                            else {\n                                target[localName] = readMessageField(reader, new messageType(), options);\n                                if (messageType.fieldWrapper &&\n                                    !field.oneof &&\n                                    !field.repeated) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                        }\n                        break;\n                    case \"map\":\n                        let [mapKey, mapVal] = readMapEntry(field, reader, options);\n                        // safe to assume presence of map object, oneof cannot contain repeated values\n                        target[localName][mapKey] = mapVal;\n                        break;\n                }\n            }\n        },\n    };\n}\nexports.makeBinaryFormatCommon = makeBinaryFormatCommon;\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options) {\n    const format = message.getType().runtime.bin;\n    format.readMessage(message, reader, reader.uint32(), options);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        let [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        let keyRaw = (0, scalars_js_1.scalarDefaultValue)(field.K);\n        key =\n            field.K == field_js_1.ScalarType.BOOL\n                ? keyRaw.toString()\n                : keyRaw;\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = (0, scalars_js_1.scalarDefaultValue)(field.V.T);\n                break;\n            case \"enum\":\n                val = 0;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case field_js_1.ScalarType.STRING:\n            return reader.string();\n        case field_js_1.ScalarType.BOOL:\n            return reader.bool();\n        case field_js_1.ScalarType.DOUBLE:\n            return reader.double();\n        case field_js_1.ScalarType.FLOAT:\n            return reader.float();\n        case field_js_1.ScalarType.INT32:\n            return reader.int32();\n        case field_js_1.ScalarType.INT64:\n            return reader.int64();\n        case field_js_1.ScalarType.UINT64:\n            return reader.uint64();\n        case field_js_1.ScalarType.FIXED64:\n            return reader.fixed64();\n        case field_js_1.ScalarType.BYTES:\n            return reader.bytes();\n        case field_js_1.ScalarType.FIXED32:\n            return reader.fixed32();\n        case field_js_1.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case field_js_1.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case field_js_1.ScalarType.SINT64:\n            return reader.sint64();\n        case field_js_1.ScalarType.UINT32:\n            return reader.uint32();\n        case field_js_1.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, binary_encoding_js_1.WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case field_js_1.ScalarType.INT32:\n        case field_js_1.ScalarType.FIXED32:\n        case field_js_1.ScalarType.UINT32:\n        case field_js_1.ScalarType.SFIXED32:\n        case field_js_1.ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case field_js_1.ScalarType.BOOL:\n            (0, assert_js_1.assert)(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue, true);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value, true);\n            break;\n        case \"enum\":\n            writeScalar(writer, field_js_1.ScalarType.INT32, 2, value, true);\n            break;\n        case \"message\":\n            writeMessageField(writer, options, field.V.T, 2, value);\n            break;\n    }\n    writer.join();\n}\nexports.writeMapEntry = writeMapEntry;\nfunction writeMessageField(writer, options, type, fieldNo, value) {\n    if (value !== undefined) {\n        const message = (0, field_wrapper_js_1.wrapField)(type, value);\n        writer\n            .tag(fieldNo, binary_encoding_js_1.WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n    }\n}\nexports.writeMessageField = writeMessageField;\nfunction writeScalar(writer, type, fieldNo, value, emitIntrinsicDefault) {\n    let [wireType, method, isIntrinsicDefault] = (0, scalars_js_1.scalarTypeInfo)(type, value);\n    if (!isIntrinsicDefault || emitIntrinsicDefault) {\n        writer.tag(fieldNo, wireType)[method](value);\n    }\n}\nexports.writeScalar = writeScalar;\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, binary_encoding_js_1.WireType.LengthDelimited).fork();\n    let [, method] = (0, scalars_js_1.scalarTypeInfo)(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\nexports.writePacked = writePacked;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryReader = exports.BinaryWriter = exports.WireType = void 0;\nconst varint_js_1 = require(\"./google/varint.js\");\nconst assert_js_1 = require(\"./private/assert.js\");\nconst proto_int64_js_1 = require(\"./proto-int64.js\");\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (exports.WireType = WireType = {}));\nclass BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        (0, assert_js_1.assertUInt32)(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        (0, assert_js_1.assertInt32)(value);\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        (0, assert_js_1.assertFloat32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        (0, assert_js_1.assertUInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        (0, assert_js_1.assertInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        (0, assert_js_1.assertInt32)(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0, varint_js_1.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = proto_int64_js_1.protoInt64.uEnc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nclass BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint_js_1.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint_js_1.varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return proto_int64_js_1.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return proto_int64_js_1.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return proto_int64_js_1.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return proto_int64_js_1.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return proto_int64_js_1.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\nexports.BinaryReader = BinaryReader;\n","\"use strict\";\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.varint32read = exports.varint32write = exports.uInt64ToString = exports.int64ToString = exports.int64FromString = exports.varint64write = exports.varint64read = void 0;\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\nexports.varint64read = varint64read;\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\nexports.varint64write = varint64write;\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\nexports.int64FromString = int64FromString;\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\nexports.int64ToString = int64ToString;\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nexports.uInt64ToString = uInt64ToString;\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\nexports.varint32write = varint32write;\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\nexports.varint32read = varint32read;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoInt64 = void 0;\nconst assert_js_1 = require(\"./private/assert.js\");\nconst varint_js_1 = require(\"./google/varint.js\");\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => (0, assert_js_1.assert)(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => (0, assert_js_1.assert)(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0, varint_js_1.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0, varint_js_1.uInt64ToString)(lo, hi);\n        },\n    };\n}\nexports.protoInt64 = makeInt64Support();\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUnwrappedFieldType = exports.wrapField = void 0;\nconst message_js_1 = require(\"../message.js\");\nconst field_js_1 = require(\"../field.js\");\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nfunction wrapField(type, value) {\n    if (value instanceof message_js_1.Message || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\nexports.wrapField = wrapField;\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nfunction getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nexports.getUnwrappedFieldType = getUnwrappedFieldType;\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": field_js_1.ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": field_js_1.ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": field_js_1.ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": field_js_1.ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": field_js_1.ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": field_js_1.ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": field_js_1.ScalarType.BOOL,\n    \"google.protobuf.StringValue\": field_js_1.ScalarType.STRING,\n    \"google.protobuf.BytesValue\": field_js_1.ScalarType.BYTES,\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scalarTypeInfo = exports.scalarDefaultValue = exports.scalarEquals = void 0;\nconst field_js_1 = require(\"../field.js\");\nconst binary_encoding_js_1 = require(\"../binary-encoding.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == field_js_1.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case field_js_1.ScalarType.UINT64:\n        case field_js_1.ScalarType.FIXED64:\n        case field_js_1.ScalarType.INT64:\n        case field_js_1.ScalarType.SFIXED64:\n        case field_js_1.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\nexports.scalarEquals = scalarEquals;\n/**\n * Returns the default value for the given scalar type, following\n * proto3 semantics.\n */\nfunction scalarDefaultValue(type) {\n    switch (type) {\n        case field_js_1.ScalarType.BOOL:\n            return false;\n        case field_js_1.ScalarType.UINT64:\n        case field_js_1.ScalarType.FIXED64:\n        case field_js_1.ScalarType.INT64:\n        case field_js_1.ScalarType.SFIXED64:\n        case field_js_1.ScalarType.SINT64:\n            return proto_int64_js_1.protoInt64.zero;\n        case field_js_1.ScalarType.DOUBLE:\n        case field_js_1.ScalarType.FLOAT:\n            return 0.0;\n        case field_js_1.ScalarType.BYTES:\n            return new Uint8Array(0);\n        case field_js_1.ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\nexports.scalarDefaultValue = scalarDefaultValue;\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\nfunction scalarTypeInfo(type, value) {\n    const isUndefined = value === undefined;\n    let wireType = binary_encoding_js_1.WireType.Varint;\n    let isIntrinsicDefault = value === 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case field_js_1.ScalarType.STRING:\n            isIntrinsicDefault = isUndefined || !value.length;\n            wireType = binary_encoding_js_1.WireType.LengthDelimited;\n            break;\n        case field_js_1.ScalarType.BOOL:\n            isIntrinsicDefault = value === false;\n            break;\n        case field_js_1.ScalarType.DOUBLE:\n            wireType = binary_encoding_js_1.WireType.Bit64;\n            break;\n        case field_js_1.ScalarType.FLOAT:\n            wireType = binary_encoding_js_1.WireType.Bit32;\n            break;\n        case field_js_1.ScalarType.INT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case field_js_1.ScalarType.UINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case field_js_1.ScalarType.FIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = binary_encoding_js_1.WireType.Bit64;\n            break;\n        case field_js_1.ScalarType.BYTES:\n            isIntrinsicDefault = isUndefined || !value.byteLength;\n            wireType = binary_encoding_js_1.WireType.LengthDelimited;\n            break;\n        case field_js_1.ScalarType.FIXED32:\n            wireType = binary_encoding_js_1.WireType.Bit32;\n            break;\n        case field_js_1.ScalarType.SFIXED32:\n            wireType = binary_encoding_js_1.WireType.Bit32;\n            break;\n        case field_js_1.ScalarType.SFIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = binary_encoding_js_1.WireType.Bit64;\n            break;\n        case field_js_1.ScalarType.SINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n    }\n    const method = field_js_1.ScalarType[type].toLowerCase();\n    return [wireType, method, isUndefined || isIntrinsicDefault];\n}\nexports.scalarTypeInfo = scalarTypeInfo;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeUtilCommon = void 0;\nconst enum_js_1 = require(\"./enum.js\");\nconst message_js_1 = require(\"../message.js\");\nconst field_js_1 = require(\"../field.js\");\nconst scalars_js_1 = require(\"./scalars.js\");\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nfunction makeUtilCommon() {\n    return {\n        setEnumType: enum_js_1.setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] === undefined) {\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !(val instanceof sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        t[localName] = s[localName];\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                Object.assign(t[localName], s[localName]);\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => val instanceof mt ? val : new mt(val));\n                        }\n                        else if (s[localName] !== undefined) {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                t[localName] = val;\n                            }\n                            else {\n                                t[localName] = val instanceof mt ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => (0, scalars_js_1.scalarEquals)(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => (0, scalars_js_1.scalarEquals)(field_js_1.ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return (0, scalars_js_1.scalarEquals)(field_js_1.ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return (0, scalars_js_1.scalarEquals)(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return (0, scalars_js_1.scalarEquals)(field_js_1.ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return (0, scalars_js_1.scalarEquals)(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => (0, scalars_js_1.scalarEquals)(field_js_1.ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => (0, scalars_js_1.scalarEquals)(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map((e) => cloneSingularField(member, e));\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(member.V, v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(f, source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(member, source);\n                }\n                any[member.localName] = copy;\n            }\n            return target;\n        },\n    };\n}\nexports.makeUtilCommon = makeUtilCommon;\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(field, value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (value instanceof message_js_1.Message) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalFieldList = void 0;\nclass InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\nexports.InternalFieldList = InternalFieldList;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalOneofInfo = void 0;\nconst names_js_1 = require(\"./names.js\");\nconst assert_js_1 = require(\"./assert.js\");\nclass InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = (0, names_js_1.localOneofName)(name);\n    }\n    addField(field) {\n        (0, assert_js_1.assert)(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\nexports.InternalOneofInfo = InternalOneofInfo;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeIdentifier = exports.safeObjectProperty = exports.findEnumSharedPrefix = exports.fieldJsonName = exports.localOneofName = exports.localFieldName = exports.localName = void 0;\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nfunction localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return (0, exports.safeObjectProperty)((0, exports.safeIdentifier)(name));\n        }\n        case \"enum_value\": {\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix === undefined) {\n                return desc.name;\n            }\n            const name = desc.name.substring(sharedPrefix.length);\n            return (0, exports.safeObjectProperty)(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return (0, exports.safeObjectProperty)(name);\n        }\n    }\n}\nexports.localName = localName;\n/**\n * Returns the name of a field in generated code.\n */\nfunction localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return (0, exports.safeObjectProperty)(safeMessageProperty(name));\n}\nexports.localFieldName = localFieldName;\n/**\n * Returns the name of a oneof group in generated code.\n */\nfunction localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\nexports.localOneofName = localOneofName;\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexports.fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nfunction findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\nexports.findEnumSharedPrefix = findEnumSharedPrefix;\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\nexports.safeObjectProperty = safeObjectProperty;\n/**\n * Names that can be used for identifiers or class properties\n */\nconst safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\nexports.safeIdentifier = safeIdentifier;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeJsonFormatProto2 = void 0;\nconst field_wrapper_js_1 = require(\"./field-wrapper.js\");\nconst assert_js_1 = require(\"./assert.js\");\nconst json_format_common_js_1 = require(\"./json-format-common.js\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction makeJsonFormatProto2() {\n    return (0, json_format_common_js_1.makeJsonFormatCommon)((writeEnum, writeScalar) => {\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            (0, assert_js_1.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            (0, assert_js_1.assert)(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            (0, assert_js_1.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case \"scalar\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T, value[i], true));\n                        }\n                        break;\n                    case \"enum\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        }\n                        break;\n                    case \"message\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(value[i].toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                // In contrast to proto3, we raise an error if a non-optional (proto2 required)\n                // field is missing a value.\n                if (value === undefined) {\n                    if (!field.oneof && !field.opt) {\n                        throw `required field not set`;\n                    }\n                    return undefined;\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                        // In contrast to proto3, we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeScalar(field.T, value, true);\n                    case \"enum\":\n                        // In contrast to proto3, we do not skip intrinsic default values.\n                        // Explicit default values are not special cased either.\n                        return writeEnum(field.T, value, true, options.enumAsInteger);\n                    case \"message\":\n                        return (0, field_wrapper_js_1.wrapField)(field.T, value).toJson(options);\n                }\n            }\n        };\n    });\n}\nexports.makeJsonFormatProto2 = makeJsonFormatProto2;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeJsonFormatCommon = void 0;\nconst message_js_1 = require(\"../message.js\");\nconst field_js_1 = require(\"../field.js\");\nconst assert_js_1 = require(\"./assert.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst proto_base64_js_1 = require(\"../proto-base64.js\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nfunction makeJsonFormatCommon(makeWriteField) {\n    const writeField = makeWriteField(writeEnum, writeScalar);\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${this.debug(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = {};\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (!field) {\n                    if (!options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                    continue;\n                }\n                let localName = field.localName;\n                let target = message;\n                if (field.oneof) {\n                    if (jsonValue === null && field.kind == \"scalar\") {\n                        // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                        continue;\n                    }\n                    const seen = oneofSeen[field.oneof.localName];\n                    if (seen) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                    }\n                    oneofSeen[field.oneof.localName] = jsonKey;\n                    target = target[field.oneof.localName] = { case: localName };\n                    localName = \"value\";\n                }\n                if (field.repeated) {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (!Array.isArray(jsonValue)) {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetArray = target[localName];\n                    for (const jsonItem of jsonValue) {\n                        if (jsonItem === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`);\n                        }\n                        let val;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- \"map\" is invalid for repeated fields\n                        switch (field.kind) {\n                            case \"message\":\n                                val = field.T.fromJson(jsonItem, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.T, jsonItem, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.T, jsonItem);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        targetArray.push(val);\n                    }\n                }\n                else if (field.kind == \"map\") {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (Array.isArray(jsonValue) || typeof jsonValue != \"object\") {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetMap = target[localName];\n                    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n                        if (jsonMapValue === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: map value null`);\n                        }\n                        let val;\n                        switch (field.V.kind) {\n                            case \"message\":\n                                val = field.V.T.fromJson(jsonMapValue, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.V.T, jsonMapValue);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode map value for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        try {\n                            targetMap[readScalar(field.K, field.K == field_js_1.ScalarType.BOOL\n                                ? jsonMapKey == \"true\"\n                                    ? true\n                                    : jsonMapKey == \"false\"\n                                        ? false\n                                        : jsonMapKey\n                                : jsonMapKey).toString()] = val;\n                        }\n                        catch (e) {\n                            let m = `cannot decode map key for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) {\n                                m += `: ${e.message}`;\n                            }\n                            throw new Error(m);\n                        }\n                    }\n                }\n                else {\n                    switch (field.kind) {\n                        case \"message\":\n                            const messageType = field.T;\n                            if (jsonValue === null &&\n                                messageType.typeName != \"google.protobuf.Value\") {\n                                if (field.oneof) {\n                                    throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: null is invalid for oneof field \"${jsonKey}\"`);\n                                }\n                                continue;\n                            }\n                            if (target[localName] instanceof message_js_1.Message) {\n                                target[localName].fromJson(jsonValue, options);\n                            }\n                            else {\n                                target[localName] = messageType.fromJson(jsonValue, options);\n                                if (messageType.fieldWrapper && !field.oneof) {\n                                    target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                                }\n                            }\n                            break;\n                        case \"enum\":\n                            const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields);\n                            if (enumValue !== undefined) {\n                                target[localName] = enumValue;\n                            }\n                            break;\n                        case \"scalar\":\n                            try {\n                                target[localName] = readScalar(field.T, jsonValue);\n                            }\n                            catch (e) {\n                                let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                if (e instanceof Error && e.message.length > 0) {\n                                    m += `: ${e.message}`;\n                                }\n                                throw new Error(m);\n                            }\n                            break;\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (const member of type.fields.byMember()) {\n                    let jsonValue;\n                    if (member.kind == \"oneof\") {\n                        const oneof = message[member.localName];\n                        if (oneof.value === undefined) {\n                            continue;\n                        }\n                        field = member.findField(oneof.case);\n                        if (!field) {\n                            throw \"oneof case not found: \" + oneof.case;\n                        }\n                        jsonValue = writeField(field, oneof.value, options);\n                    }\n                    else {\n                        field = member;\n                        jsonValue = writeField(field, message[field.localName], options);\n                    }\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar,\n        writeScalar,\n        debug: debugJsonValue,\n    };\n}\nexports.makeJsonFormatCommon = makeJsonFormatCommon;\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return json.toString();\n    }\n}\n// May throw an error. If the error message is non-blank, it should be shown.\n// It is up to the caller to provide context.\nfunction readScalar(type, json) {\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case field_js_1.ScalarType.DOUBLE:\n        case field_js_1.ScalarType.FLOAT:\n            if (json === null)\n                return 0.0;\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == field_js_1.ScalarType.FLOAT)\n                (0, assert_js_1.assertFloat32)(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case field_js_1.ScalarType.INT32:\n        case field_js_1.ScalarType.FIXED32:\n        case field_js_1.ScalarType.SFIXED32:\n        case field_js_1.ScalarType.SINT32:\n        case field_js_1.ScalarType.UINT32:\n            if (json === null)\n                return 0;\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == field_js_1.ScalarType.UINT32)\n                (0, assert_js_1.assertUInt32)(int32);\n            else\n                (0, assert_js_1.assertInt32)(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case field_js_1.ScalarType.INT64:\n        case field_js_1.ScalarType.SFIXED64:\n        case field_js_1.ScalarType.SINT64:\n            if (json === null)\n                return proto_int64_js_1.protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            return proto_int64_js_1.protoInt64.parse(json);\n        case field_js_1.ScalarType.FIXED64:\n        case field_js_1.ScalarType.UINT64:\n            if (json === null)\n                return proto_int64_js_1.protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            return proto_int64_js_1.protoInt64.uParse(json);\n        // bool:\n        case field_js_1.ScalarType.BOOL:\n            if (json === null)\n                return false;\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case field_js_1.ScalarType.STRING:\n            if (json === null)\n                return \"\";\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case field_js_1.ScalarType.BYTES:\n            if (json === null || json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return proto_base64_js_1.protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields) {\n    if (json === null) {\n        // proto3 requires 0 to be default value for all enums\n        return 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value || ignoreUnknownFields) {\n                return value === null || value === void 0 ? void 0 : value.no;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\nfunction writeEnum(type, value, emitIntrinsicDefault, enumAsInteger) {\n    var _a;\n    if (value === undefined) {\n        return value;\n    }\n    if (value === 0 && !emitIntrinsicDefault) {\n        // proto3 requires 0 to be default value for all enums\n        return undefined;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value, emitIntrinsicDefault) {\n    if (value === undefined) {\n        return undefined;\n    }\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case field_js_1.ScalarType.INT32:\n        case field_js_1.ScalarType.SFIXED32:\n        case field_js_1.ScalarType.SINT32:\n        case field_js_1.ScalarType.FIXED32:\n        case field_js_1.ScalarType.UINT32:\n            (0, assert_js_1.assert)(typeof value == \"number\");\n            return value != 0 || emitIntrinsicDefault ? value : undefined;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case field_js_1.ScalarType.FLOAT:\n        // assertFloat32(value);\n        case field_js_1.ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            (0, assert_js_1.assert)(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value !== 0 || emitIntrinsicDefault ? value : undefined;\n        // string:\n        case field_js_1.ScalarType.STRING:\n            (0, assert_js_1.assert)(typeof value == \"string\");\n            return value.length > 0 || emitIntrinsicDefault ? value : undefined;\n        // bool:\n        case field_js_1.ScalarType.BOOL:\n            (0, assert_js_1.assert)(typeof value == \"boolean\");\n            return value || emitIntrinsicDefault ? value : undefined;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case field_js_1.ScalarType.UINT64:\n        case field_js_1.ScalarType.FIXED64:\n        case field_js_1.ScalarType.INT64:\n        case field_js_1.ScalarType.SFIXED64:\n        case field_js_1.ScalarType.SINT64:\n            (0, assert_js_1.assert)(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            // We use implicit conversion with `value != 0` to catch both 0n and \"0\"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return emitIntrinsicDefault || value != 0\n                ? value.toString(10)\n                : undefined;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case field_js_1.ScalarType.BYTES:\n            (0, assert_js_1.assert)(value instanceof Uint8Array);\n            return emitIntrinsicDefault || value.byteLength > 0\n                ? proto_base64_js_1.protoBase64.enc(value)\n                : undefined;\n    }\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoBase64 = void 0;\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexports.protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timestamp = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto_int64_js_1 = require(\"../../proto-int64.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nclass Timestamp extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = proto_int64_js_1.protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3_js_1.proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = proto_int64_js_1.protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: proto_int64_js_1.protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Timestamp, a, b);\n    }\n}\nexports.Timestamp = Timestamp;\nTimestamp.runtime = proto3_js_1.proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.proto3 = void 0;\nconst proto_runtime_js_1 = require(\"./private/proto-runtime.js\");\nconst binary_format_proto3_js_1 = require(\"./private/binary-format-proto3.js\");\nconst json_format_proto3_js_1 = require(\"./private/json-format-proto3.js\");\nconst util_common_js_1 = require(\"./private/util-common.js\");\nconst field_list_js_1 = require(\"./private/field-list.js\");\nconst scalars_js_1 = require(\"./private/scalars.js\");\nconst field_js_1 = require(\"./field.js\");\nconst field_js_2 = require(\"./private/field.js\");\nconst names_js_1 = require(\"./private/names.js\");\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexports.proto3 = (0, proto_runtime_js_1.makeProtoRuntime)(\"proto3\", (0, json_format_proto3_js_1.makeJsonFormatProto3)(), (0, binary_format_proto3_js_1.makeBinaryFormatProto3)(), Object.assign(Object.assign({}, (0, util_common_js_1.makeUtilCommon)()), { newFieldList(fields) {\n        return new field_list_js_1.InternalFieldList(fields, normalizeFieldInfosProto3);\n    },\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            if (member.opt) {\n                continue;\n            }\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case \"oneof\":\n                    t[name] = { case: undefined };\n                    break;\n                case \"enum\":\n                    t[name] = 0;\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                    t[name] = (0, scalars_js_1.scalarDefaultValue)(member.T); // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n                    break;\n                case \"message\":\n                    // message fields are always optional in proto3\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto3(fieldInfos) {\n    var _a, _b, _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = (0, names_js_1.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0, names_js_1.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // From the proto3 language guide:\n        // > In proto3, repeated fields of scalar numeric types are packed by default.\n        // This information is incomplete - according to the conformance tests, BOOL\n        // and ENUM are packed by default as well. This means only STRING and BYTES\n        // are not packed by default, which makes sense because they are length-delimited.\n        f.packed =\n            (_c = field.packed) !== null && _c !== void 0 ? _c : (field.kind == \"enum\" ||\n                (field.kind == \"scalar\" &&\n                    field.T != field_js_1.ScalarType.BYTES &&\n                    field.T != field_js_1.ScalarType.STRING));\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new field_js_2.InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeBinaryFormatProto3 = void 0;\nconst field_js_1 = require(\"../field.js\");\nconst binary_format_common_js_1 = require(\"./binary-format-common.js\");\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, prefer-const, no-case-declarations */\nfunction makeBinaryFormatProto3() {\n    return Object.assign(Object.assign({}, (0, binary_format_common_js_1.makeBinaryFormatCommon)()), { writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                let value, // this will be our field value, whether it is member of a oneof or regular field\n                repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    const oneof = message[field.oneof.localName];\n                    if (oneof.case !== localName) {\n                        continue; // field is not selected, skip\n                    }\n                    value = oneof.value;\n                }\n                else {\n                    value = message[localName];\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        let scalarType = field.kind == \"enum\" ? field_js_1.ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            if (field.packed) {\n                                (0, binary_format_common_js_1.writePacked)(writer, scalarType, field.no, value);\n                            }\n                            else {\n                                for (const item of value) {\n                                    (0, binary_format_common_js_1.writeScalar)(writer, scalarType, field.no, item, true);\n                                }\n                            }\n                        }\n                        else {\n                            if (value !== undefined) {\n                                (0, binary_format_common_js_1.writeScalar)(writer, scalarType, field.no, value, !!field.oneof || field.opt);\n                            }\n                        }\n                        break;\n                    case \"message\":\n                        if (repeated) {\n                            for (const item of value) {\n                                (0, binary_format_common_js_1.writeMessageField)(writer, options, field.T, field.no, item);\n                            }\n                        }\n                        else {\n                            (0, binary_format_common_js_1.writeMessageField)(writer, options, field.T, field.no, value);\n                        }\n                        break;\n                    case \"map\":\n                        for (const [key, val] of Object.entries(value)) {\n                            (0, binary_format_common_js_1.writeMapEntry)(writer, options, field, key, val);\n                        }\n                        break;\n                }\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        } });\n}\nexports.makeBinaryFormatProto3 = makeBinaryFormatProto3;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeJsonFormatProto3 = void 0;\nconst field_wrapper_js_1 = require(\"./field-wrapper.js\");\nconst assert_js_1 = require(\"./assert.js\");\nconst json_format_common_js_1 = require(\"./json-format-common.js\");\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction makeJsonFormatProto3() {\n    return (0, json_format_common_js_1.makeJsonFormatCommon)((writeEnum, writeScalar) => {\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            (0, assert_js_1.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            (0, assert_js_1.assert)(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            (0, assert_js_1.assert)(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case \"scalar\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T, value[i], true));\n                        }\n                        break;\n                    case \"enum\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        }\n                        break;\n                    case \"message\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push((0, field_wrapper_js_1.wrapField)(field.T, value[i]).toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                switch (field.kind) {\n                    case \"scalar\":\n                        return writeScalar(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues);\n                    case \"enum\":\n                        return writeEnum(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues, options.enumAsInteger);\n                    case \"message\":\n                        return value !== undefined\n                            ? (0, field_wrapper_js_1.wrapField)(field.T, value).toJson(options)\n                            : undefined;\n                }\n            }\n        };\n    });\n}\nexports.makeJsonFormatProto3 = makeJsonFormatProto3;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Duration = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto_int64_js_1 = require(\"../../proto-int64.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * A Duration represents a signed, fixed-length span of time represented\n * as a count of seconds and fractions of seconds at nanosecond\n * resolution. It is independent of any calendar and concepts like \"day\"\n * or \"month\". It is related to Timestamp in that the difference between\n * two Timestamp values is a Duration and it can be added or subtracted\n * from a Timestamp. Range is approximately +-10,000 years.\n *\n * # Examples\n *\n * Example 1: Compute Duration from two Timestamps in pseudo code.\n *\n *     Timestamp start = ...;\n *     Timestamp end = ...;\n *     Duration duration = ...;\n *\n *     duration.seconds = end.seconds - start.seconds;\n *     duration.nanos = end.nanos - start.nanos;\n *\n *     if (duration.seconds < 0 && duration.nanos > 0) {\n *       duration.seconds += 1;\n *       duration.nanos -= 1000000000;\n *     } else if (duration.seconds > 0 && duration.nanos < 0) {\n *       duration.seconds -= 1;\n *       duration.nanos += 1000000000;\n *     }\n *\n * Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n *\n *     Timestamp start = ...;\n *     Duration duration = ...;\n *     Timestamp end = ...;\n *\n *     end.seconds = start.seconds + duration.seconds;\n *     end.nanos = start.nanos + duration.nanos;\n *\n *     if (end.nanos < 0) {\n *       end.seconds -= 1;\n *       end.nanos += 1000000000;\n *     } else if (end.nanos >= 1000000000) {\n *       end.seconds += 1;\n *       end.nanos -= 1000000000;\n *     }\n *\n * Example 3: Compute Duration from datetime.timedelta in Python.\n *\n *     td = datetime.timedelta(days=3, minutes=10)\n *     duration = Duration()\n *     duration.FromTimedelta(td)\n *\n * # JSON Mapping\n *\n * In JSON format, the Duration type is encoded as a string rather than an\n * object, where the string ends in the suffix \"s\" (indicating seconds) and\n * is preceded by the number of seconds, with nanoseconds expressed as\n * fractional seconds. For example, 3 seconds with 0 nanoseconds should be\n * encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\n * be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\n * microsecond should be expressed in JSON format as \"3.000001s\".\n *\n *\n * @generated from message google.protobuf.Duration\n */\nclass Duration extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Signed seconds of the span of time. Must be from -315,576,000,000\n         * to +315,576,000,000 inclusive. Note: these bounds are computed from:\n         * 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = proto_int64_js_1.protoInt64.zero;\n        /**\n         * Signed fractions of a second at nanosecond resolution of the span\n         * of time. Durations less than one second are represented with a 0\n         * `seconds` field and a positive or negative `nanos` field. For durations\n         * of one second or more, a non-zero value for the `nanos` field must be\n         * of the same sign as the `seconds` field. Must be from -999,999,999\n         * to +999,999,999 inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3_js_1.proto3.json.debug(json)}`);\n        }\n        const match = json.match(/^(-?[0-9]+)(?:\\.([0-9]+))?s/);\n        if (match === null) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3_js_1.proto3.json.debug(json)}`);\n        }\n        const longSeconds = Number(match[1]);\n        if (longSeconds > 315576000000 || longSeconds < -315576000000) {\n            throw new Error(`cannot decode google.protobuf.Duration from JSON: ${proto3_js_1.proto3.json.debug(json)}`);\n        }\n        this.seconds = proto_int64_js_1.protoInt64.parse(longSeconds);\n        if (typeof match[2] == \"string\") {\n            const nanosStr = match[2] + \"0\".repeat(9 - match[2].length);\n            this.nanos = parseInt(nanosStr);\n            if (longSeconds < 0 || Object.is(longSeconds, -0)) {\n                this.nanos = -this.nanos;\n            }\n        }\n        return this;\n    }\n    toJson(options) {\n        if (Number(this.seconds) > 315576000000 || Number(this.seconds) < -315576000000) {\n            throw new Error(`cannot encode google.protobuf.Duration to JSON: value out of range`);\n        }\n        let text = this.seconds.toString();\n        if (this.nanos !== 0) {\n            let nanosStr = Math.abs(this.nanos).toString();\n            nanosStr = \"0\".repeat(9 - nanosStr.length) + nanosStr;\n            if (nanosStr.substring(3) === \"000000\") {\n                nanosStr = nanosStr.substring(0, 3);\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                nanosStr = nanosStr.substring(0, 6);\n            }\n            text += \".\" + nanosStr;\n            if (this.nanos < 0 && this.seconds === proto_int64_js_1.protoInt64.zero) {\n                text = \"-\" + text;\n            }\n        }\n        return text + \"s\";\n    }\n    static fromBinary(bytes, options) {\n        return new Duration().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Duration().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Duration().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Duration, a, b);\n    }\n}\nexports.Duration = Duration;\nDuration.runtime = proto3_js_1.proto3;\nDuration.typeName = \"google.protobuf.Duration\";\nDuration.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Any = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *     // or ...\n *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n *       foo = any.unpack(Foo.getDefaultInstance());\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := anypb.New(foo)\n *      if err != nil {\n *        ...\n *      }\n *      ...\n *      foo := &pb.Foo{}\n *      if err := any.UnmarshalTo(foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n *\n *\n * @generated from message google.protobuf.Any\n */\nclass Any extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * A URL/resource name that uniquely identifies the type of the serialized\n         * protocol buffer message. This string must contain at least\n         * one \"/\" character. The last segment of the URL's path must represent\n         * the fully qualified name of the type (as in\n         * `path/google.protobuf.Duration`). The name should be in a canonical form\n         * (e.g., leading \".\" is not accepted).\n         *\n         * In practice, teams usually precompile into the binary all types that they\n         * expect it to use in the context of Any. However, for URLs which use the\n         * scheme `http`, `https`, or no scheme, one can optionally set up a type\n         * server that maps type URLs to message definitions as follows:\n         *\n         * * If no scheme is provided, `https` is assumed.\n         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n         *   value in binary format, or produce an error.\n         * * Applications are allowed to cache lookup results based on the\n         *   URL, or have them precompiled into a binary to avoid any\n         *   lookup. Therefore, binary compatibility needs to be preserved\n         *   on changes to types. (Use versioned type names to manage\n         *   breaking changes.)\n         *\n         * Note: this functionality is not currently available in the official\n         * protobuf release, and it is not used for type URLs beginning with\n         * type.googleapis.com.\n         *\n         * Schemes other than `http`, `https` (or the empty scheme) might be\n         * used with implementation specific semantics.\n         *\n         *\n         * @generated from field: string type_url = 1;\n         */\n        this.typeUrl = \"\";\n        /**\n         * Must be a valid serialized protocol buffer of the above specified type.\n         *\n         * @generated from field: bytes value = 2;\n         */\n        this.value = new Uint8Array(0);\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        var _a;\n        if (this.typeUrl === \"\") {\n            return {};\n        }\n        const typeName = this.typeUrlToName(this.typeUrl);\n        const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n        }\n        const message = messageType.fromBinary(this.value);\n        let json = message.toJson(options);\n        if (typeName.startsWith(\"google.protobuf.\") || (json === null || Array.isArray(json) || typeof json !== \"object\")) {\n            json = { value: json };\n        }\n        json[\"@type\"] = this.typeUrl;\n        return json;\n    }\n    fromJson(json, options) {\n        var _a;\n        if (json === null || Array.isArray(json) || typeof json != \"object\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n        }\n        if (Object.keys(json).length == 0) {\n            return this;\n        }\n        const typeUrl = json[\"@type\"];\n        if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n        }\n        const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n        if (!messageType) {\n            throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n        }\n        let message;\n        if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) {\n            message = messageType.fromJson(json[\"value\"], options);\n        }\n        else {\n            const copy = Object.assign({}, json);\n            delete copy[\"@type\"];\n            message = messageType.fromJson(copy, options);\n        }\n        this.packFrom(message);\n        return this;\n    }\n    packFrom(message) {\n        this.value = message.toBinary();\n        this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n    }\n    unpackTo(target) {\n        if (!this.is(target.getType())) {\n            return false;\n        }\n        target.fromBinary(this.value);\n        return true;\n    }\n    unpack(registry) {\n        if (this.typeUrl === \"\") {\n            return undefined;\n        }\n        const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n        if (!messageType) {\n            return undefined;\n        }\n        return messageType.fromBinary(this.value);\n    }\n    is(type) {\n        if (this.typeUrl === '') {\n            return false;\n        }\n        const name = this.typeUrlToName(this.typeUrl);\n        let typeName = '';\n        if (typeof type === 'string') {\n            typeName = type;\n        }\n        else {\n            typeName = type.typeName;\n        }\n        return name === typeName;\n    }\n    typeNameToUrl(name) {\n        return `type.googleapis.com/${name}`;\n    }\n    typeUrlToName(url) {\n        if (!url.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        const slash = url.lastIndexOf(\"/\");\n        const name = slash > 0 ? url.substring(slash + 1) : url;\n        if (!name.length) {\n            throw new Error(`invalid type url: ${url}`);\n        }\n        return name;\n    }\n    static pack(message) {\n        const any = new Any();\n        any.packFrom(message);\n        return any;\n    }\n    static fromBinary(bytes, options) {\n        return new Any().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Any().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Any().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Any, a, b);\n    }\n}\nexports.Any = Any;\nAny.runtime = proto3_js_1.proto3;\nAny.typeName = \"google.protobuf.Any\";\nAny.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Empty = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * A generic empty message that you can re-use to avoid defining duplicated\n * empty messages in your APIs. A typical example is to use it as the request\n * or the response type of an API method. For instance:\n *\n *     service Foo {\n *       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *     }\n *\n *\n * @generated from message google.protobuf.Empty\n */\nclass Empty extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Empty().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Empty().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Empty().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Empty, a, b);\n    }\n}\nexports.Empty = Empty;\nEmpty.runtime = proto3_js_1.proto3;\nEmpty.typeName = \"google.protobuf.Empty\";\nEmpty.fields = proto3_js_1.proto3.util.newFieldList(() => []);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldMask = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * `FieldMask` represents a set of symbolic field paths, for example:\n *\n *     paths: \"f.a\"\n *     paths: \"f.b.d\"\n *\n * Here `f` represents a field in some root message, `a` and `b`\n * fields in the message found in `f`, and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection, a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example, if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x,y and z\n * (their value will be set to the default, and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation, the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation, the\n * field mask applies directly to the response, but in case of a REST\n * list operation, the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method,\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case, the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values, the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation, new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation, then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example, given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: [\"f.b\", \"f.c\"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1, 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default, the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence, in order to reset all fields of a resource, provide a default\n * instance of the resource and set all fields in the mask, or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update, the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution, this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior, a specific service may require a client to always specify\n * a field mask, producing an error if not.\n *\n * As with get operations, the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case, the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON, a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example, consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: \"user.display_name\"\n *       paths: \"photo\"\n *     }\n *\n * In JSON, the same mask is represented as below:\n *\n *     {\n *       mask: \"user.displayName,photo\"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: \"name\"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: \"sub_message\"\n *     }\n *\n * Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths, and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */\nclass FieldMask extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */\n        this.paths = [];\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for (let i = 0; i < snakeCase.length; i++) {\n                let c = snakeCase.charAt(i);\n                switch (c) {\n                    case '_':\n                        capNext = true;\n                        break;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join('');\n        }\n        return this.paths.map(p => {\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n                throw new Error(\"cannot encode google.protobuf.FieldMask to JSON: lowerCamelCase of path name \\\"\" + p + \"\\\" is irreversible\");\n            }\n            return protoCamelCase(p);\n        }).join(\",\");\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: \" + proto3_js_1.proto3.json.debug(json));\n        }\n        if (json === \"\") {\n            return this;\n        }\n        function camelToSnake(str) {\n            if (str.includes(\"_\")) {\n                throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase\");\n            }\n            const sc = str.replace(/[A-Z]/g, letter => \"_\" + letter.toLowerCase());\n            return (sc[0] === \"_\") ? sc.substring(1) : sc;\n        }\n        this.paths = json.split(\",\").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FieldMask().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldMask().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldMask().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(FieldMask, a, b);\n    }\n}\nexports.FieldMask = FieldMask;\nFieldMask.runtime = proto3_js_1.proto3;\nFieldMask.typeName = \"google.protobuf.FieldMask\";\nFieldMask.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"paths\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListValue = exports.Value = exports.Struct = exports.NullValue = void 0;\n// @generated by protoc-gen-es v1.3.0 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/struct.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\nconst proto3_js_1 = require(\"../../proto3.js\");\nconst message_js_1 = require(\"../../message.js\");\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n *\n * @generated from enum google.protobuf.NullValue\n */\nvar NullValue;\n(function (NullValue) {\n    /**\n     * Null value.\n     *\n     * @generated from enum value: NULL_VALUE = 0;\n     */\n    NullValue[NullValue[\"NULL_VALUE\"] = 0] = \"NULL_VALUE\";\n})(NullValue || (exports.NullValue = NullValue = {}));\n// Retrieve enum metadata with: proto3.getEnumType(NullValue)\nproto3_js_1.proto3.util.setEnumType(NullValue, \"google.protobuf.NullValue\", [\n    { no: 0, name: \"NULL_VALUE\" },\n]);\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n *\n * @generated from message google.protobuf.Struct\n */\nclass Struct extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Unordered map of dynamically typed values.\n         *\n         * @generated from field: map<string, google.protobuf.Value> fields = 1;\n         */\n        this.fields = {};\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        const json = {};\n        for (const [k, v] of Object.entries(this.fields)) {\n            json[k] = v.toJson(options);\n        }\n        return json;\n    }\n    fromJson(json, options) {\n        if (typeof json != \"object\" || json == null || Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.Struct from JSON \" + proto3_js_1.proto3.json.debug(json));\n        }\n        for (const [k, v] of Object.entries(json)) {\n            this.fields[k] = Value.fromJson(v);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Struct().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Struct().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Struct().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Struct, a, b);\n    }\n}\nexports.Struct = Struct;\nStruct.runtime = proto3_js_1.proto3;\nStruct.typeName = \"google.protobuf.Struct\";\nStruct.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"fields\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"message\", T: Value } },\n]);\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n *\n * @generated from message google.protobuf.Value\n */\nclass Value extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The kind of value.\n         *\n         * @generated from oneof google.protobuf.Value.kind\n         */\n        this.kind = { case: undefined };\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        switch (this.kind.case) {\n            case \"nullValue\":\n                return null;\n            case \"numberValue\":\n                if (!Number.isFinite(this.kind.value)) {\n                    throw new Error(\"google.protobuf.Value cannot be NaN or Infinity\");\n                }\n                return this.kind.value;\n            case \"boolValue\":\n                return this.kind.value;\n            case \"stringValue\":\n                return this.kind.value;\n            case \"structValue\":\n            case \"listValue\":\n                return this.kind.value.toJson(Object.assign(Object.assign({}, options), { emitDefaultValues: true }));\n        }\n        throw new Error(\"google.protobuf.Value must have a value\");\n    }\n    fromJson(json, options) {\n        switch (typeof json) {\n            case \"number\":\n                this.kind = { case: \"numberValue\", value: json };\n                break;\n            case \"string\":\n                this.kind = { case: \"stringValue\", value: json };\n                break;\n            case \"boolean\":\n                this.kind = { case: \"boolValue\", value: json };\n                break;\n            case \"object\":\n                if (json === null) {\n                    this.kind = { case: \"nullValue\", value: NullValue.NULL_VALUE };\n                }\n                else if (Array.isArray(json)) {\n                    this.kind = { case: \"listValue\", value: ListValue.fromJson(json) };\n                }\n                else {\n                    this.kind = { case: \"structValue\", value: Struct.fromJson(json) };\n                }\n                break;\n            default:\n                throw new Error(\"cannot decode google.protobuf.Value from JSON \" + proto3_js_1.proto3.json.debug(json));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Value, a, b);\n    }\n}\nexports.Value = Value;\nValue.runtime = proto3_js_1.proto3;\nValue.typeName = \"google.protobuf.Value\";\nValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"null_value\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(NullValue), oneof: \"kind\" },\n    { no: 2, name: \"number_value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, oneof: \"kind\" },\n    { no: 3, name: \"string_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"kind\" },\n    { no: 4, name: \"bool_value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, oneof: \"kind\" },\n    { no: 5, name: \"struct_value\", kind: \"message\", T: Struct, oneof: \"kind\" },\n    { no: 6, name: \"list_value\", kind: \"message\", T: ListValue, oneof: \"kind\" },\n]);\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n *\n * @generated from message google.protobuf.ListValue\n */\nclass ListValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Repeated field of dynamically typed values.\n         *\n         * @generated from field: repeated google.protobuf.Value values = 1;\n         */\n        this.values = [];\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return this.values.map(v => v.toJson());\n    }\n    fromJson(json, options) {\n        if (!Array.isArray(json)) {\n            throw new Error(\"cannot decode google.protobuf.ListValue from JSON \" + proto3_js_1.proto3.json.debug(json));\n        }\n        for (let e of json) {\n            this.values.push(Value.fromJson(e));\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new ListValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(ListValue, a, b);\n    }\n}\nexports.ListValue = ListValue;\nListValue.runtime = proto3_js_1.proto3;\nListValue.typeName = \"google.protobuf.ListValue\";\nListValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"values\", kind: \"message\", T: Value, repeated: true },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BytesValue = exports.StringValue = exports.BoolValue = exports.UInt32Value = exports.Int32Value = exports.UInt64Value = exports.Int64Value = exports.FloatValue = exports.DoubleValue = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\nconst field_js_1 = require(\"../../field.js\");\nconst proto_int64_js_1 = require(\"../../proto-int64.js\");\n/**\n * Wrapper message for `double`.\n *\n * The JSON representation for `DoubleValue` is JSON number.\n *\n * @generated from message google.protobuf.DoubleValue\n */\nclass DoubleValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The double value.\n         *\n         * @generated from field: double value = 1;\n         */\n        this.value = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.DOUBLE, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.DOUBLE, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.DoubleValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new DoubleValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DoubleValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DoubleValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(DoubleValue, a, b);\n    }\n}\nexports.DoubleValue = DoubleValue;\nDoubleValue.runtime = proto3_js_1.proto3;\nDoubleValue.typeName = \"google.protobuf.DoubleValue\";\nDoubleValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */ },\n]);\nDoubleValue.fieldWrapper = {\n    wrapField(value) {\n        return new DoubleValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `float`.\n *\n * The JSON representation for `FloatValue` is JSON number.\n *\n * @generated from message google.protobuf.FloatValue\n */\nclass FloatValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The float value.\n         *\n         * @generated from field: float value = 1;\n         */\n        this.value = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.FLOAT, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.FLOAT, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.FloatValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FloatValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FloatValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FloatValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(FloatValue, a, b);\n    }\n}\nexports.FloatValue = FloatValue;\nFloatValue.runtime = proto3_js_1.proto3;\nFloatValue.typeName = \"google.protobuf.FloatValue\";\nFloatValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n]);\nFloatValue.fieldWrapper = {\n    wrapField(value) {\n        return new FloatValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int64`.\n *\n * The JSON representation for `Int64Value` is JSON string.\n *\n * @generated from message google.protobuf.Int64Value\n */\nclass Int64Value extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The int64 value.\n         *\n         * @generated from field: int64 value = 1;\n         */\n        this.value = proto_int64_js_1.protoInt64.zero;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.INT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.INT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Int64Value, a, b);\n    }\n}\nexports.Int64Value = Int64Value;\nInt64Value.runtime = proto3_js_1.proto3;\nInt64Value.typeName = \"google.protobuf.Int64Value\";\nInt64Value.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n]);\nInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint64`.\n *\n * The JSON representation for `UInt64Value` is JSON string.\n *\n * @generated from message google.protobuf.UInt64Value\n */\nclass UInt64Value extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint64 value.\n         *\n         * @generated from field: uint64 value = 1;\n         */\n        this.value = proto_int64_js_1.protoInt64.zero;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.UINT64, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.UINT64, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt64Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt64Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt64Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt64Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(UInt64Value, a, b);\n    }\n}\nexports.UInt64Value = UInt64Value;\nUInt64Value.runtime = proto3_js_1.proto3;\nUInt64Value.typeName = \"google.protobuf.UInt64Value\";\nUInt64Value.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */ },\n]);\nUInt64Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt64Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `int32`.\n *\n * The JSON representation for `Int32Value` is JSON number.\n *\n * @generated from message google.protobuf.Int32Value\n */\nclass Int32Value extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The int32 value.\n         *\n         * @generated from field: int32 value = 1;\n         */\n        this.value = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.INT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.INT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.Int32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new Int32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Int32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Int32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Int32Value, a, b);\n    }\n}\nexports.Int32Value = Int32Value;\nInt32Value.runtime = proto3_js_1.proto3;\nInt32Value.typeName = \"google.protobuf.Int32Value\";\nInt32Value.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\nInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new Int32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `uint32`.\n *\n * The JSON representation for `UInt32Value` is JSON number.\n *\n * @generated from message google.protobuf.UInt32Value\n */\nclass UInt32Value extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The uint32 value.\n         *\n         * @generated from field: uint32 value = 1;\n         */\n        this.value = 0;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.UINT32, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.UINT32, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.UInt32Value from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new UInt32Value().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UInt32Value().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UInt32Value().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(UInt32Value, a, b);\n    }\n}\nexports.UInt32Value = UInt32Value;\nUInt32Value.runtime = proto3_js_1.proto3;\nUInt32Value.typeName = \"google.protobuf.UInt32Value\";\nUInt32Value.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 13 /* ScalarType.UINT32 */ },\n]);\nUInt32Value.fieldWrapper = {\n    wrapField(value) {\n        return new UInt32Value({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bool`.\n *\n * The JSON representation for `BoolValue` is JSON `true` and `false`.\n *\n * @generated from message google.protobuf.BoolValue\n */\nclass BoolValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The bool value.\n         *\n         * @generated from field: bool value = 1;\n         */\n        this.value = false;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.BOOL, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.BOOL, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BoolValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BoolValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BoolValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BoolValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(BoolValue, a, b);\n    }\n}\nexports.BoolValue = BoolValue;\nBoolValue.runtime = proto3_js_1.proto3;\nBoolValue.typeName = \"google.protobuf.BoolValue\";\nBoolValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n]);\nBoolValue.fieldWrapper = {\n    wrapField(value) {\n        return new BoolValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `string`.\n *\n * The JSON representation for `StringValue` is JSON string.\n *\n * @generated from message google.protobuf.StringValue\n */\nclass StringValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The string value.\n         *\n         * @generated from field: string value = 1;\n         */\n        this.value = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.STRING, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.STRING, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.StringValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new StringValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new StringValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new StringValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(StringValue, a, b);\n    }\n}\nexports.StringValue = StringValue;\nStringValue.runtime = proto3_js_1.proto3;\nStringValue.typeName = \"google.protobuf.StringValue\";\nStringValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\nStringValue.fieldWrapper = {\n    wrapField(value) {\n        return new StringValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n/**\n * Wrapper message for `bytes`.\n *\n * The JSON representation for `BytesValue` is JSON string.\n *\n * @generated from message google.protobuf.BytesValue\n */\nclass BytesValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The bytes value.\n         *\n         * @generated from field: bytes value = 1;\n         */\n        this.value = new Uint8Array(0);\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        return proto3_js_1.proto3.json.writeScalar(field_js_1.ScalarType.BYTES, this.value, true);\n    }\n    fromJson(json, options) {\n        try {\n            this.value = proto3_js_1.proto3.json.readScalar(field_js_1.ScalarType.BYTES, json);\n        }\n        catch (e) {\n            let m = `cannot decode message google.protobuf.BytesValue from JSON\"`;\n            if (e instanceof Error && e.message.length > 0) {\n                m += `: ${e.message}`;\n            }\n            throw new Error(m);\n        }\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new BytesValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new BytesValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new BytesValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(BytesValue, a, b);\n    }\n}\nexports.BytesValue = BytesValue;\nBytesValue.runtime = proto3_js_1.proto3;\nBytesValue.typeName = \"google.protobuf.BytesValue\";\nBytesValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"value\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */ },\n]);\nBytesValue.fieldWrapper = {\n    wrapField(value) {\n        return new BytesValue({ value });\n    },\n    unwrapField(value) {\n        return value.value;\n    }\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGeneratorResponse_File = exports.CodeGeneratorResponse_Feature = exports.CodeGeneratorResponse = exports.CodeGeneratorRequest = exports.Version = void 0;\nconst message_js_1 = require(\"../../../message.js\");\nconst proto2_js_1 = require(\"../../../proto2.js\");\nconst descriptor_pb_js_1 = require(\"../descriptor_pb.js\");\n/**\n * The version number of protocol compiler.\n *\n * @generated from message google.protobuf.compiler.Version\n */\nclass Version extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Version().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Version().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Version().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(Version, a, b);\n    }\n}\nexports.Version = Version;\nVersion.runtime = proto2_js_1.proto2;\nVersion.typeName = \"google.protobuf.compiler.Version\";\nVersion.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"major\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 2, name: \"minor\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"patch\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"suffix\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * An encoded CodeGeneratorRequest is written to the plugin's stdin.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorRequest\n */\nclass CodeGeneratorRequest extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The .proto files that were explicitly listed on the command-line.  The\n         * code generator should generate code only for these files.  Each file's\n         * descriptor will be included in proto_file, below.\n         *\n         * @generated from field: repeated string file_to_generate = 1;\n         */\n        this.fileToGenerate = [];\n        /**\n         * FileDescriptorProtos for all files in files_to_generate and everything\n         * they import.  The files will appear in topological order, so each file\n         * appears before any file that imports it.\n         *\n         * protoc guarantees that all proto_files will be written after\n         * the fields above, even though this is not technically guaranteed by the\n         * protobuf wire format.  This theoretically could allow a plugin to stream\n         * in the FileDescriptorProtos and handle them one by one rather than read\n         * the entire set into memory at once.  However, as of this writing, this\n         * is not similarly optimized on protoc's end -- it will store all fields in\n         * memory at once before sending them to the plugin.\n         *\n         * Type names of fields and extensions in the FileDescriptorProto are always\n         * fully qualified.\n         *\n         * @generated from field: repeated google.protobuf.FileDescriptorProto proto_file = 15;\n         */\n        this.protoFile = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(CodeGeneratorRequest, a, b);\n    }\n}\nexports.CodeGeneratorRequest = CodeGeneratorRequest;\nCodeGeneratorRequest.runtime = proto2_js_1.proto2;\nCodeGeneratorRequest.typeName = \"google.protobuf.compiler.CodeGeneratorRequest\";\nCodeGeneratorRequest.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"file_to_generate\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"parameter\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"proto_file\", kind: \"message\", T: descriptor_pb_js_1.FileDescriptorProto, repeated: true },\n    { no: 3, name: \"compiler_version\", kind: \"message\", T: Version, opt: true },\n]);\n/**\n * The plugin writes an encoded CodeGeneratorResponse to stdout.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse\n */\nclass CodeGeneratorResponse extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated google.protobuf.compiler.CodeGeneratorResponse.File file = 15;\n         */\n        this.file = [];\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(CodeGeneratorResponse, a, b);\n    }\n}\nexports.CodeGeneratorResponse = CodeGeneratorResponse;\nCodeGeneratorResponse.runtime = proto2_js_1.proto2;\nCodeGeneratorResponse.typeName = \"google.protobuf.compiler.CodeGeneratorResponse\";\nCodeGeneratorResponse.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"error\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"supported_features\", kind: \"scalar\", T: 4 /* ScalarType.UINT64 */, opt: true },\n    { no: 15, name: \"file\", kind: \"message\", T: CodeGeneratorResponse_File, repeated: true },\n]);\n/**\n * Sync with code_generator.h.\n *\n * @generated from enum google.protobuf.compiler.CodeGeneratorResponse.Feature\n */\nvar CodeGeneratorResponse_Feature;\n(function (CodeGeneratorResponse_Feature) {\n    /**\n     * @generated from enum value: FEATURE_NONE = 0;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * @generated from enum value: FEATURE_PROTO3_OPTIONAL = 1;\n     */\n    CodeGeneratorResponse_Feature[CodeGeneratorResponse_Feature[\"PROTO3_OPTIONAL\"] = 1] = \"PROTO3_OPTIONAL\";\n})(CodeGeneratorResponse_Feature || (exports.CodeGeneratorResponse_Feature = CodeGeneratorResponse_Feature = {}));\n// Retrieve enum metadata with: proto2.getEnumType(CodeGeneratorResponse_Feature)\nproto2_js_1.proto2.util.setEnumType(CodeGeneratorResponse_Feature, \"google.protobuf.compiler.CodeGeneratorResponse.Feature\", [\n    { no: 0, name: \"FEATURE_NONE\" },\n    { no: 1, name: \"FEATURE_PROTO3_OPTIONAL\" },\n]);\n/**\n * Represents a single generated file.\n *\n * @generated from message google.protobuf.compiler.CodeGeneratorResponse.File\n */\nclass CodeGeneratorResponse_File extends message_js_1.Message {\n    constructor(data) {\n        super();\n        proto2_js_1.proto2.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CodeGeneratorResponse_File().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CodeGeneratorResponse_File().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CodeGeneratorResponse_File().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto2_js_1.proto2.util.equals(CodeGeneratorResponse_File, a, b);\n    }\n}\nexports.CodeGeneratorResponse_File = CodeGeneratorResponse_File;\nCodeGeneratorResponse_File.runtime = proto2_js_1.proto2;\nCodeGeneratorResponse_File.typeName = \"google.protobuf.compiler.CodeGeneratorResponse.File\";\nCodeGeneratorResponse_File.fields = proto2_js_1.proto2.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"insertion_point\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 15, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 16, name: \"generated_code_info\", kind: \"message\", T: descriptor_pb_js_1.GeneratedCodeInfo, opt: true },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mixin = exports.Method = exports.Api = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst type_pb_js_1 = require(\"./type_pb.js\");\nconst source_context_pb_js_1 = require(\"./source_context_pb.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * Api is a light-weight descriptor for an API Interface.\n *\n * Interfaces are also described as \"protocol buffer services\" in some contexts,\n * such as by the \"service\" keyword in a .proto file, but they are different\n * from API Services, which represent a concrete implementation of an interface\n * as opposed to simply a description of methods and bindings. They are also\n * sometimes simply referred to as \"APIs\" in other contexts, such as the name of\n * this message itself. See https://cloud.google.com/apis/design/glossary for\n * detailed terminology.\n *\n * @generated from message google.protobuf.Api\n */\nclass Api extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of this interface, including package name\n         * followed by the interface's simple name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The methods of this interface, in unspecified order.\n         *\n         * @generated from field: repeated google.protobuf.Method methods = 2;\n         */\n        this.methods = [];\n        /**\n         * Any metadata attached to the interface.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * A version string for this interface. If specified, must have the form\n         * `major-version.minor-version`, as in `1.10`. If the minor version is\n         * omitted, it defaults to zero. If the entire version field is empty, the\n         * major version is derived from the package name, as outlined below. If the\n         * field is not empty, the version in the package name will be verified to be\n         * consistent with what is provided here.\n         *\n         * The versioning schema uses [semantic\n         * versioning](http://semver.org) where the major version number\n         * indicates a breaking change and the minor version an additive,\n         * non-breaking change. Both version numbers are signals to users\n         * what to expect from different versions, and should be carefully\n         * chosen based on the product plan.\n         *\n         * The major version is also reflected in the package name of the\n         * interface, which must end in `v<major-version>`, as in\n         * `google.feature.v1`. For major versions 0 and 1, the suffix can\n         * be omitted. Zero major versions must only be used for\n         * experimental, non-GA interfaces.\n         *\n         *\n         * @generated from field: string version = 4;\n         */\n        this.version = \"\";\n        /**\n         * Included interfaces. See [Mixin][].\n         *\n         * @generated from field: repeated google.protobuf.Mixin mixins = 6;\n         */\n        this.mixins = [];\n        /**\n         * The source syntax of the service.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = type_pb_js_1.Syntax.PROTO2;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Api().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Api().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Api().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Api, a, b);\n    }\n}\nexports.Api = Api;\nApi.runtime = proto3_js_1.proto3;\nApi.typeName = \"google.protobuf.Api\";\nApi.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"methods\", kind: \"message\", T: Method, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: type_pb_js_1.Option, repeated: true },\n    { no: 4, name: \"version\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"source_context\", kind: \"message\", T: source_context_pb_js_1.SourceContext },\n    { no: 6, name: \"mixins\", kind: \"message\", T: Mixin, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(type_pb_js_1.Syntax) },\n]);\n/**\n * Method represents a method of an API interface.\n *\n * @generated from message google.protobuf.Method\n */\nclass Method extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The simple name of this method.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * A URL of the input message type.\n         *\n         * @generated from field: string request_type_url = 2;\n         */\n        this.requestTypeUrl = \"\";\n        /**\n         * If true, the request is streamed.\n         *\n         * @generated from field: bool request_streaming = 3;\n         */\n        this.requestStreaming = false;\n        /**\n         * The URL of the output message type.\n         *\n         * @generated from field: string response_type_url = 4;\n         */\n        this.responseTypeUrl = \"\";\n        /**\n         * If true, the response is streamed.\n         *\n         * @generated from field: bool response_streaming = 5;\n         */\n        this.responseStreaming = false;\n        /**\n         * Any metadata attached to the method.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 6;\n         */\n        this.options = [];\n        /**\n         * The source syntax of this method.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 7;\n         */\n        this.syntax = type_pb_js_1.Syntax.PROTO2;\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Method().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Method().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Method().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Method, a, b);\n    }\n}\nexports.Method = Method;\nMethod.runtime = proto3_js_1.proto3;\nMethod.typeName = \"google.protobuf.Method\";\nMethod.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"request_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"request_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 4, name: \"response_type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 5, name: \"response_streaming\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 6, name: \"options\", kind: \"message\", T: type_pb_js_1.Option, repeated: true },\n    { no: 7, name: \"syntax\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(type_pb_js_1.Syntax) },\n]);\n/**\n * Declares an API Interface to be included in this interface. The including\n * interface must redeclare all the methods from the included interface, but\n * documentation and options are inherited as follows:\n *\n * - If after comment and whitespace stripping, the documentation\n *   string of the redeclared method is empty, it will be inherited\n *   from the original method.\n *\n * - Each annotation belonging to the service config (http,\n *   visibility) which is not set in the redeclared method will be\n *   inherited.\n *\n * - If an http annotation is inherited, the path pattern will be\n *   modified as follows. Any version prefix will be replaced by the\n *   version of the including interface plus the [root][] path if\n *   specified.\n *\n * Example of a simple mixin:\n *\n *     package google.acl.v1;\n *     service AccessControl {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";\n *       }\n *     }\n *\n *     package google.storage.v2;\n *     service Storage {\n *       rpc GetAcl(GetAclRequest) returns (Acl);\n *\n *       // Get a data record.\n *       rpc GetData(GetDataRequest) returns (Data) {\n *         option (google.api.http).get = \"/v2/{resource=**}\";\n *       }\n *     }\n *\n * Example of a mixin configuration:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *\n * The mixin construct implies that all methods in `AccessControl` are\n * also declared with same name and request/response types in\n * `Storage`. A documentation generator or annotation processor will\n * see the effective `Storage.GetAcl` method after inherting\n * documentation and annotations as follows:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * Note how the version in the path pattern changed from `v1` to `v2`.\n *\n * If the `root` field in the mixin is specified, it should be a\n * relative path under which inherited HTTP paths are placed. Example:\n *\n *     apis:\n *     - name: google.storage.v2.Storage\n *       mixins:\n *       - name: google.acl.v1.AccessControl\n *         root: acls\n *\n * This implies the following inherited HTTP annotation:\n *\n *     service Storage {\n *       // Get the underlying ACL object.\n *       rpc GetAcl(GetAclRequest) returns (Acl) {\n *         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";\n *       }\n *       ...\n *     }\n *\n * @generated from message google.protobuf.Mixin\n */\nclass Mixin extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified name of the interface which is included.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * If non-empty specifies a path under which inherited HTTP paths\n         * are rooted.\n         *\n         * @generated from field: string root = 2;\n         */\n        this.root = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Mixin().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Mixin().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Mixin().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Mixin, a, b);\n    }\n}\nexports.Mixin = Mixin;\nMixin.runtime = proto3_js_1.proto3;\nMixin.typeName = \"google.protobuf.Mixin\";\nMixin.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"root\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Option = exports.EnumValue = exports.Enum = exports.Field_Cardinality = exports.Field_Kind = exports.Field = exports.Type = exports.Syntax = void 0;\n// @generated by protoc-gen-es v1.3.0 with parameter \"bootstrap_wkt=true,ts_nocheck=false,target=ts\"\n// @generated from file google/protobuf/type.proto (package google.protobuf, syntax proto3)\n/* eslint-disable */\nconst proto3_js_1 = require(\"../../proto3.js\");\nconst message_js_1 = require(\"../../message.js\");\nconst source_context_pb_js_1 = require(\"./source_context_pb.js\");\nconst any_pb_js_1 = require(\"./any_pb.js\");\n/**\n * The syntax in which a protocol buffer element is defined.\n *\n * @generated from enum google.protobuf.Syntax\n */\nvar Syntax;\n(function (Syntax) {\n    /**\n     * Syntax `proto2`.\n     *\n     * @generated from enum value: SYNTAX_PROTO2 = 0;\n     */\n    Syntax[Syntax[\"PROTO2\"] = 0] = \"PROTO2\";\n    /**\n     * Syntax `proto3`.\n     *\n     * @generated from enum value: SYNTAX_PROTO3 = 1;\n     */\n    Syntax[Syntax[\"PROTO3\"] = 1] = \"PROTO3\";\n    /**\n     * Syntax `editions`.\n     *\n     * @generated from enum value: SYNTAX_EDITIONS = 2;\n     */\n    Syntax[Syntax[\"EDITIONS\"] = 2] = \"EDITIONS\";\n})(Syntax || (exports.Syntax = Syntax = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Syntax)\nproto3_js_1.proto3.util.setEnumType(Syntax, \"google.protobuf.Syntax\", [\n    { no: 0, name: \"SYNTAX_PROTO2\" },\n    { no: 1, name: \"SYNTAX_PROTO3\" },\n    { no: 2, name: \"SYNTAX_EDITIONS\" },\n]);\n/**\n * A protocol buffer message type.\n *\n * @generated from message google.protobuf.Type\n */\nclass Type extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The fully qualified message name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * The list of fields.\n         *\n         * @generated from field: repeated google.protobuf.Field fields = 2;\n         */\n        this.fields = [];\n        /**\n         * The list of types appearing in `oneof` definitions in this type.\n         *\n         * @generated from field: repeated string oneofs = 3;\n         */\n        this.oneofs = [];\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 4;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 6;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 7;\n         */\n        this.edition = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Type().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Type().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Type().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Type, a, b);\n    }\n}\nexports.Type = Type;\nType.runtime = proto3_js_1.proto3;\nType.typeName = \"google.protobuf.Type\";\nType.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"fields\", kind: \"message\", T: Field, repeated: true },\n    { no: 3, name: \"oneofs\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 4, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 5, name: \"source_context\", kind: \"message\", T: source_context_pb_js_1.SourceContext },\n    { no: 6, name: \"syntax\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(Syntax) },\n    { no: 7, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * A single field of a message type.\n *\n * @generated from message google.protobuf.Field\n */\nclass Field extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The field type.\n         *\n         * @generated from field: google.protobuf.Field.Kind kind = 1;\n         */\n        this.kind = Field_Kind.TYPE_UNKNOWN;\n        /**\n         * The field cardinality.\n         *\n         * @generated from field: google.protobuf.Field.Cardinality cardinality = 2;\n         */\n        this.cardinality = Field_Cardinality.UNKNOWN;\n        /**\n         * The field number.\n         *\n         * @generated from field: int32 number = 3;\n         */\n        this.number = 0;\n        /**\n         * The field name.\n         *\n         * @generated from field: string name = 4;\n         */\n        this.name = \"\";\n        /**\n         * The field type URL, without the scheme, for message or enumeration\n         * types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n         *\n         * @generated from field: string type_url = 6;\n         */\n        this.typeUrl = \"\";\n        /**\n         * The index of the field type in `Type.oneofs`, for message or enumeration\n         * types. The first type has index 1; zero means the type is not in the list.\n         *\n         * @generated from field: int32 oneof_index = 7;\n         */\n        this.oneofIndex = 0;\n        /**\n         * Whether to use alternative packed wire representation.\n         *\n         * @generated from field: bool packed = 8;\n         */\n        this.packed = false;\n        /**\n         * The protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 9;\n         */\n        this.options = [];\n        /**\n         * The field JSON name.\n         *\n         * @generated from field: string json_name = 10;\n         */\n        this.jsonName = \"\";\n        /**\n         * The string value of the default value of this field. Proto2 syntax only.\n         *\n         * @generated from field: string default_value = 11;\n         */\n        this.defaultValue = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Field().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Field().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Field().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Field, a, b);\n    }\n}\nexports.Field = Field;\nField.runtime = proto3_js_1.proto3;\nField.typeName = \"google.protobuf.Field\";\nField.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"kind\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(Field_Kind) },\n    { no: 2, name: \"cardinality\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(Field_Cardinality) },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 4, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 6, name: \"type_url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 7, name: \"oneof_index\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 8, name: \"packed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 9, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 10, name: \"json_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 11, name: \"default_value\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Basic field types.\n *\n * @generated from enum google.protobuf.Field.Kind\n */\nvar Field_Kind;\n(function (Field_Kind) {\n    /**\n     * Field type unknown.\n     *\n     * @generated from enum value: TYPE_UNKNOWN = 0;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UNKNOWN\"] = 0] = \"TYPE_UNKNOWN\";\n    /**\n     * Field type double.\n     *\n     * @generated from enum value: TYPE_DOUBLE = 1;\n     */\n    Field_Kind[Field_Kind[\"TYPE_DOUBLE\"] = 1] = \"TYPE_DOUBLE\";\n    /**\n     * Field type float.\n     *\n     * @generated from enum value: TYPE_FLOAT = 2;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FLOAT\"] = 2] = \"TYPE_FLOAT\";\n    /**\n     * Field type int64.\n     *\n     * @generated from enum value: TYPE_INT64 = 3;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT64\"] = 3] = \"TYPE_INT64\";\n    /**\n     * Field type uint64.\n     *\n     * @generated from enum value: TYPE_UINT64 = 4;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT64\"] = 4] = \"TYPE_UINT64\";\n    /**\n     * Field type int32.\n     *\n     * @generated from enum value: TYPE_INT32 = 5;\n     */\n    Field_Kind[Field_Kind[\"TYPE_INT32\"] = 5] = \"TYPE_INT32\";\n    /**\n     * Field type fixed64.\n     *\n     * @generated from enum value: TYPE_FIXED64 = 6;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED64\"] = 6] = \"TYPE_FIXED64\";\n    /**\n     * Field type fixed32.\n     *\n     * @generated from enum value: TYPE_FIXED32 = 7;\n     */\n    Field_Kind[Field_Kind[\"TYPE_FIXED32\"] = 7] = \"TYPE_FIXED32\";\n    /**\n     * Field type bool.\n     *\n     * @generated from enum value: TYPE_BOOL = 8;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BOOL\"] = 8] = \"TYPE_BOOL\";\n    /**\n     * Field type string.\n     *\n     * @generated from enum value: TYPE_STRING = 9;\n     */\n    Field_Kind[Field_Kind[\"TYPE_STRING\"] = 9] = \"TYPE_STRING\";\n    /**\n     * Field type group. Proto2 syntax only, and deprecated.\n     *\n     * @generated from enum value: TYPE_GROUP = 10;\n     */\n    Field_Kind[Field_Kind[\"TYPE_GROUP\"] = 10] = \"TYPE_GROUP\";\n    /**\n     * Field type message.\n     *\n     * @generated from enum value: TYPE_MESSAGE = 11;\n     */\n    Field_Kind[Field_Kind[\"TYPE_MESSAGE\"] = 11] = \"TYPE_MESSAGE\";\n    /**\n     * Field type bytes.\n     *\n     * @generated from enum value: TYPE_BYTES = 12;\n     */\n    Field_Kind[Field_Kind[\"TYPE_BYTES\"] = 12] = \"TYPE_BYTES\";\n    /**\n     * Field type uint32.\n     *\n     * @generated from enum value: TYPE_UINT32 = 13;\n     */\n    Field_Kind[Field_Kind[\"TYPE_UINT32\"] = 13] = \"TYPE_UINT32\";\n    /**\n     * Field type enum.\n     *\n     * @generated from enum value: TYPE_ENUM = 14;\n     */\n    Field_Kind[Field_Kind[\"TYPE_ENUM\"] = 14] = \"TYPE_ENUM\";\n    /**\n     * Field type sfixed32.\n     *\n     * @generated from enum value: TYPE_SFIXED32 = 15;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED32\"] = 15] = \"TYPE_SFIXED32\";\n    /**\n     * Field type sfixed64.\n     *\n     * @generated from enum value: TYPE_SFIXED64 = 16;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SFIXED64\"] = 16] = \"TYPE_SFIXED64\";\n    /**\n     * Field type sint32.\n     *\n     * @generated from enum value: TYPE_SINT32 = 17;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT32\"] = 17] = \"TYPE_SINT32\";\n    /**\n     * Field type sint64.\n     *\n     * @generated from enum value: TYPE_SINT64 = 18;\n     */\n    Field_Kind[Field_Kind[\"TYPE_SINT64\"] = 18] = \"TYPE_SINT64\";\n})(Field_Kind || (exports.Field_Kind = Field_Kind = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Kind)\nproto3_js_1.proto3.util.setEnumType(Field_Kind, \"google.protobuf.Field.Kind\", [\n    { no: 0, name: \"TYPE_UNKNOWN\" },\n    { no: 1, name: \"TYPE_DOUBLE\" },\n    { no: 2, name: \"TYPE_FLOAT\" },\n    { no: 3, name: \"TYPE_INT64\" },\n    { no: 4, name: \"TYPE_UINT64\" },\n    { no: 5, name: \"TYPE_INT32\" },\n    { no: 6, name: \"TYPE_FIXED64\" },\n    { no: 7, name: \"TYPE_FIXED32\" },\n    { no: 8, name: \"TYPE_BOOL\" },\n    { no: 9, name: \"TYPE_STRING\" },\n    { no: 10, name: \"TYPE_GROUP\" },\n    { no: 11, name: \"TYPE_MESSAGE\" },\n    { no: 12, name: \"TYPE_BYTES\" },\n    { no: 13, name: \"TYPE_UINT32\" },\n    { no: 14, name: \"TYPE_ENUM\" },\n    { no: 15, name: \"TYPE_SFIXED32\" },\n    { no: 16, name: \"TYPE_SFIXED64\" },\n    { no: 17, name: \"TYPE_SINT32\" },\n    { no: 18, name: \"TYPE_SINT64\" },\n]);\n/**\n * Whether a field is optional, required, or repeated.\n *\n * @generated from enum google.protobuf.Field.Cardinality\n */\nvar Field_Cardinality;\n(function (Field_Cardinality) {\n    /**\n     * For fields with unknown cardinality.\n     *\n     * @generated from enum value: CARDINALITY_UNKNOWN = 0;\n     */\n    Field_Cardinality[Field_Cardinality[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * For optional fields.\n     *\n     * @generated from enum value: CARDINALITY_OPTIONAL = 1;\n     */\n    Field_Cardinality[Field_Cardinality[\"OPTIONAL\"] = 1] = \"OPTIONAL\";\n    /**\n     * For required fields. Proto2 syntax only.\n     *\n     * @generated from enum value: CARDINALITY_REQUIRED = 2;\n     */\n    Field_Cardinality[Field_Cardinality[\"REQUIRED\"] = 2] = \"REQUIRED\";\n    /**\n     * For repeated fields.\n     *\n     * @generated from enum value: CARDINALITY_REPEATED = 3;\n     */\n    Field_Cardinality[Field_Cardinality[\"REPEATED\"] = 3] = \"REPEATED\";\n})(Field_Cardinality || (exports.Field_Cardinality = Field_Cardinality = {}));\n// Retrieve enum metadata with: proto3.getEnumType(Field_Cardinality)\nproto3_js_1.proto3.util.setEnumType(Field_Cardinality, \"google.protobuf.Field.Cardinality\", [\n    { no: 0, name: \"CARDINALITY_UNKNOWN\" },\n    { no: 1, name: \"CARDINALITY_OPTIONAL\" },\n    { no: 2, name: \"CARDINALITY_REQUIRED\" },\n    { no: 3, name: \"CARDINALITY_REPEATED\" },\n]);\n/**\n * Enum type definition.\n *\n * @generated from message google.protobuf.Enum\n */\nclass Enum extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum type name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value definitions.\n         *\n         * @generated from field: repeated google.protobuf.EnumValue enumvalue = 2;\n         */\n        this.enumvalue = [];\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        /**\n         * The source syntax.\n         *\n         * @generated from field: google.protobuf.Syntax syntax = 5;\n         */\n        this.syntax = Syntax.PROTO2;\n        /**\n         * The source edition string, only valid when syntax is SYNTAX_EDITIONS.\n         *\n         * @generated from field: string edition = 6;\n         */\n        this.edition = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Enum().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Enum().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Enum().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Enum, a, b);\n    }\n}\nexports.Enum = Enum;\nEnum.runtime = proto3_js_1.proto3;\nEnum.typeName = \"google.protobuf.Enum\";\nEnum.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"enumvalue\", kind: \"message\", T: EnumValue, repeated: true },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n    { no: 4, name: \"source_context\", kind: \"message\", T: source_context_pb_js_1.SourceContext },\n    { no: 5, name: \"syntax\", kind: \"enum\", T: proto3_js_1.proto3.getEnumType(Syntax) },\n    { no: 6, name: \"edition\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * Enum value definition.\n *\n * @generated from message google.protobuf.EnumValue\n */\nclass EnumValue extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * Enum value name.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        /**\n         * Enum value number.\n         *\n         * @generated from field: int32 number = 2;\n         */\n        this.number = 0;\n        /**\n         * Protocol buffer options.\n         *\n         * @generated from field: repeated google.protobuf.Option options = 3;\n         */\n        this.options = [];\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EnumValue().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EnumValue().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EnumValue().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(EnumValue, a, b);\n    }\n}\nexports.EnumValue = EnumValue;\nEnumValue.runtime = proto3_js_1.proto3;\nEnumValue.typeName = \"google.protobuf.EnumValue\";\nEnumValue.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"number\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 3, name: \"options\", kind: \"message\", T: Option, repeated: true },\n]);\n/**\n * A protocol buffer option, which can be attached to a message, field,\n * enumeration, etc.\n *\n * @generated from message google.protobuf.Option\n */\nclass Option extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The option's name. For protobuf built-in options (options defined in\n         * descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n         * For custom options, it should be the fully-qualified name. For example,\n         * `\"google.api.http\"`.\n         *\n         * @generated from field: string name = 1;\n         */\n        this.name = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Option().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Option().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Option().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(Option, a, b);\n    }\n}\nexports.Option = Option;\nOption.runtime = proto3_js_1.proto3;\nOption.typeName = \"google.protobuf.Option\";\nOption.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"value\", kind: \"message\", T: any_pb_js_1.Any },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceContext = void 0;\nconst message_js_1 = require(\"../../message.js\");\nconst proto3_js_1 = require(\"../../proto3.js\");\n/**\n * `SourceContext` represents information about the source of a\n * protobuf element, like the file in which it is defined.\n *\n * @generated from message google.protobuf.SourceContext\n */\nclass SourceContext extends message_js_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The path-qualified name of the .proto file that contained the associated\n         * protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n         *\n         * @generated from field: string file_name = 1;\n         */\n        this.fileName = \"\";\n        proto3_js_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SourceContext().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SourceContext().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SourceContext().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3_js_1.proto3.util.equals(SourceContext, a, b);\n    }\n}\nexports.SourceContext = SourceContext;\nSourceContext.runtime = proto3_js_1.proto3;\nSourceContext.typeName = \"google.protobuf.SourceContext\";\nSourceContext.fields = proto3_js_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"file_name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headerXGrpcWeb = exports.headerXUserAgent = exports.headerStatusDetailsBin = exports.headerGrpcMessage = exports.headerGrpcStatus = exports.headerTimeout = exports.headerAcceptEncoding = exports.headerEncoding = exports.headerContentType = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nvar headers_js_1 = require(\"../protocol-grpc/headers.js\");\nObject.defineProperty(exports, \"headerContentType\", { enumerable: true, get: function () { return headers_js_1.headerContentType; } });\nObject.defineProperty(exports, \"headerEncoding\", { enumerable: true, get: function () { return headers_js_1.headerEncoding; } });\nObject.defineProperty(exports, \"headerAcceptEncoding\", { enumerable: true, get: function () { return headers_js_1.headerAcceptEncoding; } });\nObject.defineProperty(exports, \"headerTimeout\", { enumerable: true, get: function () { return headers_js_1.headerTimeout; } });\nObject.defineProperty(exports, \"headerGrpcStatus\", { enumerable: true, get: function () { return headers_js_1.headerGrpcStatus; } });\nObject.defineProperty(exports, \"headerGrpcMessage\", { enumerable: true, get: function () { return headers_js_1.headerGrpcMessage; } });\nObject.defineProperty(exports, \"headerStatusDetailsBin\", { enumerable: true, get: function () { return headers_js_1.headerStatusDetailsBin; } });\n/**\n * gRPC-web does not use the standard header User-Agent.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.headerXUserAgent = \"X-User-Agent\";\n/**\n * The canonical grpc/grpc-web JavaScript implementation sets\n * this request header with value \"1\".\n * Some servers may rely on the header to identify gRPC-web\n * requests. For example the proxy by improbable:\n * https://github.com/improbable-eng/grpc-web/blob/53aaf4cdc0fede7103c1b06f0cfc560c003a5c41/go/grpcweb/wrapper.go#L231\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.headerXGrpcWeb = \"X-Grpc-Web\";\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headerMessageType = exports.headerUserAgent = exports.headerStatusDetailsBin = exports.headerGrpcMessage = exports.headerGrpcStatus = exports.headerTimeout = exports.headerAcceptEncoding = exports.headerEncoding = exports.headerContentType = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nexports.headerContentType = \"Content-Type\";\nexports.headerEncoding = \"Grpc-Encoding\";\nexports.headerAcceptEncoding = \"Grpc-Accept-Encoding\";\nexports.headerTimeout = \"Grpc-Timeout\";\nexports.headerGrpcStatus = \"Grpc-Status\";\nexports.headerGrpcMessage = \"Grpc-Message\";\nexports.headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nexports.headerUserAgent = \"User-Agent\";\nexports.headerMessageType = \"Grpc-Message-Type\";\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headerProtocolVersion = exports.headerTimeout = exports.headerStreamAcceptEncoding = exports.headerUnaryAcceptEncoding = exports.headerStreamEncoding = exports.headerUnaryEncoding = exports.headerUnaryContentLength = exports.headerContentType = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nexports.headerContentType = \"Content-Type\";\nexports.headerUnaryContentLength = \"Content-Length\";\nexports.headerUnaryEncoding = \"Content-Encoding\";\nexports.headerStreamEncoding = \"Connect-Content-Encoding\";\nexports.headerUnaryAcceptEncoding = \"Accept-Encoding\";\nexports.headerStreamAcceptEncoding = \"Connect-Accept-Encoding\";\nexports.headerTimeout = \"Connect-Timeout-Ms\";\nexports.headerProtocolVersion = \"Connect-Protocol-Version\";\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uResponseMethodNotAllowed = exports.uResponseUnsupportedMediaType = exports.uResponseNotFound = exports.uResponseOk = exports.assertByteStreamRequest = exports.createDeadlineSignal = exports.getAbortSignalReason = exports.createLinkedAbortController = exports.transformInvokeImplementation = exports.invokeUnaryImplementation = exports.contentTypeMatcher = exports.untilFirst = exports.readAllBytes = exports.createAsyncIterable = exports.createWritableIterable = exports.makeIterableAbortable = exports.sinkAllBytes = exports.sinkAll = exports.pipeTo = exports.transformParseEnvelope = exports.transformSerializeEnvelope = exports.transformSplitEnvelope = exports.transformJoinEnvelopes = exports.transformDecompressEnvelope = exports.transformCompressEnvelope = exports.transformNormalizeMessage = exports.transformReadAllBytes = exports.transformPrepend = exports.transformAppend = exports.transformCatchFinally = exports.transformCatch = exports.pipe = exports.compressionNegotiate = exports.compressedFlag = exports.createEnvelopeReadableStream = exports.envelopeCompress = exports.envelopeDecompress = exports.encodeEnvelopes = exports.encodeEnvelope = exports.validateReadWriteMaxBytes = exports.limitSerialization = exports.getJsonOptions = exports.createClientMethodSerializers = exports.createMethodSerializationLookup = exports.runStreamingCall = exports.runUnaryCall = exports.createFetchHandler = exports.createFetchClient = exports.createUniversalHandlerClient = exports.createMethodUrl = void 0;\nexports.createUniversalMethodHandler = exports.createUniversalServiceHandlers = exports.validateUniversalHandlerOptions = exports.uResponseVersionNotSupported = void 0;\nvar create_method_url_js_1 = require(\"./create-method-url.js\");\nObject.defineProperty(exports, \"createMethodUrl\", { enumerable: true, get: function () { return create_method_url_js_1.createMethodUrl; } });\nvar universal_handler_client_js_1 = require(\"./universal-handler-client.js\");\nObject.defineProperty(exports, \"createUniversalHandlerClient\", { enumerable: true, get: function () { return universal_handler_client_js_1.createUniversalHandlerClient; } });\nvar universal_fetch_js_1 = require(\"./universal-fetch.js\");\nObject.defineProperty(exports, \"createFetchClient\", { enumerable: true, get: function () { return universal_fetch_js_1.createFetchClient; } });\nObject.defineProperty(exports, \"createFetchHandler\", { enumerable: true, get: function () { return universal_fetch_js_1.createFetchHandler; } });\nvar run_call_js_1 = require(\"./run-call.js\");\nObject.defineProperty(exports, \"runUnaryCall\", { enumerable: true, get: function () { return run_call_js_1.runUnaryCall; } });\nObject.defineProperty(exports, \"runStreamingCall\", { enumerable: true, get: function () { return run_call_js_1.runStreamingCall; } });\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\nvar serialization_js_1 = require(\"./serialization.js\");\nObject.defineProperty(exports, \"createMethodSerializationLookup\", { enumerable: true, get: function () { return serialization_js_1.createMethodSerializationLookup; } });\nObject.defineProperty(exports, \"createClientMethodSerializers\", { enumerable: true, get: function () { return serialization_js_1.createClientMethodSerializers; } });\nObject.defineProperty(exports, \"getJsonOptions\", { enumerable: true, get: function () { return serialization_js_1.getJsonOptions; } });\nObject.defineProperty(exports, \"limitSerialization\", { enumerable: true, get: function () { return serialization_js_1.limitSerialization; } });\nvar limit_io_js_1 = require(\"./limit-io.js\");\nObject.defineProperty(exports, \"validateReadWriteMaxBytes\", { enumerable: true, get: function () { return limit_io_js_1.validateReadWriteMaxBytes; } });\nvar envelope_js_1 = require(\"./envelope.js\");\nObject.defineProperty(exports, \"encodeEnvelope\", { enumerable: true, get: function () { return envelope_js_1.encodeEnvelope; } });\nObject.defineProperty(exports, \"encodeEnvelopes\", { enumerable: true, get: function () { return envelope_js_1.encodeEnvelopes; } });\nObject.defineProperty(exports, \"envelopeDecompress\", { enumerable: true, get: function () { return envelope_js_1.envelopeDecompress; } });\nObject.defineProperty(exports, \"envelopeCompress\", { enumerable: true, get: function () { return envelope_js_1.envelopeCompress; } });\nObject.defineProperty(exports, \"createEnvelopeReadableStream\", { enumerable: true, get: function () { return envelope_js_1.createEnvelopeReadableStream; } });\nvar compression_js_1 = require(\"./compression.js\");\nObject.defineProperty(exports, \"compressedFlag\", { enumerable: true, get: function () { return compression_js_1.compressedFlag; } });\nObject.defineProperty(exports, \"compressionNegotiate\", { enumerable: true, get: function () { return compression_js_1.compressionNegotiate; } });\nvar async_iterable_js_1 = require(\"./async-iterable.js\");\nObject.defineProperty(exports, \"pipe\", { enumerable: true, get: function () { return async_iterable_js_1.pipe; } });\nObject.defineProperty(exports, \"transformCatch\", { enumerable: true, get: function () { return async_iterable_js_1.transformCatch; } });\nObject.defineProperty(exports, \"transformCatchFinally\", { enumerable: true, get: function () { return async_iterable_js_1.transformCatchFinally; } });\nObject.defineProperty(exports, \"transformAppend\", { enumerable: true, get: function () { return async_iterable_js_1.transformAppend; } });\nObject.defineProperty(exports, \"transformPrepend\", { enumerable: true, get: function () { return async_iterable_js_1.transformPrepend; } });\nObject.defineProperty(exports, \"transformReadAllBytes\", { enumerable: true, get: function () { return async_iterable_js_1.transformReadAllBytes; } });\nObject.defineProperty(exports, \"transformNormalizeMessage\", { enumerable: true, get: function () { return async_iterable_js_1.transformNormalizeMessage; } });\nObject.defineProperty(exports, \"transformCompressEnvelope\", { enumerable: true, get: function () { return async_iterable_js_1.transformCompressEnvelope; } });\nObject.defineProperty(exports, \"transformDecompressEnvelope\", { enumerable: true, get: function () { return async_iterable_js_1.transformDecompressEnvelope; } });\nObject.defineProperty(exports, \"transformJoinEnvelopes\", { enumerable: true, get: function () { return async_iterable_js_1.transformJoinEnvelopes; } });\nObject.defineProperty(exports, \"transformSplitEnvelope\", { enumerable: true, get: function () { return async_iterable_js_1.transformSplitEnvelope; } });\nObject.defineProperty(exports, \"transformSerializeEnvelope\", { enumerable: true, get: function () { return async_iterable_js_1.transformSerializeEnvelope; } });\nObject.defineProperty(exports, \"transformParseEnvelope\", { enumerable: true, get: function () { return async_iterable_js_1.transformParseEnvelope; } });\nObject.defineProperty(exports, \"pipeTo\", { enumerable: true, get: function () { return async_iterable_js_1.pipeTo; } });\nObject.defineProperty(exports, \"sinkAll\", { enumerable: true, get: function () { return async_iterable_js_1.sinkAll; } });\nObject.defineProperty(exports, \"sinkAllBytes\", { enumerable: true, get: function () { return async_iterable_js_1.sinkAllBytes; } });\nObject.defineProperty(exports, \"makeIterableAbortable\", { enumerable: true, get: function () { return async_iterable_js_1.makeIterableAbortable; } });\nObject.defineProperty(exports, \"createWritableIterable\", { enumerable: true, get: function () { return async_iterable_js_1.createWritableIterable; } });\nObject.defineProperty(exports, \"createAsyncIterable\", { enumerable: true, get: function () { return async_iterable_js_1.createAsyncIterable; } });\nObject.defineProperty(exports, \"readAllBytes\", { enumerable: true, get: function () { return async_iterable_js_1.readAllBytes; } });\nObject.defineProperty(exports, \"untilFirst\", { enumerable: true, get: function () { return async_iterable_js_1.untilFirst; } });\nvar content_type_matcher_js_1 = require(\"./content-type-matcher.js\");\nObject.defineProperty(exports, \"contentTypeMatcher\", { enumerable: true, get: function () { return content_type_matcher_js_1.contentTypeMatcher; } });\nvar invoke_implementation_js_1 = require(\"./invoke-implementation.js\");\nObject.defineProperty(exports, \"invokeUnaryImplementation\", { enumerable: true, get: function () { return invoke_implementation_js_1.invokeUnaryImplementation; } });\nObject.defineProperty(exports, \"transformInvokeImplementation\", { enumerable: true, get: function () { return invoke_implementation_js_1.transformInvokeImplementation; } });\nvar signals_js_1 = require(\"./signals.js\");\nObject.defineProperty(exports, \"createLinkedAbortController\", { enumerable: true, get: function () { return signals_js_1.createLinkedAbortController; } });\nObject.defineProperty(exports, \"getAbortSignalReason\", { enumerable: true, get: function () { return signals_js_1.getAbortSignalReason; } });\nObject.defineProperty(exports, \"createDeadlineSignal\", { enumerable: true, get: function () { return signals_js_1.createDeadlineSignal; } });\nvar universal_js_1 = require(\"./universal.js\");\nObject.defineProperty(exports, \"assertByteStreamRequest\", { enumerable: true, get: function () { return universal_js_1.assertByteStreamRequest; } });\nObject.defineProperty(exports, \"uResponseOk\", { enumerable: true, get: function () { return universal_js_1.uResponseOk; } });\nObject.defineProperty(exports, \"uResponseNotFound\", { enumerable: true, get: function () { return universal_js_1.uResponseNotFound; } });\nObject.defineProperty(exports, \"uResponseUnsupportedMediaType\", { enumerable: true, get: function () { return universal_js_1.uResponseUnsupportedMediaType; } });\nObject.defineProperty(exports, \"uResponseMethodNotAllowed\", { enumerable: true, get: function () { return universal_js_1.uResponseMethodNotAllowed; } });\nObject.defineProperty(exports, \"uResponseVersionNotSupported\", { enumerable: true, get: function () { return universal_js_1.uResponseVersionNotSupported; } });\nvar universal_handler_js_1 = require(\"./universal-handler.js\");\nObject.defineProperty(exports, \"validateUniversalHandlerOptions\", { enumerable: true, get: function () { return universal_handler_js_1.validateUniversalHandlerOptions; } });\nObject.defineProperty(exports, \"createUniversalServiceHandlers\", { enumerable: true, get: function () { return universal_handler_js_1.createUniversalServiceHandlers; } });\nObject.defineProperty(exports, \"createUniversalMethodHandler\", { enumerable: true, get: function () { return universal_handler_js_1.createUniversalMethodHandler; } });\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMethodUrl = void 0;\n/**\n * Create a URL for the given RPC. This simply adds the qualified\n * service name, a slash, and the method name to the path of the given\n * baseUrl.\n *\n * For example, the baseUri https://example.com and method \"Say\" from\n * the service example.ElizaService results in:\n * https://example.com/example.ElizaService/Say\n *\n * This format is used by the protocols Connect, gRPC and Twirp.\n *\n * Note that this function also accepts a protocol-relative baseUrl.\n * If given an empty string or \"/\" as a baseUrl, it returns just the\n * path.\n */\nfunction createMethodUrl(baseUrl, service, method) {\n    const s = typeof service == \"string\" ? service : service.typeName;\n    const m = typeof method == \"string\" ? method : method.name;\n    return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\nexports.createMethodUrl = createMethodUrl;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createUniversalHandlerClient = void 0;\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst async_iterable_js_1 = require(\"./async-iterable.js\");\nconst signals_js_1 = require(\"./signals.js\");\n/**\n * An in-memory UniversalClientFn that can be used to route requests to a ConnectRouter\n * bypassing network calls. Useful for testing and calling in-process services.\n */\nfunction createUniversalHandlerClient(uHandlers) {\n    const handlerMap = new Map();\n    for (const handler of uHandlers) {\n        handlerMap.set(handler.requestPath, handler);\n    }\n    return async (uClientReq) => {\n        var _a, _b, _c;\n        const pathname = new URL(uClientReq.url).pathname;\n        const handler = handlerMap.get(pathname);\n        if (!handler) {\n            throw new connect_error_js_1.ConnectError(`RouterHttpClient: no handler registered for ${pathname}`, code_js_1.Code.Unimplemented);\n        }\n        const reqSignal = (_a = uClientReq.signal) !== null && _a !== void 0 ? _a : new AbortController().signal;\n        const uServerRes = await raceSignal(reqSignal, handler({\n            body: (_b = uClientReq.body) !== null && _b !== void 0 ? _b : (0, async_iterable_js_1.createAsyncIterable)([]),\n            httpVersion: \"2.0\",\n            method: uClientReq.method,\n            url: uClientReq.url,\n            header: uClientReq.header,\n            signal: reqSignal,\n        }));\n        const body = (_c = uServerRes.body) !== null && _c !== void 0 ? _c : (0, async_iterable_js_1.createAsyncIterable)([]);\n        return {\n            body: (0, async_iterable_js_1.pipe)(body, (iterable) => {\n                return {\n                    [Symbol.asyncIterator]() {\n                        const it = iterable[Symbol.asyncIterator]();\n                        const w = {\n                            next() {\n                                return raceSignal(reqSignal, it.next());\n                            },\n                        };\n                        if (it.throw !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                            w.throw = (e) => it.throw(e);\n                        }\n                        if (it.return !== undefined) {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                            w.return = (value) => it.return(value);\n                        }\n                        return w;\n                    },\n                };\n            }),\n            header: new Headers(uServerRes.header),\n            status: uServerRes.status,\n            trailer: new Headers(uServerRes.trailer),\n        };\n    };\n}\nexports.createUniversalHandlerClient = createUniversalHandlerClient;\n/**\n * Wrap a promise, and reject early if the given signal triggers before the\n * promise is settled.\n */\nfunction raceSignal(signal, promise) {\n    let cleanup;\n    const signalPromise = new Promise((_, reject) => {\n        const onAbort = () => reject((0, signals_js_1.getAbortSignalReason)(signal));\n        if (signal.aborted) {\n            return onAbort();\n        }\n        signal.addEventListener(\"abort\", onAbort);\n        cleanup = () => signal.removeEventListener(\"abort\", onAbort);\n    });\n    return Promise.race([signalPromise, promise]).finally(cleanup);\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Code = void 0;\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connect.build/docs/protocol#error-codes\n * for details.\n */\nvar Code;\n(function (Code) {\n    /**\n     * Canceled, usually be the user\n     */\n    Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */\n    Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */\n    Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */\n    Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */\n    Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */\n    Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */\n    Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */\n    Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */\n    Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */\n    Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */\n    Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */\n    Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */\n    Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */\n    Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */\n    Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code = exports.Code || (exports.Code = {}));\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectErrorFromReason = exports.connectErrorDetails = exports.ConnectError = void 0;\nconst code_js_1 = require(\"./code.js\");\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst code_string_js_1 = require(\"./protocol-connect/code-string.js\");\n/**\n * ConnectError captures four pieces of information: a Code, an error\n * message, an optional cause of the error, and an optional collection of\n * arbitrary Protobuf messages called  \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * method findDetails() to retrieve the details.\n */\nclass ConnectError extends Error {\n    /**\n     * Create a new ConnectError.\n     * If no code is provided, code \"unknown\" is used.\n     * Outgoing details are only relevant for the server side - a service may\n     * raise an error with details, and it is up to the protocol implementation\n     * to encode and send the details along with error.\n     */\n    constructor(message, code = code_js_1.Code.Unknown, metadata, outgoingDetails, cause) {\n        super(createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n        this.cause = cause;\n    }\n    /**\n     * Convert any value - typically a caught error into a ConnectError,\n     * following these rules:\n     * - If the value is already a ConnectError, return it as is.\n     * - If the value is an AbortError from the fetch API, return the message\n     *   of the AbortError with code Canceled.\n     * - For other Errors, return the error message with code Unknown by default.\n     * - For other values, return the values String representation as a message,\n     *   with the code Unknown by default.\n     * The original value will be used for the \"cause\" property for the new\n     * ConnectError.\n     */\n    static from(reason, code = code_js_1.Code.Unknown) {\n        if (reason instanceof ConnectError) {\n            return reason;\n        }\n        if (reason instanceof Error) {\n            if (reason.name == \"AbortError\") {\n                // Fetch requests can only be canceled with an AbortController.\n                // We detect that condition by looking at the name of the raised\n                // error object, and translate to the appropriate status code.\n                return new ConnectError(reason.message, code_js_1.Code.Canceled);\n            }\n            return new ConnectError(reason.message, code, undefined, undefined, reason);\n        }\n        return new ConnectError(String(reason), code, undefined, undefined, reason);\n    }\n    findDetails(typeOrRegistry) {\n        const registry = \"typeName\" in typeOrRegistry\n            ? {\n                findMessage: (typeName) => typeName === typeOrRegistry.typeName ? typeOrRegistry : undefined,\n            }\n            : typeOrRegistry;\n        const details = [];\n        for (const data of this.details) {\n            if (data instanceof protobuf_1.Message) {\n                if (registry.findMessage(data.getType().typeName)) {\n                    details.push(data);\n                }\n                continue;\n            }\n            const type = registry.findMessage(data.type);\n            if (type) {\n                try {\n                    details.push(type.fromBinary(data.value));\n                }\n                catch (_) {\n                    // We silently give up if we are unable to parse the detail, because\n                    // that appears to be the least worst behavior.\n                    // It is very unlikely that a user surrounds a catch body handling the\n                    // error with another try-catch statement, and we do not want to\n                    // recommend doing so.\n                }\n            }\n        }\n        return details;\n    }\n}\nexports.ConnectError = ConnectError;\n/**\n * @deprecated use ConnectError.findDetails() instead\n */\nfunction connectErrorDetails(error, typeOrRegistry, ...moreTypes) {\n    const types = \"typeName\" in typeOrRegistry ? [typeOrRegistry, ...moreTypes] : [];\n    const registry = \"typeName\" in typeOrRegistry ? (0, protobuf_1.createRegistry)(...types) : typeOrRegistry;\n    const details = [];\n    for (const data of error.details) {\n        if (data instanceof protobuf_1.Message) {\n            if (registry.findMessage(data.getType().typeName)) {\n                details.push(data);\n            }\n            continue;\n        }\n        const type = registry.findMessage(data.type);\n        if (type) {\n            try {\n                details.push(type.fromBinary(data.value));\n            }\n            catch (_) {\n                // We silently give up if we are unable to parse the detail, because\n                // that appears to be the least worst behavior.\n                // It is very unlikely that a user surrounds a catch body handling the\n                // error with another try-catch statement, and we do not want to\n                // recommend doing so.\n            }\n        }\n    }\n    return details;\n}\nexports.connectErrorDetails = connectErrorDetails;\n/**\n * Create an error message, prefixing the given code.\n */\nfunction createMessage(message, code) {\n    return message.length\n        ? `[${(0, code_string_js_1.codeToString)(code)}] ${message}`\n        : `[${(0, code_string_js_1.codeToString)(code)}]`;\n}\n/**\n * Convert any value - typically a caught error into a ConnectError,\n * following these rules:\n * - If the value is already a ConnectError, return it as is.\n * - If the value is an AbortError from the fetch API, return the message\n *   of the AbortError with code Canceled.\n * - For other Errors, return the error message with code Unknown by default.\n * - For other values, return the values String representation as a message,\n *   with the code Unknown by default.\n *\n * @deprecated use ConnectError.from() instead\n */\nfunction connectErrorFromReason(reason, code = code_js_1.Code.Unknown) {\n    if (reason instanceof ConnectError) {\n        return reason;\n    }\n    if (reason instanceof Error) {\n        if (reason.name == \"AbortError\") {\n            // Fetch requests can only be canceled with an AbortController.\n            // We detect that condition by looking at the name of the raised\n            // error object, and translate to the appropriate status code.\n            return new ConnectError(reason.message, code_js_1.Code.Canceled);\n        }\n        return new ConnectError(reason.message, code);\n    }\n    return new ConnectError(String(reason), code);\n}\nexports.connectErrorFromReason = connectErrorFromReason;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlainMessage = exports.createRegistryFromDescriptors = exports.createRegistry = exports.createDescriptorSet = exports.BinaryReader = exports.BinaryWriter = exports.WireType = exports.MethodIdempotency = exports.MethodKind = exports.ScalarType = exports.Message = exports.codegenInfo = exports.protoDelimited = exports.protoBase64 = exports.protoInt64 = exports.protoDouble = exports.proto2 = exports.proto3 = void 0;\nvar proto3_js_1 = require(\"./proto3.js\");\nObject.defineProperty(exports, \"proto3\", { enumerable: true, get: function () { return proto3_js_1.proto3; } });\nvar proto2_js_1 = require(\"./proto2.js\");\nObject.defineProperty(exports, \"proto2\", { enumerable: true, get: function () { return proto2_js_1.proto2; } });\nvar proto_double_js_1 = require(\"./proto-double.js\");\nObject.defineProperty(exports, \"protoDouble\", { enumerable: true, get: function () { return proto_double_js_1.protoDouble; } });\nvar proto_int64_js_1 = require(\"./proto-int64.js\");\nObject.defineProperty(exports, \"protoInt64\", { enumerable: true, get: function () { return proto_int64_js_1.protoInt64; } });\nvar proto_base64_js_1 = require(\"./proto-base64.js\");\nObject.defineProperty(exports, \"protoBase64\", { enumerable: true, get: function () { return proto_base64_js_1.protoBase64; } });\nvar proto_delimited_js_1 = require(\"./proto-delimited.js\");\nObject.defineProperty(exports, \"protoDelimited\", { enumerable: true, get: function () { return proto_delimited_js_1.protoDelimited; } });\nvar codegen_info_js_1 = require(\"./codegen-info.js\");\nObject.defineProperty(exports, \"codegenInfo\", { enumerable: true, get: function () { return codegen_info_js_1.codegenInfo; } });\nvar message_js_1 = require(\"./message.js\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return message_js_1.Message; } });\nvar field_js_1 = require(\"./field.js\");\nObject.defineProperty(exports, \"ScalarType\", { enumerable: true, get: function () { return field_js_1.ScalarType; } });\nvar service_type_js_1 = require(\"./service-type.js\");\nObject.defineProperty(exports, \"MethodKind\", { enumerable: true, get: function () { return service_type_js_1.MethodKind; } });\nObject.defineProperty(exports, \"MethodIdempotency\", { enumerable: true, get: function () { return service_type_js_1.MethodIdempotency; } });\nvar binary_encoding_js_1 = require(\"./binary-encoding.js\");\nObject.defineProperty(exports, \"WireType\", { enumerable: true, get: function () { return binary_encoding_js_1.WireType; } });\nObject.defineProperty(exports, \"BinaryWriter\", { enumerable: true, get: function () { return binary_encoding_js_1.BinaryWriter; } });\nObject.defineProperty(exports, \"BinaryReader\", { enumerable: true, get: function () { return binary_encoding_js_1.BinaryReader; } });\nvar create_descriptor_set_js_1 = require(\"./create-descriptor-set.js\");\nObject.defineProperty(exports, \"createDescriptorSet\", { enumerable: true, get: function () { return create_descriptor_set_js_1.createDescriptorSet; } });\nvar create_registry_js_1 = require(\"./create-registry.js\");\nObject.defineProperty(exports, \"createRegistry\", { enumerable: true, get: function () { return create_registry_js_1.createRegistry; } });\nvar create_registry_from_desc_js_1 = require(\"./create-registry-from-desc.js\");\nObject.defineProperty(exports, \"createRegistryFromDescriptors\", { enumerable: true, get: function () { return create_registry_from_desc_js_1.createRegistryFromDescriptors; } });\nvar to_plain_message_js_1 = require(\"./to-plain-message.js\");\nObject.defineProperty(exports, \"toPlainMessage\", { enumerable: true, get: function () { return to_plain_message_js_1.toPlainMessage; } });\n// ideally, we would export these types with sub-path exports:\n__exportStar(require(\"./google/protobuf/compiler/plugin_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/api_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/any_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/descriptor_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/duration_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/empty_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/field_mask_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/source_context_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/struct_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/timestamp_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/type_pb.js\"), exports);\n__exportStar(require(\"./google/protobuf/wrappers_pb.js\"), exports);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoDouble = void 0;\n// Export global Number constants. This is done so that we can safely use\n// these global constants when generating code and be assured we're using\n// the correct values. We cannot rely on globalThis since we support ES2017\n// and globalThis was introduced in ES2020. We also don't want to explicitly\n// generate code using, for example, Number.NaN, since this could clash with\n// a message name of Number. Instead we can export them here since this will\n// be in a different scope as the generated code and we are guaranteed to use\n// the intended global values.\nexports.protoDouble = {\n    NaN: Number.NaN,\n    POSITIVE_INFINITY: Number.POSITIVE_INFINITY,\n    NEGATIVE_INFINITY: Number.NEGATIVE_INFINITY,\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoDelimited = void 0;\nconst binary_format_common_js_1 = require(\"./private/binary-format-common.js\");\nconst binary_encoding_js_1 = require(\"./binary-encoding.js\");\n/**\n * protoDelimited provides functions to serialize and parse size-delimited\n * messages.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nexports.protoDelimited = {\n    /**\n     * Serialize a message, prefixing it with its size.\n     */\n    enc(message, options) {\n        const opt = (0, binary_format_common_js_1.makeBinaryFormatCommon)().makeWriteOptions(options);\n        return opt.writerFactory().bytes(message.toBinary(opt)).finish();\n    },\n    /**\n     * Parse a size-delimited message, ignoring extra bytes.\n     */\n    dec(type, bytes, options) {\n        const opt = (0, binary_format_common_js_1.makeBinaryFormatCommon)().makeReadOptions(options);\n        return type.fromBinary(opt.readerFactory(bytes).bytes(), opt);\n    },\n    /**\n     * Parse a stream of size-delimited messages.\n     */\n    decStream(type, iterable) {\n        return __asyncGenerator(this, arguments, function* decStream_1() {\n            var _a, e_1, _b, _c;\n            // append chunk to buffer, returning updated buffer\n            function append(buffer, chunk) {\n                const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n                n.set(buffer);\n                n.set(chunk, buffer.length);\n                return n;\n            }\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const chunk = _c;\n                    buffer = append(buffer, chunk);\n                    for (;;) {\n                        const size = exports.protoDelimited.peekSize(buffer);\n                        if (size.eof) {\n                            // size is incomplete, buffer more data\n                            break;\n                        }\n                        if (size.offset + size.size > buffer.byteLength) {\n                            // message is incomplete, buffer more data\n                            break;\n                        }\n                        yield yield __await(exports.protoDelimited.dec(type, buffer));\n                        buffer = buffer.subarray(size.offset + size.size);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (buffer.byteLength > 0) {\n                throw new Error(\"incomplete data\");\n            }\n        });\n    },\n    /**\n     * Decodes the size from the given size-delimited message, which may be\n     * incomplete.\n     *\n     * Returns an object with the following properties:\n     * - size: The size of the delimited message in bytes\n     * - offset: The offset in the given byte array where the message starts\n     * - eof: true\n     *\n     * If the size-delimited data does not include all bytes of the varint size,\n     * the following object is returned:\n     * - size: null\n     * - offset: null\n     * - eof: false\n     *\n     * This function can be used to implement parsing of size-delimited messages\n     * from a stream.\n     */\n    peekSize(data) {\n        const sizeEof = { eof: true, size: null, offset: null };\n        for (let i = 0; i < 10; i++) {\n            if (i > data.byteLength) {\n                return sizeEof;\n            }\n            if ((data[i] & 0x80) == 0) {\n                const reader = new binary_encoding_js_1.BinaryReader(data);\n                let size;\n                try {\n                    size = reader.uint32();\n                }\n                catch (e) {\n                    if (e instanceof RangeError) {\n                        return sizeEof;\n                    }\n                    throw e;\n                }\n                return {\n                    eof: false,\n                    size,\n                    offset: reader.pos,\n                };\n            }\n        }\n        throw new Error(\"invalid varint\");\n    },\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codegenInfo = void 0;\nconst names_js_1 = require(\"./private/names.js\");\nconst field_wrapper_js_1 = require(\"./private/field-wrapper.js\");\nconst scalars_js_1 = require(\"./private/scalars.js\");\nconst reify_wkt_js_1 = require(\"./private/reify-wkt.js\");\nconst packageName = \"@bufbuild/protobuf\";\nexports.codegenInfo = {\n    packageName,\n    localName: names_js_1.localName,\n    reifyWkt: reify_wkt_js_1.reifyWkt,\n    getUnwrappedFieldType: field_wrapper_js_1.getUnwrappedFieldType,\n    scalarDefaultValue: scalars_js_1.scalarDefaultValue,\n    safeIdentifier: names_js_1.safeIdentifier,\n    safeObjectProperty: names_js_1.safeObjectProperty,\n    // prettier-ignore\n    symbols: {\n        proto2: { typeOnly: false, privateImportPath: \"./proto2.js\", publicImportPath: packageName },\n        proto3: { typeOnly: false, privateImportPath: \"./proto3.js\", publicImportPath: packageName },\n        Message: { typeOnly: false, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        PartialMessage: { typeOnly: true, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        PlainMessage: { typeOnly: true, privateImportPath: \"./message.js\", publicImportPath: packageName },\n        FieldList: { typeOnly: true, privateImportPath: \"./field-list.js\", publicImportPath: packageName },\n        MessageType: { typeOnly: true, privateImportPath: \"./message-type.js\", publicImportPath: packageName },\n        BinaryReadOptions: { typeOnly: true, privateImportPath: \"./binary-format.js\", publicImportPath: packageName },\n        BinaryWriteOptions: { typeOnly: true, privateImportPath: \"./binary-format.js\", publicImportPath: packageName },\n        JsonReadOptions: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonWriteOptions: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonValue: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        JsonObject: { typeOnly: true, privateImportPath: \"./json-format.js\", publicImportPath: packageName },\n        protoDouble: { typeOnly: false, privateImportPath: \"./proto-double.js\", publicImportPath: packageName },\n        protoInt64: { typeOnly: false, privateImportPath: \"./proto-int64.js\", publicImportPath: packageName },\n        ScalarType: { typeOnly: false, privateImportPath: \"./field.js\", publicImportPath: packageName },\n        MethodKind: { typeOnly: false, privateImportPath: \"./service-type.js\", publicImportPath: packageName },\n        MethodIdempotency: { typeOnly: false, privateImportPath: \"./service-type.js\", publicImportPath: packageName },\n        IMessageTypeRegistry: { typeOnly: true, privateImportPath: \"./type-registry.js\", publicImportPath: packageName },\n    },\n    wktSourceFiles: [\n        \"google/protobuf/compiler/plugin.proto\",\n        \"google/protobuf/any.proto\",\n        \"google/protobuf/api.proto\",\n        \"google/protobuf/descriptor.proto\",\n        \"google/protobuf/duration.proto\",\n        \"google/protobuf/empty.proto\",\n        \"google/protobuf/field_mask.proto\",\n        \"google/protobuf/source_context.proto\",\n        \"google/protobuf/struct.proto\",\n        \"google/protobuf/timestamp.proto\",\n        \"google/protobuf/type.proto\",\n        \"google/protobuf/wrappers.proto\",\n    ],\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reifyWkt = void 0;\nconst field_js_1 = require(\"../field.js\");\n/**\n * Reifies a given DescMessage into a more concrete object representing its\n * respective well-known type.  The returned object will contain properties\n * representing the WKT's defined fields.\n *\n * Useful during code generation when immediate access to a particular field\n * is needed without having to search the object's typename and DescField list.\n *\n * Returns undefined if the WKT cannot be completely constructed via the\n * DescMessage.\n */\nfunction reifyWkt(message) {\n    switch (message.typeName) {\n        case \"google.protobuf.Any\": {\n            const typeUrl = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.STRING);\n            const value = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.BYTES);\n            if (typeUrl && value) {\n                return {\n                    typeName: message.typeName,\n                    typeUrl,\n                    value,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Timestamp\": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName,\n                    seconds,\n                    nanos,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Duration\": {\n            const seconds = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.INT64);\n            const nanos = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.INT32);\n            if (seconds && nanos) {\n                return {\n                    typeName: message.typeName,\n                    seconds,\n                    nanos,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.Struct\": {\n            const fields = message.fields.find((f) => f.number == 1 && !f.repeated);\n            if ((fields === null || fields === void 0 ? void 0 : fields.fieldKind) !== \"map\" ||\n                fields.mapValue.kind !== \"message\" ||\n                fields.mapValue.message.typeName !== \"google.protobuf.Value\") {\n                break;\n            }\n            return { typeName: message.typeName, fields };\n        }\n        case \"google.protobuf.Value\": {\n            const kind = message.oneofs.find((o) => o.name === \"kind\");\n            const nullValue = message.fields.find((f) => f.number == 1 && f.oneof === kind);\n            if ((nullValue === null || nullValue === void 0 ? void 0 : nullValue.fieldKind) !== \"enum\" ||\n                nullValue.enum.typeName !== \"google.protobuf.NullValue\") {\n                return undefined;\n            }\n            const numberValue = message.fields.find((f) => f.number == 2 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.DOUBLE &&\n                f.oneof === kind);\n            const stringValue = message.fields.find((f) => f.number == 3 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.STRING &&\n                f.oneof === kind);\n            const boolValue = message.fields.find((f) => f.number == 4 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.BOOL &&\n                f.oneof === kind);\n            const structValue = message.fields.find((f) => f.number == 5 && f.oneof === kind);\n            if ((structValue === null || structValue === void 0 ? void 0 : structValue.fieldKind) !== \"message\" ||\n                structValue.message.typeName !== \"google.protobuf.Struct\") {\n                return undefined;\n            }\n            const listValue = message.fields.find((f) => f.number == 6 && f.oneof === kind);\n            if ((listValue === null || listValue === void 0 ? void 0 : listValue.fieldKind) !== \"message\" ||\n                listValue.message.typeName !== \"google.protobuf.ListValue\") {\n                return undefined;\n            }\n            if (kind && numberValue && stringValue && boolValue) {\n                return {\n                    typeName: message.typeName,\n                    kind,\n                    nullValue,\n                    numberValue,\n                    stringValue,\n                    boolValue,\n                    structValue,\n                    listValue,\n                };\n            }\n            break;\n        }\n        case \"google.protobuf.ListValue\": {\n            const values = message.fields.find((f) => f.number == 1 && f.repeated);\n            if ((values === null || values === void 0 ? void 0 : values.fieldKind) != \"message\" ||\n                values.message.typeName !== \"google.protobuf.Value\") {\n                break;\n            }\n            return { typeName: message.typeName, values };\n        }\n        case \"google.protobuf.FieldMask\": {\n            const paths = message.fields.find((f) => f.number == 1 &&\n                f.fieldKind == \"scalar\" &&\n                f.scalar === field_js_1.ScalarType.STRING &&\n                f.repeated);\n            if (paths) {\n                return { typeName: message.typeName, paths };\n            }\n            break;\n        }\n        case \"google.protobuf.DoubleValue\":\n        case \"google.protobuf.FloatValue\":\n        case \"google.protobuf.Int64Value\":\n        case \"google.protobuf.UInt64Value\":\n        case \"google.protobuf.Int32Value\":\n        case \"google.protobuf.UInt32Value\":\n        case \"google.protobuf.BoolValue\":\n        case \"google.protobuf.StringValue\":\n        case \"google.protobuf.BytesValue\": {\n            const value = message.fields.find((f) => f.number == 1 && f.name == \"value\");\n            if (!value) {\n                break;\n            }\n            if (value.fieldKind !== \"scalar\") {\n                break;\n            }\n            return { typeName: message.typeName, value };\n        }\n    }\n    return undefined;\n}\nexports.reifyWkt = reifyWkt;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MethodIdempotency = exports.MethodKind = void 0;\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nvar MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (exports.MethodKind = MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nvar MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (exports.MethodIdempotency = MethodIdempotency = {}));\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPackedFieldByDefault = exports.createDescriptorSet = void 0;\nconst descriptor_pb_js_1 = require(\"./google/protobuf/descriptor_pb.js\");\nconst assert_js_1 = require(\"./private/assert.js\");\nconst field_js_1 = require(\"./field.js\");\nconst service_type_js_1 = require(\"./service-type.js\");\nconst names_js_1 = require(\"./private/names.js\");\nconst proto_int64_js_1 = require(\"./proto-int64.js\");\n/**\n * Create a DescriptorSet, a convenient interface for working with a set of\n * google.protobuf.FileDescriptorProto.\n *\n * Note that files must be given in topological order, so each file appears\n * before any file that imports it. Protocol buffer compilers always produce\n * files in topological order.\n */\nfunction createDescriptorSet(input) {\n    const cart = {\n        enums: new Map(),\n        messages: new Map(),\n        services: new Map(),\n        extensions: new Map(),\n        mapEntries: new Map(),\n    };\n    const fileDescriptors = input instanceof descriptor_pb_js_1.FileDescriptorSet\n        ? input.file\n        : input instanceof Uint8Array\n            ? descriptor_pb_js_1.FileDescriptorSet.fromBinary(input).file\n            : input;\n    const files = fileDescriptors.map((proto) => newFile(proto, cart));\n    return Object.assign({ files }, cart);\n}\nexports.createDescriptorSet = createDescriptorSet;\n/**\n * Create a descriptor for a file.\n */\nfunction newFile(proto, cart) {\n    var _a, _b, _c;\n    (0, assert_js_1.assert)(proto.name, `invalid FileDescriptorProto: missing name`);\n    (0, assert_js_1.assert)(proto.syntax === undefined || proto.syntax === \"proto3\", `invalid FileDescriptorProto: unsupported syntax: ${(_a = proto.syntax) !== null && _a !== void 0 ? _a : \"undefined\"}`);\n    const file = {\n        kind: \"file\",\n        proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        syntax: proto.syntax === \"proto3\" ? \"proto3\" : \"proto2\",\n        name: proto.name.replace(/\\.proto/, \"\"),\n        enums: [],\n        messages: [],\n        extensions: [],\n        services: [],\n        toString() {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions -- we asserted above\n            return `file ${this.proto.name}`;\n        },\n        getSyntaxComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Syntax,\n            ]);\n        },\n        getPackageComments() {\n            return findComments(this.proto.sourceCodeInfo, [\n                FieldNumber.FileDescriptorProto_Package,\n            ]);\n        },\n    };\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, undefined, cart);\n    }\n    for (const messageProto of proto.messageType) {\n        addMessage(messageProto, file, undefined, cart);\n    }\n    for (const serviceProto of proto.service) {\n        addService(serviceProto, file, cart);\n    }\n    addExtensions(file, cart);\n    for (const mapEntry of cart.mapEntries.values()) {\n        addFields(mapEntry, cart);\n    }\n    for (const message of file.messages) {\n        addFields(message, cart);\n        addExtensions(message, cart);\n    }\n    cart.mapEntries.clear(); // map entries are local to the file, we can safely discard\n    return file;\n}\n/**\n * Create descriptors for extensions, and add them to the message / file,\n * and to our cart.\n * Recurses into nested types.\n */\nfunction addExtensions(desc, cart) {\n    switch (desc.kind) {\n        case \"file\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc, undefined, cart);\n                desc.extensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            break;\n        case \"message\":\n            for (const proto of desc.proto.extension) {\n                const ext = newExtension(proto, desc.file, desc, cart);\n                desc.nestedExtensions.push(ext);\n                cart.extensions.set(ext.typeName, ext);\n            }\n            for (const message of desc.nestedMessages) {\n                addExtensions(message, cart);\n            }\n            break;\n    }\n}\n/**\n * Create descriptors for fields and oneof groups, and add them to the message.\n * Recurses into nested types.\n */\nfunction addFields(message, cart) {\n    const allOneofs = message.proto.oneofDecl.map((proto) => newOneof(proto, message));\n    const oneofsSeen = new Set();\n    for (const proto of message.proto.field) {\n        const oneof = findOneof(proto, allOneofs);\n        const field = newField(proto, message.file, message, oneof, cart);\n        message.fields.push(field);\n        if (oneof === undefined) {\n            message.members.push(field);\n        }\n        else {\n            oneof.fields.push(field);\n            if (!oneofsSeen.has(oneof)) {\n                oneofsSeen.add(oneof);\n                message.members.push(oneof);\n            }\n        }\n    }\n    for (const oneof of allOneofs.filter((o) => oneofsSeen.has(o))) {\n        message.oneofs.push(oneof);\n    }\n    for (const child of message.nestedMessages) {\n        addFields(child, cart);\n    }\n}\n/**\n * Create a descriptor for an enumeration, and add it our cart and to the\n * parent type, if any.\n */\nfunction addEnum(proto, file, parent, cart) {\n    var _a, _b, _c;\n    (0, assert_js_1.assert)(proto.name, `invalid EnumDescriptorProto: missing name`);\n    const desc = {\n        kind: \"enum\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        values: [],\n        sharedPrefix: (0, names_js_1.findEnumSharedPrefix)(proto.name, proto.value.map((v) => { var _a; return (_a = v.name) !== null && _a !== void 0 ? _a : \"\"; })),\n        toString() {\n            return `enum ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_EnumType,\n                    this.parent.proto.enumType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_EnumType,\n                    this.file.proto.enumType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n    };\n    cart.enums.set(desc.typeName, desc);\n    proto.value.forEach((proto) => {\n        var _a, _b;\n        (0, assert_js_1.assert)(proto.name, `invalid EnumValueDescriptorProto: missing name`);\n        (0, assert_js_1.assert)(proto.number !== undefined, `invalid EnumValueDescriptorProto: missing number`);\n        desc.values.push({\n            kind: \"enum_value\",\n            proto,\n            deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n            parent: desc,\n            name: proto.name,\n            number: proto.number,\n            toString() {\n                return `enum value ${desc.typeName}.${this.name}`;\n            },\n            declarationString() {\n                var _a;\n                let str = `${this.name} = ${this.number}`;\n                if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) === true) {\n                    str += \" [deprecated = true]\";\n                }\n                return str;\n            },\n            getComments() {\n                const path = [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.EnumDescriptorProto_Value,\n                    this.parent.proto.value.indexOf(this.proto),\n                ];\n                return findComments(file.proto.sourceCodeInfo, path);\n            },\n        });\n    });\n    ((_c = parent === null || parent === void 0 ? void 0 : parent.nestedEnums) !== null && _c !== void 0 ? _c : file.enums).push(desc);\n}\n/**\n * Create a descriptor for a message, including nested types, and add it to our\n * cart. Note that this does not create descriptors fields.\n */\nfunction addMessage(proto, file, parent, cart) {\n    var _a, _b, _c, _d;\n    (0, assert_js_1.assert)(proto.name, `invalid DescriptorProto: missing name`);\n    const desc = {\n        kind: \"message\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        parent,\n        name: proto.name,\n        typeName: makeTypeName(proto, parent, file),\n        fields: [],\n        oneofs: [],\n        members: [],\n        nestedEnums: [],\n        nestedMessages: [],\n        nestedExtensions: [],\n        toString() {\n            return `message ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_NestedType,\n                    this.parent.proto.nestedType.indexOf(this.proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_MessageType,\n                    this.file.proto.messageType.indexOf(this.proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n    };\n    if (((_c = proto.options) === null || _c === void 0 ? void 0 : _c.mapEntry) === true) {\n        cart.mapEntries.set(desc.typeName, desc);\n    }\n    else {\n        ((_d = parent === null || parent === void 0 ? void 0 : parent.nestedMessages) !== null && _d !== void 0 ? _d : file.messages).push(desc);\n        cart.messages.set(desc.typeName, desc);\n    }\n    for (const enumProto of proto.enumType) {\n        addEnum(enumProto, file, desc, cart);\n    }\n    for (const messageProto of proto.nestedType) {\n        addMessage(messageProto, file, desc, cart);\n    }\n}\n/**\n * Create a descriptor for a service, including methods, and add it to our\n * cart.\n */\nfunction addService(proto, file, cart) {\n    var _a, _b;\n    (0, assert_js_1.assert)(proto.name, `invalid ServiceDescriptorProto: missing name`);\n    const desc = {\n        kind: \"service\",\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        file,\n        name: proto.name,\n        typeName: makeTypeName(proto, undefined, file),\n        methods: [],\n        toString() {\n            return `service ${this.typeName}`;\n        },\n        getComments() {\n            const path = [\n                FieldNumber.FileDescriptorProto_Service,\n                this.file.proto.service.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n    };\n    file.services.push(desc);\n    cart.services.set(desc.typeName, desc);\n    for (const methodProto of proto.method) {\n        desc.methods.push(newMethod(methodProto, desc, cart));\n    }\n}\n/**\n * Create a descriptor for a method.\n */\nfunction newMethod(proto, parent, cart) {\n    var _a, _b, _c;\n    (0, assert_js_1.assert)(proto.name, `invalid MethodDescriptorProto: missing name`);\n    (0, assert_js_1.assert)(proto.inputType, `invalid MethodDescriptorProto: missing input_type`);\n    (0, assert_js_1.assert)(proto.outputType, `invalid MethodDescriptorProto: missing output_type`);\n    let methodKind;\n    if (proto.clientStreaming === true && proto.serverStreaming === true) {\n        methodKind = service_type_js_1.MethodKind.BiDiStreaming;\n    }\n    else if (proto.clientStreaming === true) {\n        methodKind = service_type_js_1.MethodKind.ClientStreaming;\n    }\n    else if (proto.serverStreaming === true) {\n        methodKind = service_type_js_1.MethodKind.ServerStreaming;\n    }\n    else {\n        methodKind = service_type_js_1.MethodKind.Unary;\n    }\n    let idempotency;\n    switch ((_a = proto.options) === null || _a === void 0 ? void 0 : _a.idempotencyLevel) {\n        case descriptor_pb_js_1.MethodOptions_IdempotencyLevel.IDEMPOTENT:\n            idempotency = service_type_js_1.MethodIdempotency.Idempotent;\n            break;\n        case descriptor_pb_js_1.MethodOptions_IdempotencyLevel.NO_SIDE_EFFECTS:\n            idempotency = service_type_js_1.MethodIdempotency.NoSideEffects;\n            break;\n        case descriptor_pb_js_1.MethodOptions_IdempotencyLevel.IDEMPOTENCY_UNKNOWN:\n        case undefined:\n            idempotency = undefined;\n            break;\n    }\n    const input = cart.messages.get(trimLeadingDot(proto.inputType));\n    const output = cart.messages.get(trimLeadingDot(proto.outputType));\n    (0, assert_js_1.assert)(input, `invalid MethodDescriptorProto: input_type ${proto.inputType} not found`);\n    (0, assert_js_1.assert)(output, `invalid MethodDescriptorProto: output_type ${proto.inputType} not found`);\n    const name = proto.name;\n    return {\n        kind: \"rpc\",\n        proto,\n        deprecated: (_c = (_b = proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) !== null && _c !== void 0 ? _c : false,\n        parent,\n        name,\n        methodKind,\n        input,\n        output,\n        idempotency,\n        toString() {\n            return `rpc ${parent.typeName}.${name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.ServiceDescriptorProto_Method,\n                this.parent.proto.method.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n    };\n}\n/**\n * Create a descriptor for a oneof group.\n */\nfunction newOneof(proto, parent) {\n    (0, assert_js_1.assert)(proto.name, `invalid OneofDescriptorProto: missing name`);\n    return {\n        kind: \"oneof\",\n        proto,\n        deprecated: false,\n        parent,\n        fields: [],\n        name: proto.name,\n        toString() {\n            return `oneof ${parent.typeName}.${this.name}`;\n        },\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_OneofDecl,\n                this.parent.proto.oneofDecl.indexOf(this.proto),\n            ];\n            return findComments(parent.file.proto.sourceCodeInfo, path);\n        },\n    };\n}\n/**\n * Create a descriptor for a field.\n */\nfunction newField(proto, file, parent, oneof, cart) {\n    var _a, _b, _c, _d;\n    (0, assert_js_1.assert)(proto.name, `invalid FieldDescriptorProto: missing name`);\n    (0, assert_js_1.assert)(proto.number, `invalid FieldDescriptorProto: missing number`);\n    (0, assert_js_1.assert)(proto.type, `invalid FieldDescriptorProto: missing type`);\n    const packedByDefault = isPackedFieldByDefault(proto, file.syntax);\n    const common = {\n        proto,\n        deprecated: (_b = (_a = proto.options) === null || _a === void 0 ? void 0 : _a.deprecated) !== null && _b !== void 0 ? _b : false,\n        name: proto.name,\n        number: proto.number,\n        parent,\n        oneof,\n        optional: isOptionalField(proto, file.syntax),\n        packed: (_d = (_c = proto.options) === null || _c === void 0 ? void 0 : _c.packed) !== null && _d !== void 0 ? _d : packedByDefault,\n        packedByDefault,\n        jsonName: proto.jsonName === (0, names_js_1.fieldJsonName)(proto.name) ? undefined : proto.jsonName,\n        scalar: undefined,\n        message: undefined,\n        enum: undefined,\n        mapKey: undefined,\n        mapValue: undefined,\n        toString() {\n            // note that newExtension() calls us with parent = null\n            return `field ${this.parent.typeName}.${this.name}`;\n        },\n        declarationString,\n        getComments() {\n            const path = [\n                ...this.parent.getComments().sourcePath,\n                FieldNumber.DescriptorProto_Field,\n                this.parent.proto.field.indexOf(this.proto),\n            ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        },\n    };\n    const repeated = proto.label === descriptor_pb_js_1.FieldDescriptorProto_Label.REPEATED;\n    switch (proto.type) {\n        case descriptor_pb_js_1.FieldDescriptorProto_Type.MESSAGE:\n        case descriptor_pb_js_1.FieldDescriptorProto_Type.GROUP: {\n            (0, assert_js_1.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const mapEntry = cart.mapEntries.get(trimLeadingDot(proto.typeName));\n            if (mapEntry !== undefined) {\n                (0, assert_js_1.assert)(repeated, `invalid FieldDescriptorProto: expected map entry to be repeated`);\n                return Object.assign(Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"map\", repeated: false }), getMapFieldTypes(mapEntry));\n            }\n            const message = cart.messages.get(trimLeadingDot(proto.typeName));\n            (0, assert_js_1.assert)(message !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"message\", repeated,\n                message });\n        }\n        case descriptor_pb_js_1.FieldDescriptorProto_Type.ENUM: {\n            (0, assert_js_1.assert)(proto.typeName, `invalid FieldDescriptorProto: missing type_name`);\n            const e = cart.enums.get(trimLeadingDot(proto.typeName));\n            (0, assert_js_1.assert)(e !== undefined, `invalid FieldDescriptorProto: type_name ${proto.typeName} not found`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"enum\", getDefaultValue,\n                repeated, enum: e });\n        }\n        default: {\n            const scalar = fieldTypeToScalarType[proto.type];\n            (0, assert_js_1.assert)(scalar, `invalid FieldDescriptorProto: unknown type ${proto.type}`);\n            return Object.assign(Object.assign({}, common), { kind: \"field\", fieldKind: \"scalar\", getDefaultValue,\n                repeated,\n                scalar });\n        }\n    }\n}\n/**\n * Create a descriptor for an extension field.\n */\nfunction newExtension(proto, file, parent, cart) {\n    (0, assert_js_1.assert)(proto.extendee, `invalid FieldDescriptorProto: missing extendee`);\n    const field = newField(proto, file, null, // to safe us many lines of duplicated code, we trick the type system\n    undefined, cart);\n    const extendee = cart.messages.get(trimLeadingDot(proto.extendee));\n    (0, assert_js_1.assert)(extendee, `invalid FieldDescriptorProto: extendee ${proto.extendee} not found`);\n    return Object.assign(Object.assign({}, field), { kind: \"extension\", typeName: makeTypeName(proto, parent, file), parent,\n        file,\n        extendee,\n        toString() {\n            return `extension ${this.typeName}`;\n        },\n        getComments() {\n            const path = this.parent\n                ? [\n                    ...this.parent.getComments().sourcePath,\n                    FieldNumber.DescriptorProto_Extension,\n                    this.parent.proto.extension.indexOf(proto),\n                ]\n                : [\n                    FieldNumber.FileDescriptorProto_Extension,\n                    this.file.proto.extension.indexOf(proto),\n                ];\n            return findComments(file.proto.sourceCodeInfo, path);\n        } });\n}\n/**\n * Create a fully qualified name for a protobuf type or extension field.\n *\n * The fully qualified name for messages, enumerations, and services is\n * constructed by concatenating the package name (if present), parent\n * message names (for nested types), and the type name. We omit the leading\n * dot added by protobuf compilers. Examples:\n * - mypackage.MyMessage\n * - mypackage.MyMessage.NestedMessage\n *\n * The fully qualified name for extension fields is constructed by\n * concatenating the package name (if present), parent message names (for\n * extensions declared within a message), and the field name. Examples:\n * - mypackage.extfield\n * - mypackage.MyMessage.extfield\n */\nfunction makeTypeName(proto, parent, file) {\n    (0, assert_js_1.assert)(proto.name, `invalid ${proto.getType().typeName}: missing name`);\n    let typeName;\n    if (parent) {\n        typeName = `${parent.typeName}.${proto.name}`;\n    }\n    else if (file.proto.package !== undefined) {\n        typeName = `${file.proto.package}.${proto.name}`;\n    }\n    else {\n        typeName = `${proto.name}`;\n    }\n    return typeName;\n}\n/**\n * Remove the leading dot from a fully qualified type name.\n */\nfunction trimLeadingDot(typeName) {\n    return typeName.startsWith(\".\") ? typeName.substring(1) : typeName;\n}\nfunction getMapFieldTypes(mapEntry) {\n    var _a, _b;\n    (0, assert_js_1.assert)((_a = mapEntry.proto.options) === null || _a === void 0 ? void 0 : _a.mapEntry, `invalid DescriptorProto: expected ${mapEntry.toString()} to be a map entry`);\n    (0, assert_js_1.assert)(mapEntry.fields.length === 2, `invalid DescriptorProto: map entry ${mapEntry.toString()} has ${mapEntry.fields.length} fields`);\n    const keyField = mapEntry.fields.find((f) => f.proto.number === 1);\n    (0, assert_js_1.assert)(keyField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing key field`);\n    const mapKey = keyField.scalar;\n    (0, assert_js_1.assert)(mapKey !== undefined &&\n        mapKey !== field_js_1.ScalarType.BYTES &&\n        mapKey !== field_js_1.ScalarType.FLOAT &&\n        mapKey !== field_js_1.ScalarType.DOUBLE, `invalid DescriptorProto: map entry ${mapEntry.toString()} has unexpected key type ${(_b = keyField.proto.type) !== null && _b !== void 0 ? _b : -1}`);\n    const valueField = mapEntry.fields.find((f) => f.proto.number === 2);\n    (0, assert_js_1.assert)(valueField, `invalid DescriptorProto: map entry ${mapEntry.toString()} is missing value field`);\n    switch (valueField.fieldKind) {\n        case \"scalar\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"scalar\" }),\n            };\n        case \"message\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"message\" }),\n            };\n        case \"enum\":\n            return {\n                mapKey,\n                mapValue: Object.assign(Object.assign({}, valueField), { kind: \"enum\" }),\n            };\n        default:\n            throw new Error(\"invalid DescriptorProto: unsupported map entry value field\");\n    }\n}\n/**\n * Did the user put the field in a oneof group?\n * This handles proto3 optionals.\n */\nfunction findOneof(proto, allOneofs) {\n    var _a;\n    const oneofIndex = proto.oneofIndex;\n    if (oneofIndex === undefined) {\n        return undefined;\n    }\n    let oneof;\n    if (proto.proto3Optional !== true) {\n        oneof = allOneofs[oneofIndex];\n        (0, assert_js_1.assert)(oneof, `invalid FieldDescriptorProto: oneof #${oneofIndex} for field #${(_a = proto.number) !== null && _a !== void 0 ? _a : -1} not found`);\n    }\n    return oneof;\n}\n/**\n * Did the user use the `optional` keyword?\n * This handles proto3 optionals.\n */\nfunction isOptionalField(proto, syntax) {\n    switch (syntax) {\n        case \"proto2\":\n            return (proto.oneofIndex === undefined &&\n                proto.label === descriptor_pb_js_1.FieldDescriptorProto_Label.OPTIONAL);\n        case \"proto3\":\n            return proto.proto3Optional === true;\n    }\n}\n/**\n * Get the default `packed` state of a repeated field.\n */\nfunction isPackedFieldByDefault(proto, syntax) {\n    (0, assert_js_1.assert)(proto.type, `invalid FieldDescriptorProto: missing type`);\n    if (syntax === \"proto3\") {\n        switch (proto.type) {\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.DOUBLE:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.FLOAT:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.INT64:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.UINT64:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.INT32:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.FIXED64:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.FIXED32:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.UINT32:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.SFIXED32:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.SFIXED64:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.SINT32:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.SINT64:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.BOOL:\n            case descriptor_pb_js_1.FieldDescriptorProto_Type.ENUM:\n                // From the proto3 language guide:\n                // > In proto3, repeated fields of scalar numeric types are packed by default.\n                // This information is incomplete - according to the conformance tests, BOOL\n                // and ENUM are packed by default as well. This means only STRING and BYTES\n                // are not packed by default, which makes sense because they are length-delimited.\n                return true;\n            default:\n                return false;\n        }\n    }\n    return false;\n}\nexports.isPackedFieldByDefault = isPackedFieldByDefault;\n/**\n * Map from a compiler-generated field type to our ScalarType, which is a\n * subset of field types declared by protobuf enum google.protobuf.FieldDescriptorProto.\n */\nconst fieldTypeToScalarType = {\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.DOUBLE]: field_js_1.ScalarType.DOUBLE,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.FLOAT]: field_js_1.ScalarType.FLOAT,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.INT64]: field_js_1.ScalarType.INT64,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.UINT64]: field_js_1.ScalarType.UINT64,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.INT32]: field_js_1.ScalarType.INT32,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.FIXED64]: field_js_1.ScalarType.FIXED64,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.FIXED32]: field_js_1.ScalarType.FIXED32,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.BOOL]: field_js_1.ScalarType.BOOL,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.STRING]: field_js_1.ScalarType.STRING,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.GROUP]: undefined,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.MESSAGE]: undefined,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.BYTES]: field_js_1.ScalarType.BYTES,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.UINT32]: field_js_1.ScalarType.UINT32,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.ENUM]: undefined,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.SFIXED32]: field_js_1.ScalarType.SFIXED32,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.SFIXED64]: field_js_1.ScalarType.SFIXED64,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.SINT32]: field_js_1.ScalarType.SINT32,\n    [descriptor_pb_js_1.FieldDescriptorProto_Type.SINT64]: field_js_1.ScalarType.SINT64,\n};\n/**\n * Find comments.\n */\nfunction findComments(sourceCodeInfo, sourcePath) {\n    if (!sourceCodeInfo) {\n        return {\n            leadingDetached: [],\n            sourcePath,\n        };\n    }\n    for (const location of sourceCodeInfo.location) {\n        if (location.path.length !== sourcePath.length) {\n            continue;\n        }\n        if (location.path.some((value, index) => sourcePath[index] !== value)) {\n            continue;\n        }\n        return {\n            leadingDetached: location.leadingDetachedComments,\n            leading: location.leadingComments,\n            trailing: location.trailingComments,\n            sourcePath,\n        };\n    }\n    return {\n        leadingDetached: [],\n        sourcePath,\n    };\n}\n/**\n * The following field numbers are used to find comments in\n * google.protobuf.SourceCodeInfo.\n */\nvar FieldNumber;\n(function (FieldNumber) {\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Package\"] = 2] = \"FileDescriptorProto_Package\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_MessageType\"] = 4] = \"FileDescriptorProto_MessageType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_EnumType\"] = 5] = \"FileDescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Service\"] = 6] = \"FileDescriptorProto_Service\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Extension\"] = 7] = \"FileDescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"FileDescriptorProto_Syntax\"] = 12] = \"FileDescriptorProto_Syntax\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Field\"] = 2] = \"DescriptorProto_Field\";\n    FieldNumber[FieldNumber[\"DescriptorProto_NestedType\"] = 3] = \"DescriptorProto_NestedType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_EnumType\"] = 4] = \"DescriptorProto_EnumType\";\n    FieldNumber[FieldNumber[\"DescriptorProto_Extension\"] = 6] = \"DescriptorProto_Extension\";\n    FieldNumber[FieldNumber[\"DescriptorProto_OneofDecl\"] = 8] = \"DescriptorProto_OneofDecl\";\n    FieldNumber[FieldNumber[\"EnumDescriptorProto_Value\"] = 2] = \"EnumDescriptorProto_Value\";\n    FieldNumber[FieldNumber[\"ServiceDescriptorProto_Method\"] = 2] = \"ServiceDescriptorProto_Method\";\n})(FieldNumber || (FieldNumber = {}));\n/**\n * Return a string that matches the definition of a field in the protobuf\n * source. Does not take custom options into account.\n */\nfunction declarationString() {\n    var _a, _b;\n    const parts = [];\n    if (this.repeated) {\n        parts.push(\"repeated\");\n    }\n    if (this.optional) {\n        parts.push(\"optional\");\n    }\n    const file = this.kind === \"extension\" ? this.file : this.parent.file;\n    if (file.syntax == \"proto2\" &&\n        this.proto.label === descriptor_pb_js_1.FieldDescriptorProto_Label.REQUIRED) {\n        parts.push(\"required\");\n    }\n    let type;\n    switch (this.fieldKind) {\n        case \"scalar\":\n            type = field_js_1.ScalarType[this.scalar].toLowerCase();\n            break;\n        case \"enum\":\n            type = this.enum.typeName;\n            break;\n        case \"message\":\n            type = this.message.typeName;\n            break;\n        case \"map\": {\n            const k = field_js_1.ScalarType[this.mapKey].toLowerCase();\n            let v;\n            switch (this.mapValue.kind) {\n                case \"scalar\":\n                    v = field_js_1.ScalarType[this.mapValue.scalar].toLowerCase();\n                    break;\n                case \"enum\":\n                    v = this.mapValue.enum.typeName;\n                    break;\n                case \"message\":\n                    v = this.mapValue.message.typeName;\n                    break;\n            }\n            type = `map<${k}, ${v}>`;\n            break;\n        }\n    }\n    parts.push(`${type} ${this.name} = ${this.number}`);\n    const options = [];\n    if (((_a = this.proto.options) === null || _a === void 0 ? void 0 : _a.packed) !== undefined) {\n        options.push(`packed = ${this.proto.options.packed.toString()}`);\n    }\n    let defaultValue = this.proto.defaultValue;\n    if (defaultValue !== undefined) {\n        if (this.proto.type == descriptor_pb_js_1.FieldDescriptorProto_Type.BYTES ||\n            this.proto.type == descriptor_pb_js_1.FieldDescriptorProto_Type.STRING) {\n            defaultValue = '\"' + defaultValue.replace('\"', '\\\\\"') + '\"';\n        }\n        options.push(`default = ${defaultValue}`);\n    }\n    if (this.jsonName !== undefined) {\n        options.push(`json_name = \"${this.jsonName}\"`);\n    }\n    if (((_b = this.proto.options) === null || _b === void 0 ? void 0 : _b.deprecated) === true) {\n        options.push(`deprecated = true`);\n    }\n    if (options.length > 0) {\n        parts.push(\"[\" + options.join(\", \") + \"]\");\n    }\n    return parts.join(\" \");\n}\n/**\n * Parses a text-encoded default value (proto2) of a scalar or enum field.\n */\nfunction getDefaultValue() {\n    const d = this.proto.defaultValue;\n    if (d === undefined) {\n        return undefined;\n    }\n    switch (this.fieldKind) {\n        case \"enum\": {\n            const enumValue = this.enum.values.find((v) => v.name === d);\n            (0, assert_js_1.assert)(enumValue, `cannot parse ${this.toString()} default value: ${d}`);\n            return enumValue.number;\n        }\n        case \"scalar\":\n            switch (this.scalar) {\n                case field_js_1.ScalarType.STRING:\n                    return d;\n                case field_js_1.ScalarType.BYTES: {\n                    const u = unescapeBytesDefaultValue(d);\n                    if (u === false) {\n                        throw new Error(`cannot parse ${this.toString()} default value: ${d}`);\n                    }\n                    return u;\n                }\n                case field_js_1.ScalarType.INT64:\n                case field_js_1.ScalarType.SFIXED64:\n                case field_js_1.ScalarType.SINT64:\n                    return proto_int64_js_1.protoInt64.parse(d);\n                case field_js_1.ScalarType.UINT64:\n                case field_js_1.ScalarType.FIXED64:\n                    return proto_int64_js_1.protoInt64.uParse(d);\n                case field_js_1.ScalarType.DOUBLE:\n                case field_js_1.ScalarType.FLOAT:\n                    switch (d) {\n                        case \"inf\":\n                            return Number.POSITIVE_INFINITY;\n                        case \"-inf\":\n                            return Number.NEGATIVE_INFINITY;\n                        case \"nan\":\n                            return Number.NaN;\n                        default:\n                            return parseFloat(d);\n                    }\n                case field_js_1.ScalarType.BOOL:\n                    return d === \"true\";\n                case field_js_1.ScalarType.INT32:\n                case field_js_1.ScalarType.UINT32:\n                case field_js_1.ScalarType.SINT32:\n                case field_js_1.ScalarType.FIXED32:\n                case field_js_1.ScalarType.SFIXED32:\n                    return parseInt(d, 10);\n            }\n            break;\n        default:\n            return undefined;\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = proto_int64_js_1.protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRegistry = void 0;\n/**\n * Create a new registry from the given types.\n */\nfunction createRegistry(...types) {\n    const messages = {};\n    const enums = {};\n    const services = {};\n    const registry = {\n        /**\n         * Add a type to the registry. For messages, the types used in message\n         * fields are added recursively. For services, the message types used\n         * for requests and responses are added recursively.\n         */\n        add(type) {\n            if (\"fields\" in type) {\n                if (!this.findMessage(type.typeName)) {\n                    messages[type.typeName] = type;\n                    for (const field of type.fields.list()) {\n                        if (field.kind == \"message\") {\n                            this.add(field.T);\n                        }\n                        else if (field.kind == \"map\" && field.V.kind == \"message\") {\n                            this.add(field.V.T);\n                        }\n                        else if (field.kind == \"enum\") {\n                            this.add(field.T);\n                        }\n                    }\n                }\n            }\n            else if (\"methods\" in type) {\n                if (!this.findService(type.typeName)) {\n                    services[type.typeName] = type;\n                    for (const method of Object.values(type.methods)) {\n                        this.add(method.I);\n                        this.add(method.O);\n                    }\n                }\n            }\n            else {\n                enums[type.typeName] = type;\n            }\n        },\n        findMessage(typeName) {\n            return messages[typeName];\n        },\n        findEnum(typeName) {\n            return enums[typeName];\n        },\n        findService(typeName) {\n            return services[typeName];\n        },\n    };\n    for (const type of types) {\n        registry.add(type);\n    }\n    return registry;\n}\nexports.createRegistry = createRegistry;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRegistryFromDescriptors = void 0;\nconst assert_js_1 = require(\"./private/assert.js\");\nconst proto3_js_1 = require(\"./proto3.js\");\nconst proto2_js_1 = require(\"./proto2.js\");\nconst names_js_1 = require(\"./private/names.js\");\nconst timestamp_pb_js_1 = require(\"./google/protobuf/timestamp_pb.js\");\nconst duration_pb_js_1 = require(\"./google/protobuf/duration_pb.js\");\nconst any_pb_js_1 = require(\"./google/protobuf/any_pb.js\");\nconst empty_pb_js_1 = require(\"./google/protobuf/empty_pb.js\");\nconst field_mask_pb_js_1 = require(\"./google/protobuf/field_mask_pb.js\");\nconst struct_pb_js_1 = require(\"./google/protobuf/struct_pb.js\");\nconst enum_js_1 = require(\"./private/enum.js\");\nconst wrappers_pb_js_1 = require(\"./google/protobuf/wrappers_pb.js\");\nconst descriptor_pb_js_1 = require(\"./google/protobuf/descriptor_pb.js\");\nconst create_descriptor_set_js_1 = require(\"./create-descriptor-set.js\");\n// well-known message types with specialized JSON representation\nconst wkMessages = [\n    any_pb_js_1.Any,\n    duration_pb_js_1.Duration,\n    empty_pb_js_1.Empty,\n    field_mask_pb_js_1.FieldMask,\n    struct_pb_js_1.Struct,\n    struct_pb_js_1.Value,\n    struct_pb_js_1.ListValue,\n    timestamp_pb_js_1.Timestamp,\n    duration_pb_js_1.Duration,\n    wrappers_pb_js_1.DoubleValue,\n    wrappers_pb_js_1.FloatValue,\n    wrappers_pb_js_1.Int64Value,\n    wrappers_pb_js_1.Int32Value,\n    wrappers_pb_js_1.UInt32Value,\n    wrappers_pb_js_1.UInt64Value,\n    wrappers_pb_js_1.BoolValue,\n    wrappers_pb_js_1.StringValue,\n    wrappers_pb_js_1.BytesValue,\n];\n// well-known enum types with specialized JSON representation\nconst wkEnums = [(0, enum_js_1.getEnumType)(struct_pb_js_1.NullValue)];\n/**\n * Create a registry from a set of descriptors. The types returned by this\n * registry behave exactly like types from generated code.\n *\n * This function accepts google.protobuf.FileDescriptorSet in serialized or\n * deserialized form. Alternatively, it also accepts a DescriptorSet (see\n * createDescriptorSet()).\n *\n * By default, all well-known types with a specialized JSON representation\n * are replaced with their generated counterpart in this package.\n */\nfunction createRegistryFromDescriptors(input, replaceWkt = true) {\n    const set = input instanceof Uint8Array || input instanceof descriptor_pb_js_1.FileDescriptorSet\n        ? (0, create_descriptor_set_js_1.createDescriptorSet)(input)\n        : input;\n    const enums = {};\n    const messages = {};\n    const services = {};\n    if (replaceWkt) {\n        for (const mt of wkMessages) {\n            messages[mt.typeName] = mt;\n        }\n        for (const et of wkEnums) {\n            enums[et.typeName] = et;\n        }\n    }\n    return {\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findEnum(typeName) {\n            const existing = enums[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.enums.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? proto3_js_1.proto3 : proto2_js_1.proto2;\n            const type = runtime.makeEnumType(typeName, desc.values.map((u) => ({\n                no: u.number,\n                name: u.name,\n                localName: (0, names_js_1.localName)(u),\n            })), {});\n            enums[typeName] = type;\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findMessage(typeName) {\n            const existing = messages[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.messages.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const runtime = desc.file.syntax == \"proto3\" ? proto3_js_1.proto3 : proto2_js_1.proto2;\n            const fields = [];\n            const type = runtime.makeMessageType(typeName, () => fields, {\n                localName: (0, names_js_1.localName)(desc),\n            });\n            messages[typeName] = type;\n            for (const field of desc.fields) {\n                const fieldInfo = makeFieldInfo(field, this);\n                fields.push(fieldInfo);\n            }\n            return type;\n        },\n        /**\n         * May raise an error on invalid descriptors.\n         */\n        findService(typeName) {\n            const existing = services[typeName];\n            if (existing) {\n                return existing;\n            }\n            const desc = set.services.get(typeName);\n            if (!desc) {\n                return undefined;\n            }\n            const methods = {};\n            for (const method of desc.methods) {\n                const I = this.findMessage(method.input.typeName);\n                const O = this.findMessage(method.output.typeName);\n                (0, assert_js_1.assert)(I, `message \"${method.input.typeName}\" for ${method.toString()} not found`);\n                (0, assert_js_1.assert)(O, `output message \"${method.output.typeName}\" for ${method.toString()} not found`);\n                methods[(0, names_js_1.localName)(method)] = {\n                    name: method.name,\n                    I,\n                    O,\n                    kind: method.methodKind,\n                    idempotency: method.idempotency,\n                    // We do not surface options at this time\n                    // options: {},\n                };\n            }\n            return (services[typeName] = {\n                typeName: desc.typeName,\n                methods,\n            });\n        },\n    };\n}\nexports.createRegistryFromDescriptors = createRegistryFromDescriptors;\nfunction makeFieldInfo(desc, resolver) {\n    switch (desc.fieldKind) {\n        case \"map\":\n            return makeMapFieldInfo(desc, resolver);\n        case \"message\":\n            return makeMessageFieldInfo(desc, resolver);\n        case \"enum\": {\n            const fi = makeEnumFieldInfo(desc, resolver);\n            fi.default = desc.getDefaultValue();\n            return fi;\n        }\n        case \"scalar\": {\n            const fi = makeScalarFieldInfo(desc);\n            fi.default = desc.getDefaultValue();\n            return fi;\n        }\n    }\n}\nfunction makeMapFieldInfo(field, resolver) {\n    const base = {\n        kind: \"map\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        K: field.mapKey,\n    };\n    if (field.mapValue.message) {\n        const messageType = resolver.findMessage(field.mapValue.message.typeName);\n        (0, assert_js_1.assert)(messageType, `message \"${field.mapValue.message.typeName}\" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}, base), { V: {\n                kind: \"message\",\n                T: messageType,\n            } });\n    }\n    if (field.mapValue.enum) {\n        const enumType = resolver.findEnum(field.mapValue.enum.typeName);\n        (0, assert_js_1.assert)(enumType, `enum \"${field.mapValue.enum.typeName}\" for ${field.toString()} not found`);\n        return Object.assign(Object.assign({}, base), { V: {\n                kind: \"enum\",\n                T: enumType,\n            } });\n    }\n    return Object.assign(Object.assign({}, base), { V: {\n            kind: \"scalar\",\n            T: field.mapValue.scalar,\n        } });\n}\nfunction makeScalarFieldInfo(field) {\n    const base = {\n        kind: \"scalar\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: field.scalar,\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}, base), { repeated: true, packed: field.packed, oneof: undefined, T: field.scalar });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}, base), { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}, base), { opt: true });\n    }\n    return base;\n}\nfunction makeMessageFieldInfo(field, resolver) {\n    const messageType = resolver.findMessage(field.message.typeName);\n    (0, assert_js_1.assert)(messageType, `message \"${field.message.typeName}\" for ${field.toString()} not found`);\n    const base = {\n        kind: \"message\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: messageType,\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}, base), { repeated: true, packed: field.packed, oneof: undefined });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}, base), { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}, base), { opt: true });\n    }\n    return base;\n}\nfunction makeEnumFieldInfo(field, resolver) {\n    const enumType = resolver.findEnum(field.enum.typeName);\n    (0, assert_js_1.assert)(enumType, `enum \"${field.enum.typeName}\" for ${field.toString()} not found`);\n    const base = {\n        kind: \"enum\",\n        no: field.number,\n        name: field.name,\n        jsonName: field.jsonName,\n        T: enumType,\n    };\n    if (field.repeated) {\n        return Object.assign(Object.assign({}, base), { repeated: true, packed: field.packed, oneof: undefined });\n    }\n    if (field.oneof) {\n        return Object.assign(Object.assign({}, base), { oneof: field.oneof.name });\n    }\n    if (field.optional) {\n        return Object.assign(Object.assign({}, base), { opt: true });\n    }\n    return base;\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlainMessage = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nconst message_js_1 = require(\"./message.js\");\n/**\n * toPlainMessage returns a new object by striping\n * all methods from a message, leaving only fields and\n * oneof groups. It is recursive, meaning it applies this\n * same logic to all nested message fields as well.\n */\nfunction toPlainMessage(message) {\n    const type = message.getType();\n    const target = {};\n    for (const member of type.fields.byMember()) {\n        const source = message[member.localName];\n        let copy;\n        if (member.repeated) {\n            copy = source.map((e) => toPlainValue(e));\n        }\n        else if (member.kind == \"map\") {\n            copy = {};\n            for (const [key, v] of Object.entries(source)) {\n                copy[key] = toPlainValue(v);\n            }\n        }\n        else if (member.kind == \"oneof\") {\n            const f = member.findField(source.case);\n            copy = f\n                ? { case: source.case, value: toPlainValue(source.value) }\n                : { case: undefined };\n        }\n        else {\n            copy = toPlainValue(source);\n        }\n        target[member.localName] = copy;\n    }\n    return target;\n}\nexports.toPlainMessage = toPlainMessage;\nfunction toPlainValue(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if (value instanceof message_js_1.Message) {\n        return toPlainMessage(value);\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codeFromString = exports.codeToString = void 0;\nconst code_js_1 = require(\"../code.js\");\n/**\n * codeToString returns the string representation of a Code.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToString(value) {\n    const name = code_js_1.Code[value];\n    if (typeof name != \"string\") {\n        return value.toString();\n    }\n    return (name[0].toLowerCase() +\n        name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase()));\n}\nexports.codeToString = codeToString;\nlet stringToCode;\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromString(value) {\n    if (!stringToCode) {\n        stringToCode = {};\n        for (const value of Object.values(code_js_1.Code)) {\n            if (typeof value == \"string\") {\n                continue;\n            }\n            stringToCode[codeToString(value)] = value;\n        }\n    }\n    return stringToCode[value];\n}\nexports.codeFromString = codeFromString;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncDelegator = (this && this.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncIterable = exports.createWritableIterable = exports.makeIterableAbortable = exports.untilFirst = exports.readAllBytes = exports.transformSplitEnvelope = exports.transformJoinEnvelopes = exports.transformDecompressEnvelope = exports.transformCompressEnvelope = exports.transformParseEnvelope = exports.transformSerializeEnvelope = exports.transformNormalizeMessage = exports.transformReadAllBytes = exports.transformPrepend = exports.transformAppend = exports.transformCatchFinally = exports.transformCatch = exports.pipe = exports.sinkAllBytes = exports.sinkAll = exports.pipeTo = void 0;\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst envelope_js_1 = require(\"./envelope.js\");\nconst limit_io_js_1 = require(\"./limit-io.js\");\nfunction pipeTo(source, ...rest) {\n    const [transforms, sink, opt] = pickTransformsAndSink(rest);\n    let iterable = source;\n    let abortable;\n    if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n        iterable = abortable = makeIterableAbortable(iterable);\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    iterable = pipe(iterable, ...transforms, { propagateDownStreamError: false });\n    return sink(iterable).catch((reason) => {\n        if (abortable) {\n            return abortable.abort(reason).then(() => Promise.reject(reason));\n        }\n        return Promise.reject(reason);\n    });\n}\nexports.pipeTo = pipeTo;\n// pick transforms, the sink, and options from the pipeTo() rest parameter\nfunction pickTransformsAndSink(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    const sink = rest.pop();\n    return [rest, sink, opt];\n}\n/**\n * Creates an AsyncIterableSink that concatenates all elements from the input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAll() {\n    return async function (iterable) {\n        var _a, e_1, _b, _c;\n        const all = [];\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;) {\n                _c = iterable_1_1.value;\n                _d = false;\n                try {\n                    const chunk = _c;\n                    all.push(chunk);\n                }\n                finally {\n                    _d = true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return all;\n    };\n}\nexports.sinkAll = sinkAll;\n/**\n * Creates an AsyncIterableSink that concatenates all chunks from the input into\n * a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction sinkAllBytes(readMaxBytes, lengthHint) {\n    return async function (iterable) {\n        return await readAllBytes(iterable, readMaxBytes, lengthHint);\n    };\n}\nexports.sinkAllBytes = sinkAllBytes;\nfunction pipe(source, ...rest) {\n    return __asyncGenerator(this, arguments, function* pipe_1() {\n        const [transforms, opt] = pickTransforms(rest);\n        let abortable;\n        let iterable = source;\n        if ((opt === null || opt === void 0 ? void 0 : opt.propagateDownStreamError) === true) {\n            iterable = abortable = makeIterableAbortable(iterable);\n        }\n        for (const t of transforms) {\n            iterable = t(iterable);\n        }\n        const it = iterable[Symbol.asyncIterator]();\n        for (;;) {\n            const r = yield __await(it.next());\n            if (r.done === true) {\n                break;\n            }\n            if (!abortable) {\n                yield yield __await(r.value);\n                continue;\n            }\n            try {\n                yield yield __await(r.value);\n            }\n            catch (e) {\n                yield __await(abortable.abort(e)); // propagate downstream error to the source\n                throw e;\n            }\n        }\n    });\n}\nexports.pipe = pipe;\nfunction pickTransforms(rest) {\n    let opt;\n    if (typeof rest[rest.length - 1] != \"function\") {\n        opt = rest.pop();\n    }\n    return [rest, opt];\n}\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given catchError function.\n *\n * The catchError function may return a final value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatch(catchError) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    const caught = yield __await(catchError(e));\n                    if (caught !== undefined) {\n                        yield yield __await(caught);\n                    }\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n        });\n    };\n}\nexports.transformCatch = transformCatch;\n/**\n * Creates an AsyncIterableTransform that catches any error from the input, and\n * passes it to the given function. Unlike transformCatch(), the given function\n * is also called when no error is raised.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCatchFinally(catchFinally) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            // we deliberate avoid a for-await loop because we only want to catch upstream\n            // errors, not downstream errors (yield).\n            let err;\n            const it = iterable[Symbol.asyncIterator]();\n            for (;;) {\n                let r;\n                try {\n                    r = yield __await(it.next());\n                }\n                catch (e) {\n                    err = e;\n                    break;\n                }\n                if (r.done === true) {\n                    break;\n                }\n                yield yield __await(r.value);\n            }\n            const caught = yield __await(catchFinally(err));\n            if (caught !== undefined) {\n                yield yield __await(caught);\n            }\n        });\n    };\n}\nexports.transformCatchFinally = transformCatchFinally;\n/**\n * Creates an AsyncIterableTransform that appends a value.\n *\n * The element to append is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformAppend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_2, _b, _c;\n            try {\n                for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a;) {\n                    _c = iterable_2_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        yield yield __await(chunk);\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            const append = yield __await(provide());\n            if (append !== undefined) {\n                yield yield __await(append);\n            }\n        });\n    };\n}\nexports.transformAppend = transformAppend;\n/**\n * Creates an AsyncIterableTransform that prepends an element.\n *\n * The element to prepend is provided by a function. If the function returns\n * undefined, no element is appended.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformPrepend(provide) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_3, _b, _c;\n            const prepend = yield __await(provide());\n            if (prepend !== undefined) {\n                yield yield __await(prepend);\n            }\n            try {\n                for (var _d = true, iterable_3 = __asyncValues(iterable), iterable_3_1; iterable_3_1 = yield __await(iterable_3.next()), _a = iterable_3_1.done, !_a;) {\n                    _c = iterable_3_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        yield yield __await(chunk);\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_3.return)) yield __await(_b.call(iterable_3));\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        });\n    };\n}\nexports.transformPrepend = transformPrepend;\n/**\n * Creates an AsyncIterableTransform that reads all bytes from the input, and\n * concatenates them to a single Uint8Array.\n *\n * The iterable raises an error if the more than readMaxBytes are read.\n *\n * An optional length hint can be provided to optimize allocation and validation.\n * If more or less bytes are present in the source that the length hint indicates,\n * and error is raised.\n * If the length hint is larger than readMaxBytes, an error is raised.\n * If the length hint is not a positive integer, it is ignored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformReadAllBytes(readMaxBytes, lengthHint) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            yield yield __await(yield __await(readAllBytes(iterable, readMaxBytes, lengthHint)));\n        });\n    };\n}\nexports.transformReadAllBytes = transformReadAllBytes;\n/**\n * Creates an AsyncIterableTransform that takes partial protobuf messages of the\n * specified message type as input, and yields full instances.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformNormalizeMessage(messageType) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_4, _b, _c;\n            try {\n                for (var _d = true, iterable_4 = __asyncValues(iterable), iterable_4_1; iterable_4_1 = yield __await(iterable_4.next()), _a = iterable_4_1.done, !_a;) {\n                    _c = iterable_4_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        if (chunk instanceof messageType) {\n                            yield yield __await(chunk);\n                        }\n                        else {\n                            yield yield __await(new messageType(chunk));\n                        }\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_4.return)) yield __await(_b.call(iterable_4));\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        });\n    };\n}\nexports.transformNormalizeMessage = transformNormalizeMessage;\nfunction transformSerializeEnvelope(serialization, endStreamFlag, endSerialization) {\n    if (endStreamFlag === undefined || endSerialization === undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_5, _b, _c;\n                try {\n                    for (var _d = true, iterable_5 = __asyncValues(iterable), iterable_5_1; iterable_5_1 = yield __await(iterable_5.next()), _a = iterable_5_1.done, !_a;) {\n                        _c = iterable_5_1.value;\n                        _d = false;\n                        try {\n                            const chunk = _c;\n                            const data = serialization.serialize(chunk);\n                            yield yield __await({ flags: 0, data });\n                        }\n                        finally {\n                            _d = true;\n                        }\n                    }\n                }\n                catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_5.return)) yield __await(_b.call(iterable_5));\n                    }\n                    finally { if (e_5) throw e_5.error; }\n                }\n            });\n        };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_6, _b, _c;\n            try {\n                for (var _d = true, iterable_6 = __asyncValues(iterable), iterable_6_1; iterable_6_1 = yield __await(iterable_6.next()), _a = iterable_6_1.done, !_a;) {\n                    _c = iterable_6_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        let data;\n                        let flags = 0;\n                        if (chunk.end) {\n                            flags = flags | endStreamFlag;\n                            data = endSerialization.serialize(chunk.value);\n                        }\n                        else {\n                            data = serialization.serialize(chunk.value);\n                        }\n                        yield yield __await({ flags, data });\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_6.return)) yield __await(_b.call(iterable_6));\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        });\n    };\n}\nexports.transformSerializeEnvelope = transformSerializeEnvelope;\nfunction transformParseEnvelope(serialization, endStreamFlag, endSerialization) {\n    // code path always yields ParsedEnvelopedMessage<T, E>\n    if (endSerialization && endStreamFlag !== undefined) {\n        return function (iterable) {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_7, _b, _c;\n                try {\n                    for (var _d = true, iterable_7 = __asyncValues(iterable), iterable_7_1; iterable_7_1 = yield __await(iterable_7.next()), _a = iterable_7_1.done, !_a;) {\n                        _c = iterable_7_1.value;\n                        _d = false;\n                        try {\n                            const { flags, data } = _c;\n                            if ((flags & endStreamFlag) === endStreamFlag) {\n                                yield yield __await({ value: endSerialization.parse(data), end: true });\n                            }\n                            else {\n                                yield yield __await({ value: serialization.parse(data), end: false });\n                            }\n                        }\n                        finally {\n                            _d = true;\n                        }\n                    }\n                }\n                catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iterable_7.return)) yield __await(_b.call(iterable_7));\n                    }\n                    finally { if (e_7) throw e_7.error; }\n                }\n            });\n        };\n    }\n    // code path always yields T\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_8, _b, _c;\n            try {\n                for (var _d = true, iterable_8 = __asyncValues(iterable), iterable_8_1; iterable_8_1 = yield __await(iterable_8.next()), _a = iterable_8_1.done, !_a;) {\n                    _c = iterable_8_1.value;\n                    _d = false;\n                    try {\n                        const { flags, data } = _c;\n                        if (endStreamFlag !== undefined &&\n                            (flags & endStreamFlag) === endStreamFlag) {\n                            if (endSerialization === null) {\n                                throw new connect_error_js_1.ConnectError(\"unexpected end flag\", code_js_1.Code.InvalidArgument);\n                            }\n                            // skips end-of-stream envelope\n                            continue;\n                        }\n                        yield yield __await(serialization.parse(data));\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_8.return)) yield __await(_b.call(iterable_8));\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n        });\n    };\n}\nexports.transformParseEnvelope = transformParseEnvelope;\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and compresses them if they are larger than compressMinBytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformCompressEnvelope(compression, compressMinBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_9, _b, _c;\n            try {\n                for (var _d = true, iterable_9 = __asyncValues(iterable), iterable_9_1; iterable_9_1 = yield __await(iterable_9.next()), _a = iterable_9_1.done, !_a;) {\n                    _c = iterable_9_1.value;\n                    _d = false;\n                    try {\n                        const env = _c;\n                        yield yield __await(yield __await((0, envelope_js_1.envelopeCompress)(env, compression, compressMinBytes)));\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_9.return)) yield __await(_b.call(iterable_9));\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        });\n    };\n}\nexports.transformCompressEnvelope = transformCompressEnvelope;\n/**\n * Creates an AsyncIterableTransform that takes enveloped messages as a source,\n * and decompresses them using the given compression.\n *\n * The iterable raises an error if the decompressed payload of an enveloped\n * message is larger than readMaxBytes, or if no compression is provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformDecompressEnvelope(compression, readMaxBytes) {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_10, _b, _c;\n            try {\n                for (var _d = true, iterable_10 = __asyncValues(iterable), iterable_10_1; iterable_10_1 = yield __await(iterable_10.next()), _a = iterable_10_1.done, !_a;) {\n                    _c = iterable_10_1.value;\n                    _d = false;\n                    try {\n                        const env = _c;\n                        yield yield __await(yield __await((0, envelope_js_1.envelopeDecompress)(env, compression, readMaxBytes)));\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_10_1) { e_10 = { error: e_10_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_10.return)) yield __await(_b.call(iterable_10));\n                }\n                finally { if (e_10) throw e_10.error; }\n            }\n        });\n    };\n}\nexports.transformDecompressEnvelope = transformDecompressEnvelope;\n/**\n * Create an AsyncIterableTransform that takes enveloped messages as a source,\n * and joins them into a stream of raw bytes.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformJoinEnvelopes() {\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_11, _b, _c;\n            try {\n                for (var _d = true, iterable_11 = __asyncValues(iterable), iterable_11_1; iterable_11_1 = yield __await(iterable_11.next()), _a = iterable_11_1.done, !_a;) {\n                    _c = iterable_11_1.value;\n                    _d = false;\n                    try {\n                        const { flags, data } = _c;\n                        yield yield __await((0, envelope_js_1.encodeEnvelope)(flags, data));\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_11_1) { e_11 = { error: e_11_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_11.return)) yield __await(_b.call(iterable_11));\n                }\n                finally { if (e_11) throw e_11.error; }\n            }\n        });\n    };\n}\nexports.transformJoinEnvelopes = transformJoinEnvelopes;\n/**\n * Create an AsyncIterableTransform that takes raw bytes as a source, and splits\n * them into enveloped messages.\n *\n * The iterable raises an error\n * - if the payload of an enveloped message is larger than readMaxBytes,\n * - if the stream ended before an enveloped message fully arrived,\n * - or if the stream ended with extraneous data.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformSplitEnvelope(readMaxBytes) {\n    // append chunk to buffer, returning updated buffer\n    function append(buffer, chunk) {\n        const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        return n;\n    }\n    // tuple 0: envelope, or undefined if incomplete\n    // tuple 1: remainder of the buffer\n    function shiftEnvelope(buffer, header) {\n        if (buffer.byteLength < 5 + header.length) {\n            return [undefined, buffer];\n        }\n        return [\n            { flags: header.flags, data: buffer.subarray(5, 5 + header.length) },\n            buffer.subarray(5 + header.length),\n        ];\n    }\n    // undefined: header is incomplete\n    function peekHeader(buffer) {\n        if (buffer.byteLength < 5) {\n            return undefined;\n        }\n        const view = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n        const length = view.getUint32(1); // 4 bytes message length\n        const flags = view.getUint8(0); // first byte is flags\n        return { length, flags };\n    }\n    return function (iterable) {\n        return __asyncGenerator(this, arguments, function* () {\n            var _a, e_12, _b, _c;\n            let buffer = new Uint8Array(0);\n            try {\n                for (var _d = true, iterable_12 = __asyncValues(iterable), iterable_12_1; iterable_12_1 = yield __await(iterable_12.next()), _a = iterable_12_1.done, !_a;) {\n                    _c = iterable_12_1.value;\n                    _d = false;\n                    try {\n                        const chunk = _c;\n                        buffer = append(buffer, chunk);\n                        for (;;) {\n                            const header = peekHeader(buffer);\n                            if (!header) {\n                                break;\n                            }\n                            (0, limit_io_js_1.assertReadMaxBytes)(readMaxBytes, header.length, true);\n                            let env;\n                            [env, buffer] = shiftEnvelope(buffer, header);\n                            if (!env) {\n                                break;\n                            }\n                            yield yield __await(env);\n                        }\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_12_1) { e_12 = { error: e_12_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_12.return)) yield __await(_b.call(iterable_12));\n                }\n                finally { if (e_12) throw e_12.error; }\n            }\n            if (buffer.byteLength > 0) {\n                const header = peekHeader(buffer);\n                let message = \"protocol error: incomplete envelope\";\n                if (header) {\n                    message = `protocol error: promised ${header.length} bytes in enveloped message, got ${buffer.byteLength - 5} bytes`;\n                }\n                throw new connect_error_js_1.ConnectError(message, code_js_1.Code.InvalidArgument);\n            }\n        });\n    };\n}\nexports.transformSplitEnvelope = transformSplitEnvelope;\n/**\n * Reads all bytes from the source, and concatenates them to a single Uint8Array.\n *\n * Raises an error if:\n * - more than readMaxBytes are read\n * - lengthHint is a positive integer, but larger than readMaxBytes\n * - lengthHint is a positive integer, and the source contains more or less bytes\n *   than promised\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function readAllBytes(iterable, readMaxBytes, lengthHint) {\n    var _a, e_13, _b, _c, _d, e_14, _e, _f;\n    const [ok, hint] = parseLengthHint(lengthHint);\n    if (ok) {\n        if (hint > readMaxBytes) {\n            (0, limit_io_js_1.assertReadMaxBytes)(readMaxBytes, hint, true);\n        }\n        const buffer = new Uint8Array(hint);\n        let offset = 0;\n        try {\n            for (var _g = true, iterable_13 = __asyncValues(iterable), iterable_13_1; iterable_13_1 = await iterable_13.next(), _a = iterable_13_1.done, !_a;) {\n                _c = iterable_13_1.value;\n                _g = false;\n                try {\n                    const chunk = _c;\n                    if (offset + chunk.byteLength > hint) {\n                        throw new connect_error_js_1.ConnectError(`protocol error: promised ${hint} bytes, received ${offset + chunk.byteLength}`, code_js_1.Code.InvalidArgument);\n                    }\n                    buffer.set(chunk, offset);\n                    offset += chunk.byteLength;\n                }\n                finally {\n                    _g = true;\n                }\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (!_g && !_a && (_b = iterable_13.return)) await _b.call(iterable_13);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        if (offset < hint) {\n            throw new connect_error_js_1.ConnectError(`protocol error: promised ${hint} bytes, received ${offset}`, code_js_1.Code.InvalidArgument);\n        }\n        return buffer;\n    }\n    const chunks = [];\n    let count = 0;\n    try {\n        for (var _h = true, iterable_14 = __asyncValues(iterable), iterable_14_1; iterable_14_1 = await iterable_14.next(), _d = iterable_14_1.done, !_d;) {\n            _f = iterable_14_1.value;\n            _h = false;\n            try {\n                const chunk = _f;\n                count += chunk.byteLength;\n                (0, limit_io_js_1.assertReadMaxBytes)(readMaxBytes, count);\n                chunks.push(chunk);\n            }\n            finally {\n                _h = true;\n            }\n        }\n    }\n    catch (e_14_1) { e_14 = { error: e_14_1 }; }\n    finally {\n        try {\n            if (!_h && !_d && (_e = iterable_14.return)) await _e.call(iterable_14);\n        }\n        finally { if (e_14) throw e_14.error; }\n    }\n    const all = new Uint8Array(count);\n    let offset = 0;\n    for (let chunk = chunks.shift(); chunk; chunk = chunks.shift()) {\n        all.set(chunk, offset);\n        offset += chunk.byteLength;\n    }\n    return all;\n}\nexports.readAllBytes = readAllBytes;\n// parse the lengthHint argument of readAllBytes()\nfunction parseLengthHint(lengthHint) {\n    if (lengthHint === undefined || lengthHint === null) {\n        return [false, 0];\n    }\n    const n = typeof lengthHint == \"string\" ? parseInt(lengthHint, 10) : lengthHint;\n    if (!Number.isSafeInteger(n) || n < 0) {\n        return [false, n];\n    }\n    return [true, n];\n}\n/**\n * Wait for the first element of an iterable without modifying the iterable.\n * This consumes the first element, but pushes it back on the stack.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function untilFirst(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    let first = await it.next();\n    return {\n        [Symbol.asyncIterator]() {\n            const w = {\n                async next() {\n                    if (first !== null) {\n                        const n = first;\n                        first = null;\n                        return n;\n                    }\n                    return await it.next();\n                },\n            };\n            if (it.throw !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                w.throw = (e) => it.throw(e);\n            }\n            if (it.return !== undefined) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                w.return = (value) => it.return(value);\n            }\n            return w;\n        },\n    };\n}\nexports.untilFirst = untilFirst;\n/**\n * Wrap the given iterable and return an iterable with an abort() method.\n *\n * This function exists purely for convenience. Where one would typically have\n * to access the iterator directly, advance through all elements, and call\n * AsyncIterator.throw() to notify the upstream iterable, this function allows\n * to use convenient for-await loops and still notify the upstream iterable:\n *\n * ```ts\n * const abortable = makeIterableAbortable(iterable);\n * for await (const ele of abortable) {\n *   await abortable.abort(\"ERR\");\n * }\n * ```\n * There are a couple of limitations of this function:\n * - the given async iterable must implement throw\n * - the async iterable cannot be re-use\n * - if source catches errors and yields values for them, they are ignored, and\n *   the source may still dangle\n *\n * There are four possible ways an async function* can handle yield errors:\n * 1. don't catch errors at all - Abortable.abort() will resolve \"rethrown\"\n * 2. catch errors and rethrow - Abortable.abort() will resolve \"rethrown\"\n * 3. catch errors and return - Abortable.abort() will resolve \"completed\"\n * 4. catch errors and yield a value - Abortable.abort() will resolve \"caught\"\n *\n * Note that catching errors and yielding a value is problematic, and it should\n * be documented that this may leave the source in a dangling state.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction makeIterableAbortable(iterable) {\n    const innerCandidate = iterable[Symbol.asyncIterator]();\n    if (innerCandidate.throw === undefined) {\n        throw new Error(\"AsyncIterable does not implement throw\");\n    }\n    const inner = innerCandidate;\n    let aborted;\n    let resultPromise;\n    let it = {\n        next() {\n            resultPromise = inner.next().finally(() => {\n                resultPromise = undefined;\n            });\n            return resultPromise;\n        },\n        throw(e) {\n            return inner.throw(e);\n        },\n    };\n    if (innerCandidate.return === undefined) {\n        it = Object.assign(Object.assign({}, it), { return(value) {\n                return inner.return(value);\n            } });\n    }\n    let used = false;\n    return {\n        abort(reason) {\n            if (aborted) {\n                return aborted.state;\n            }\n            const f = () => {\n                return inner.throw(reason).then((r) => (r.done === true ? \"completed\" : \"caught\"), () => \"rethrown\");\n            };\n            if (resultPromise) {\n                aborted = { reason, state: resultPromise.then(f, f) };\n                return aborted.state;\n            }\n            aborted = { reason, state: f() };\n            return aborted.state;\n        },\n        [Symbol.asyncIterator]() {\n            if (used) {\n                throw new Error(\"AsyncIterable cannot be re-used\");\n            }\n            used = true;\n            return it;\n        },\n    };\n}\nexports.makeIterableAbortable = makeIterableAbortable;\n// Create an instance of a WritableIterable of type T\nfunction createWritableIterable() {\n    let queue = [];\n    // Represents the resolve function of the promise returned by the async iterator if no values exist in the queue at\n    // the time of request.  It is resolved when a value is successfully received into the queue.\n    let queueResolve;\n    let error = undefined;\n    const process = async (payload) => {\n        // // If the writer's internal error was set, then reject any attempts at processing a payload.\n        if (error) {\n            return Promise.reject(String(error));\n        }\n        // If there is an iterator resolver then a consumer of the async iterator is waiting on a value.  So resolve that\n        // promise with the new value being sent and return a promise that is immediately resolved\n        if (queueResolve) {\n            queueResolve(payload);\n            queueResolve = undefined;\n            return Promise.resolve();\n        }\n        const elem = {\n            payload,\n        };\n        const prom = new Promise((resolve, reject) => {\n            elem.resolve = resolve;\n            elem.reject = reject;\n        });\n        // Otherwise no one is waiting on a value yet so add it to the queue and return a promise that will be resolved\n        // when someone reads this value\n        queue.push(elem);\n        return prom;\n    };\n    let closed = false;\n    return {\n        isClosed() {\n            return closed;\n        },\n        async write(payload) {\n            if (closed) {\n                throw new connect_error_js_1.ConnectError(\"cannot write, already closed\");\n            }\n            return process({ value: payload, done: false });\n        },\n        async close() {\n            if (closed) {\n                throw new connect_error_js_1.ConnectError(\"cannot close, already closed\");\n            }\n            closed = true;\n            return process({ value: undefined, done: true });\n        },\n        [Symbol.asyncIterator]() {\n            return {\n                next: async () => {\n                    // If the writer's internal error was set, then reject any attempts at processing a payload.\n                    if (error) {\n                        return Promise.reject(String(error));\n                    }\n                    const elem = queue.shift();\n                    if (!elem) {\n                        // We don't have any payloads ready to be sent (i.e. the consumer of the iterator is consuming faster than\n                        // senders are sending).  So return a Promise ensuring we'll resolve it when we get something.\n                        return new Promise((resolve) => {\n                            queueResolve = resolve;\n                        });\n                    }\n                    // Resolve the send promise on a successful send/close.\n                    if (elem.resolve) {\n                        elem.resolve();\n                    }\n                    return elem.payload;\n                },\n                throw: async (e) => {\n                    error = e;\n                    // The reader of this iterator has failed with the given error.  So anything left in the queue should be\n                    // drained and rejected with the given error\n                    for (const item of queue) {\n                        if (item.reject) {\n                            item.reject(e);\n                        }\n                    }\n                    queue = [];\n                    return new Promise((resolve) => {\n                        resolve({ value: undefined, done: true });\n                    });\n                },\n            };\n        },\n    };\n}\nexports.createWritableIterable = createWritableIterable;\n/**\n * Create an asynchronous iterable from an array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\n// eslint-disable-next-line @typescript-eslint/require-await\nfunction createAsyncIterable(items) {\n    return __asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n        yield __await(yield* __asyncDelegator(__asyncValues(items)));\n    });\n}\nexports.createAsyncIterable = createAsyncIterable;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeEnvelopes = exports.encodeEnvelope = exports.envelopeDecompress = exports.envelopeCompress = exports.createEnvelopeReadableStream = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\nconst compression_js_1 = require(\"./compression.js\");\n/**\n * Create a WHATWG ReadableStream of enveloped messages from a ReadableStream\n * of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            let header = undefined;\n            for (;;) {\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for (let i = 1; i < 5; i++) {\n                        length = (length << 8) + buffer[i];\n                    }\n                    header = { flags: buffer[0], length };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) {\n                    break;\n                }\n                const result = await reader.read();\n                if (result.done) {\n                    break;\n                }\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new connect_error_js_1.ConnectError(\"premature end of stream\", code_js_1.Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data,\n            });\n        },\n    });\n}\nexports.createEnvelopeReadableStream = createEnvelopeReadableStream;\n/**\n * Compress an EnvelopedMessage.\n *\n * Raises Internal if an enveloped message is already compressed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeCompress(envelope, compression, compressMinBytes) {\n    let { flags, data } = envelope;\n    if ((flags & compression_js_1.compressedFlag) === compression_js_1.compressedFlag) {\n        throw new connect_error_js_1.ConnectError(\"invalid envelope, already compressed\", code_js_1.Code.Internal);\n    }\n    if (compression && data.byteLength >= compressMinBytes) {\n        data = await compression.compress(data);\n        flags = flags | compression_js_1.compressedFlag;\n    }\n    return { data, flags };\n}\nexports.envelopeCompress = envelopeCompress;\n/**\n * Decompress an EnvelopedMessage.\n *\n * Raises InvalidArgument if an envelope is compressed, but compression is null.\n *\n * Relies on the provided Compression to raise ResourceExhausted if the\n * *decompressed* message size is larger than readMaxBytes. If the envelope is\n * not compressed, readMaxBytes is not honored.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function envelopeDecompress(envelope, compression, readMaxBytes) {\n    let { flags, data } = envelope;\n    if ((flags & compression_js_1.compressedFlag) === compression_js_1.compressedFlag) {\n        if (!compression) {\n            throw new connect_error_js_1.ConnectError(\"received compressed envelope, but do not know how to decompress\", code_js_1.Code.InvalidArgument);\n        }\n        data = await compression.decompress(data, readMaxBytes);\n        flags = flags ^ compression_js_1.compressedFlag;\n    }\n    return { data, flags };\n}\nexports.envelopeDecompress = envelopeDecompress;\n/**\n * Encode a single enveloped message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelope(flags, data) {\n    const bytes = new Uint8Array(data.length + 5);\n    bytes.set(data, 5);\n    const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    v.setUint8(0, flags); // first byte is flags\n    v.setUint32(1, data.length); // 4 bytes message length\n    return bytes;\n}\nexports.encodeEnvelope = encodeEnvelope;\n/**\n * Encode a set of enveloped messages.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction encodeEnvelopes(...envelopes) {\n    const len = envelopes.reduce((previousValue, currentValue) => previousValue + currentValue.data.length + 5, 0);\n    const bytes = new Uint8Array(len);\n    const v = new DataView(bytes.buffer);\n    let offset = 0;\n    for (const e of envelopes) {\n        v.setUint8(offset, e.flags); // first byte is flags\n        v.setUint32(offset + 1, e.data.length); // 4 bytes message length\n        bytes.set(e.data, offset + 5);\n        offset += e.data.length + 5;\n    }\n    return bytes;\n}\nexports.encodeEnvelopes = encodeEnvelopes;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compressionNegotiate = exports.compressedFlag = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * compressedFlag indicates that the data in a EnvelopedMessage is\n * compressed. It has the same meaning in the gRPC-Web, gRPC-HTTP2,\n * and Connect protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.compressedFlag = 0b00000001;\n/**\n * Validates the request encoding and determines the accepted response encoding.\n *\n * Returns the request and response compression to use. If the client requested\n * an encoding that is not available, the returned object contains an error that\n * must be used for the response.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction compressionNegotiate(available, requested, // e.g. the value of the Grpc-Encoding header\naccepted, // e.g. the value of the Grpc-Accept-Encoding header\nheaderNameAcceptEncoding // e.g. the name of the Grpc-Accept-Encoding header\n) {\n    let request = null;\n    let response = null;\n    let error = undefined;\n    if (requested !== null && requested !== \"identity\") {\n        const found = available.find((c) => c.name === requested);\n        if (found) {\n            request = found;\n        }\n        else {\n            // To comply with https://github.com/grpc/grpc/blob/master/doc/compression.md\n            // and the Connect protocol, we return code \"unimplemented\" and specify\n            // acceptable compression(s).\n            const acceptable = available.map((c) => c.name).join(\",\");\n            error = new connect_error_js_1.ConnectError(`unknown compression \"${requested}\": supported encodings are ${acceptable}`, code_js_1.Code.Unimplemented, {\n                [headerNameAcceptEncoding]: acceptable,\n            });\n        }\n    }\n    if (accepted === null || accepted === \"\") {\n        // Support asymmetric compression. This logic follows\n        // https://github.com/grpc/grpc/blob/master/doc/compression.md and common\n        // sense.\n        response = request;\n    }\n    else {\n        const acceptNames = accepted.split(\",\").map((n) => n.trim());\n        for (const name of acceptNames) {\n            const found = available.find((c) => c.name === name);\n            if (found) {\n                response = found;\n                break;\n            }\n        }\n    }\n    return { request, response, error };\n}\nexports.compressionNegotiate = compressionNegotiate;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertReadMaxBytes = exports.assertWriteMaxBytes = exports.validateReadWriteMaxBytes = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * At most, allow ~4GiB to be received or sent per message.\n * zlib used by Node.js caps maxOutputLength at this value. It also happens to\n * be the maximum theoretical message size supported by protobuf-es.\n */\nconst maxReadMaxBytes = 0xffffffff;\nconst maxWriteMaxBytes = maxReadMaxBytes;\n/**\n * The default value for the compressMinBytes option. The CPU cost of compressing\n * very small messages usually isn't worth the small reduction in network I/O, so\n * the default value is 1 kibibyte.\n */\nconst defaultCompressMinBytes = 1024;\n/**\n * Asserts that the options writeMaxBytes, readMaxBytes, and compressMinBytes\n * are within sane limits, and returns default values where no value is\n * provided.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateReadWriteMaxBytes(readMaxBytes, writeMaxBytes, compressMinBytes) {\n    writeMaxBytes !== null && writeMaxBytes !== void 0 ? writeMaxBytes : (writeMaxBytes = maxWriteMaxBytes);\n    readMaxBytes !== null && readMaxBytes !== void 0 ? readMaxBytes : (readMaxBytes = maxReadMaxBytes);\n    compressMinBytes !== null && compressMinBytes !== void 0 ? compressMinBytes : (compressMinBytes = defaultCompressMinBytes);\n    if (writeMaxBytes < 1 || writeMaxBytes > maxWriteMaxBytes) {\n        throw new connect_error_js_1.ConnectError(`writeMaxBytes ${writeMaxBytes} must be >= 1 and <= ${maxWriteMaxBytes}`, code_js_1.Code.Internal);\n    }\n    if (readMaxBytes < 1 || readMaxBytes > maxReadMaxBytes) {\n        throw new connect_error_js_1.ConnectError(`readMaxBytes ${readMaxBytes} must be >= 1 and <= ${maxReadMaxBytes}`, code_js_1.Code.Internal);\n    }\n    return {\n        readMaxBytes,\n        writeMaxBytes,\n        compressMinBytes,\n    };\n}\nexports.validateReadWriteMaxBytes = validateReadWriteMaxBytes;\n/**\n * Raise an error ResourceExhausted if more than writeMaxByte are written.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertWriteMaxBytes(writeMaxBytes, bytesWritten) {\n    if (bytesWritten > writeMaxBytes) {\n        throw new connect_error_js_1.ConnectError(`message size ${bytesWritten} is larger than configured writeMaxBytes ${writeMaxBytes}`, code_js_1.Code.ResourceExhausted);\n    }\n}\nexports.assertWriteMaxBytes = assertWriteMaxBytes;\n/**\n * Raise an error ResourceExhausted if more than readMaxBytes are read.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertReadMaxBytes(readMaxBytes, bytesRead, totalSizeKnown = false) {\n    if (bytesRead > readMaxBytes) {\n        let message = `message size is larger than configured readMaxBytes ${readMaxBytes}`;\n        if (totalSizeKnown) {\n            message = `message size ${bytesRead} is larger than configured readMaxBytes ${readMaxBytes}`;\n        }\n        throw new connect_error_js_1.ConnectError(message, code_js_1.Code.ResourceExhausted);\n    }\n}\nexports.assertReadMaxBytes = assertReadMaxBytes;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAbortSignalReason = exports.createDeadlineSignal = exports.createLinkedAbortController = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * Create an AbortController that is automatically aborted if one of the given\n * signals is aborted.\n *\n * For convenience, the linked AbortSignals can be undefined.\n *\n * If the controller or any of the signals is aborted, all event listeners are\n * removed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createLinkedAbortController(...signals) {\n    const controller = new AbortController();\n    const sa = signals\n        .filter((s) => s !== undefined)\n        .concat(controller.signal);\n    for (const signal of sa) {\n        if (signal.aborted) {\n            onAbort.apply(signal);\n            break;\n        }\n        signal.addEventListener(\"abort\", onAbort);\n    }\n    function onAbort() {\n        if (!controller.signal.aborted) {\n            controller.abort(getAbortSignalReason(this));\n        }\n        for (const signal of sa) {\n            signal.removeEventListener(\"abort\", onAbort);\n        }\n    }\n    return controller;\n}\nexports.createLinkedAbortController = createLinkedAbortController;\n/**\n * Create a deadline signal. The returned object contains an AbortSignal, but\n * also a cleanup function to stop the timer, which must be called once the\n * calling code is no longer interested in the signal.\n *\n * Ideally, we would simply use AbortSignal.timeout(), but it is not widely\n * available yet.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createDeadlineSignal(timeoutMs) {\n    const controller = new AbortController();\n    const listener = () => {\n        controller.abort(new connect_error_js_1.ConnectError(\"the operation timed out\", code_js_1.Code.DeadlineExceeded));\n    };\n    let timeoutId;\n    if (timeoutMs !== undefined) {\n        if (timeoutMs <= 0)\n            listener();\n        else\n            timeoutId = setTimeout(listener, timeoutMs);\n    }\n    return {\n        signal: controller.signal,\n        cleanup: () => clearTimeout(timeoutId),\n    };\n}\nexports.createDeadlineSignal = createDeadlineSignal;\n/**\n * Returns the reason why an AbortSignal was aborted. Returns undefined if the\n * signal has not been aborted.\n *\n * The property AbortSignal.reason is not widely available. This function\n * returns an AbortError if the signal is aborted, but reason is undefined.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction getAbortSignalReason(signal) {\n    if (!signal.aborted) {\n        return undefined;\n    }\n    if (signal.reason !== undefined) {\n        return signal.reason;\n    }\n    // AbortSignal.reason is available in Node.js v16, v18, and later,\n    // and in all browsers since early 2022.\n    const e = new Error(\"This operation was aborted\");\n    e.name = \"AbortError\";\n    return e;\n}\nexports.getAbortSignalReason = getAbortSignalReason;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFetchHandler = exports.createFetchClient = void 0;\n/**\n * Create a universal client function, a minimal abstraction of an HTTP client,\n * using the given fetch() implementation.\n */\nfunction createFetchClient(fetchFn) {\n    return async function fetchClient(request) {\n        const res = await fetchFn(universalClientRequestToFetch(request));\n        return universalClientResponseFromFetch(res);\n    };\n}\nexports.createFetchClient = createFetchClient;\n/**\n * Convert a universal handler function to a fetch handler.\n */\nfunction createFetchHandler(uHandler, options) {\n    async function handleFetch(req) {\n        const uReq = universalServerRequestFromFetch(req, options !== null && options !== void 0 ? options : {});\n        const uRes = await uHandler(uReq);\n        return universalServerResponseToFetch(uRes);\n    }\n    return Object.assign(handleFetch, uHandler);\n}\nexports.createFetchHandler = createFetchHandler;\nfunction universalClientRequestToFetch(req) {\n    const body = req.body === undefined ? null : iterableToReadableStream(req.body);\n    return new Request(req.url, {\n        method: req.method,\n        headers: req.header,\n        signal: req.signal,\n        body,\n    });\n}\nfunction universalClientResponseFromFetch(res) {\n    return {\n        status: res.status,\n        header: res.headers,\n        body: iterableFromReadableStream(res.body),\n        trailer: new Headers(),\n    };\n}\nfunction universalServerRequestFromFetch(req, options) {\n    var _a;\n    return {\n        httpVersion: (_a = options.httpVersion) !== null && _a !== void 0 ? _a : \"\",\n        method: req.method,\n        url: req.url,\n        header: req.headers,\n        body: iterableFromReadableStream(req.body),\n        signal: req.signal,\n    };\n}\nfunction universalServerResponseToFetch(res) {\n    let body = null;\n    if (res.body !== undefined) {\n        body = iterableToReadableStream(res.body);\n    }\n    return new Response(body, {\n        status: res.status,\n        headers: res.header,\n    });\n}\nfunction iterableToReadableStream(iterable) {\n    const it = iterable[Symbol.asyncIterator]();\n    return new ReadableStream({\n        async pull(controller) {\n            const r = await it.next();\n            if (r.done === true) {\n                controller.close();\n                return;\n            }\n            controller.enqueue(r.value);\n        },\n        async cancel(reason) {\n            if (it.throw) {\n                try {\n                    await it.throw(reason);\n                }\n                catch (_a) {\n                    // iterator.throw on a generator function rethrows unless the\n                    // body catches and swallows.\n                }\n            }\n        },\n    });\n}\nfunction iterableFromReadableStream(body) {\n    return {\n        [Symbol.asyncIterator]() {\n            const reader = body === null || body === void 0 ? void 0 : body.getReader();\n            return {\n                async next() {\n                    if (reader !== undefined) {\n                        const r = await reader.read();\n                        if (r.done) {\n                            return {\n                                done: true,\n                                value: undefined,\n                            };\n                        }\n                        return r;\n                    }\n                    return {\n                        done: true,\n                        value: undefined,\n                    };\n                },\n                async throw(e) {\n                    if (reader !== undefined) {\n                        await reader.cancel(e);\n                    }\n                    return {\n                        done: true,\n                        value: undefined,\n                    };\n                },\n            };\n        },\n    };\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runStreamingCall = exports.runUnaryCall = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst signals_js_1 = require(\"./signals.js\");\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */\nfunction runUnaryCall(opt) {\n    const next = applyInterceptors(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { signal });\n    return next(req).then((res) => {\n        done();\n        return res;\n    }, abort);\n}\nexports.runUnaryCall = runUnaryCall;\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */\nfunction runStreamingCall(opt) {\n    const next = applyInterceptors(opt.next, opt.interceptors);\n    const [signal, abort, done] = setupSignal(opt);\n    const req = Object.assign(Object.assign({}, opt.req), { signal });\n    return next(req).then((res) => {\n        return Object.assign(Object.assign({}, res), { message: {\n                [Symbol.asyncIterator]() {\n                    const it = res.message[Symbol.asyncIterator]();\n                    const w = {\n                        next() {\n                            return it.next().then((r) => {\n                                if (r.done == true) {\n                                    done();\n                                }\n                                return r;\n                            }, abort);\n                        },\n                    };\n                    if (it.throw !== undefined) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- can't handle mutated object sensibly\n                        w.throw = (e) => it.throw(e);\n                    }\n                    if (it.return !== undefined) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion,@typescript-eslint/no-explicit-any -- can't handle mutated object sensibly\n                        w.return = (value) => it.return(value);\n                    }\n                    return w;\n                },\n            } });\n    }, abort);\n}\nexports.runStreamingCall = runStreamingCall;\n/**\n * Create an AbortSignal for Transport implementations. The signal is available\n * in UnaryRequest and StreamingRequest, and is triggered when the call is\n * aborted (via a timeout or explicit cancellation), errored (e.g. when reading\n * an error from the server from the wire), or finished successfully.\n *\n * Transport implementations can pass the signal to HTTP clients to ensure that\n * there are no unused connections leak.\n *\n * Returns a tuple:\n * [0]: The signal, which is also aborted if the optional deadline is reached.\n * [1]: Function to call if the Transport encountered an error.\n * [2]: Function to call if the Transport finished without an error.\n */\nfunction setupSignal(opt) {\n    const { signal, cleanup } = (0, signals_js_1.createDeadlineSignal)(opt.timeoutMs);\n    const controller = (0, signals_js_1.createLinkedAbortController)(opt.signal, signal);\n    return [\n        controller.signal,\n        function abort(reason) {\n            // We peek at the deadline signal because fetch() will throw an error on\n            // abort that discards the signal reason.\n            const e = connect_error_js_1.ConnectError.from(signal.aborted ? (0, signals_js_1.getAbortSignalReason)(signal) : reason);\n            controller.abort(e);\n            cleanup();\n            return Promise.reject(e);\n        },\n        function done() {\n            cleanup();\n            controller.abort();\n        },\n    ];\n}\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    var _a;\n    return ((_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n), next // eslint-disable-line @typescript-eslint/no-explicit-any\n    )) !== null && _a !== void 0 ? _a : next);\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createJsonSerialization = exports.createBinarySerialization = exports.limitSerialization = exports.createClientMethodSerializers = exports.createMethodSerializationLookup = exports.getJsonOptions = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\nconst limit_io_js_1 = require(\"./limit-io.js\");\n/**\n * Sets default JSON serialization options for connect-es.\n *\n * With standard protobuf JSON serialization, unknown JSON fields are\n * rejected by default. In connect-es, unknown JSON fields are ignored\n * by default.\n */\nfunction getJsonOptions(options) {\n    var _a;\n    const o = Object.assign({}, options);\n    (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : (o.ignoreUnknownFields = true);\n    return o;\n}\nexports.getJsonOptions = getJsonOptions;\n/**\n * Create an object that provides convenient access to request and response\n * message serialization for a given method.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createMethodSerializationLookup(method, binaryOptions, jsonOptions, limitOptions) {\n    const inputBinary = limitSerialization(createBinarySerialization(method.I, binaryOptions), limitOptions);\n    const inputJson = limitSerialization(createJsonSerialization(method.I, jsonOptions), limitOptions);\n    const outputBinary = limitSerialization(createBinarySerialization(method.O, binaryOptions), limitOptions);\n    const outputJson = limitSerialization(createJsonSerialization(method.O, jsonOptions), limitOptions);\n    return {\n        getI(useBinaryFormat) {\n            return useBinaryFormat ? inputBinary : inputJson;\n        },\n        getO(useBinaryFormat) {\n            return useBinaryFormat ? outputBinary : outputJson;\n        },\n    };\n}\nexports.createMethodSerializationLookup = createMethodSerializationLookup;\n/**\n * Returns functions to normalize and serialize the input message\n * of an RPC, and to parse the output message of an RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n    function normalize(input) {\n        return input instanceof method.I ? input : new method.I(input);\n    }\n    const input = useBinaryFormat\n        ? createBinarySerialization(method.I, binaryOptions)\n        : createJsonSerialization(method.I, jsonOptions);\n    const output = useBinaryFormat\n        ? createBinarySerialization(method.O, binaryOptions)\n        : createJsonSerialization(method.O, jsonOptions);\n    return { normalize, parse: output.parse, serialize: input.serialize };\n}\nexports.createClientMethodSerializers = createClientMethodSerializers;\n/**\n * Apply I/O limits to a Serialization object, returning a new object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction limitSerialization(serialization, limitOptions) {\n    return {\n        serialize(data) {\n            const bytes = serialization.serialize(data);\n            (0, limit_io_js_1.assertWriteMaxBytes)(limitOptions.writeMaxBytes, bytes.byteLength);\n            return bytes;\n        },\n        parse(data) {\n            (0, limit_io_js_1.assertReadMaxBytes)(limitOptions.readMaxBytes, data.byteLength, true);\n            return serialization.parse(data);\n        },\n    };\n}\nexports.limitSerialization = limitSerialization;\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf binary format.\n */\nfunction createBinarySerialization(messageType, options) {\n    return {\n        parse(data) {\n            try {\n                return messageType.fromBinary(data, options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new connect_error_js_1.ConnectError(`parse binary: ${m}`, code_js_1.Code.InvalidArgument);\n            }\n        },\n        serialize(data) {\n            try {\n                return data.toBinary(options);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new connect_error_js_1.ConnectError(`serialize binary: ${m}`, code_js_1.Code.Internal);\n            }\n        },\n    };\n}\nexports.createBinarySerialization = createBinarySerialization;\n/**\n * Creates a Serialization object for serializing the given protobuf message\n * with the protobuf canonical JSON encoding.\n *\n * By default, unknown fields are ignored.\n */\nfunction createJsonSerialization(messageType, options) {\n    var _a, _b;\n    const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n    const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n    const o = getJsonOptions(options);\n    return {\n        parse(data) {\n            try {\n                const json = textDecoder.decode(data);\n                return messageType.fromJsonString(json, o);\n            }\n            catch (e) {\n                throw connect_error_js_1.ConnectError.from(e, code_js_1.Code.InvalidArgument);\n            }\n        },\n        serialize(data) {\n            try {\n                const json = data.toJsonString(o);\n                return textEncoder.encode(json);\n            }\n            catch (e) {\n                throw connect_error_js_1.ConnectError.from(e, code_js_1.Code.Internal);\n            }\n        },\n    };\n}\nexports.createJsonSerialization = createJsonSerialization;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentTypeMatcher = void 0;\nconst contentTypeMatcherCacheSize = 1024;\n/**\n * Create a function that returns true if the given mime type is supported.\n * A mime type is supported when one of the regular expressions match.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction contentTypeMatcher(...supported) {\n    const cache = new Map();\n    const source = supported.reduce((previousValue, currentValue) => previousValue.concat(\"supported\" in currentValue ? currentValue.supported : currentValue), []);\n    function match(contentType) {\n        if (contentType === null || contentType.length == 0) {\n            return false;\n        }\n        const cached = cache.get(contentType);\n        if (cached !== undefined) {\n            return cached;\n        }\n        const ok = source.some((re) => re.test(contentType));\n        if (cache.size < contentTypeMatcherCacheSize) {\n            cache.set(contentType, ok);\n        }\n        return ok;\n    }\n    match.supported = source;\n    return match;\n}\nexports.contentTypeMatcher = contentTypeMatcher;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformInvokeImplementation = exports.invokeUnaryImplementation = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * Invoke a user-provided implementation of a unary RPC. Returns a normalized\n * output message.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nasync function invokeUnaryImplementation(spec, context, input) {\n    const output = await spec.impl(input, context);\n    return normalizeOutput(spec, output);\n}\nexports.invokeUnaryImplementation = invokeUnaryImplementation;\n/**\n * Return an AsyncIterableTransform that invokes a user-provided implementation,\n * giving it input from an asynchronous iterable, and returning its output as an\n * asynchronous iterable.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformInvokeImplementation(spec, context) {\n    switch (spec.kind) {\n        case protobuf_1.MethodKind.Unary:\n            return function unary(input) {\n                return __asyncGenerator(this, arguments, function* unary_1() {\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: missing input message for unary method\", code_js_1.Code.InvalidArgument);\n                    }\n                    yield yield __await(normalizeOutput(spec, yield __await(spec.impl(input1.value, context))));\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: received extra input message for unary method\", code_js_1.Code.InvalidArgument);\n                    }\n                });\n            };\n        case protobuf_1.MethodKind.ServerStreaming: {\n            return function serverStreaming(input) {\n                return __asyncGenerator(this, arguments, function* serverStreaming_1() {\n                    var _a, e_1, _b, _c;\n                    const inputIt = input[Symbol.asyncIterator]();\n                    const input1 = yield __await(inputIt.next());\n                    if (input1.done === true) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: missing input message for server-streaming method\", code_js_1.Code.InvalidArgument);\n                    }\n                    try {\n                        for (var _d = true, _e = __asyncValues(spec.impl(input1.value, context)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a;) {\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const o = _c;\n                                yield yield __await(normalizeOutput(spec, o));\n                            }\n                            finally {\n                                _d = true;\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    const input2 = yield __await(inputIt.next());\n                    if (input2.done !== true) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: received extra input message for server-streaming method\", code_js_1.Code.InvalidArgument);\n                    }\n                });\n            };\n        }\n        case protobuf_1.MethodKind.ClientStreaming: {\n            return function clientStreaming(input) {\n                return __asyncGenerator(this, arguments, function* clientStreaming_1() {\n                    yield yield __await(normalizeOutput(spec, yield __await(spec.impl(input, context))));\n                });\n            };\n        }\n        case protobuf_1.MethodKind.BiDiStreaming:\n            return function biDiStreaming(input) {\n                return __asyncGenerator(this, arguments, function* biDiStreaming_1() {\n                    var _a, e_2, _b, _c;\n                    try {\n                        for (var _d = true, _e = __asyncValues(spec.impl(input, context)), _f; _f = yield __await(_e.next()), _a = _f.done, !_a;) {\n                            _c = _f.value;\n                            _d = false;\n                            try {\n                                const o = _c;\n                                yield yield __await(normalizeOutput(spec, o));\n                            }\n                            finally {\n                                _d = true;\n                            }\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield __await(_b.call(_e));\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                });\n            };\n    }\n}\nexports.transformInvokeImplementation = transformInvokeImplementation;\nfunction normalizeOutput(spec, message) {\n    if (message instanceof protobuf_1.Message) {\n        return message;\n    }\n    try {\n        return new spec.method.O(message);\n    }\n    catch (e) {\n        throw new connect_error_js_1.ConnectError(`failed to normalize message ${spec.method.O.typeName}`, code_js_1.Code.Internal, undefined, undefined, e);\n    }\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uResponseVersionNotSupported = exports.uResponseMethodNotAllowed = exports.uResponseUnsupportedMediaType = exports.uResponseNotFound = exports.uResponseOk = exports.assertByteStreamRequest = void 0;\n/**\n * Assert that the given UniversalServerRequest has a byte stream body, not\n * a JSON value.\n *\n * We accept a JSON object or a byte stream in server requests.\n * In practice, only Connect unary handlers will receive a parse\n * JSON object. Other call-sites can use this assertion to narrow\n * the union type. A failure in such a call-sites indicates that\n * the contract between a server framework and the connect-node \\\n * handler is broken.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction assertByteStreamRequest(req) {\n    if (typeof req.body == \"object\" &&\n        req.body !== null &&\n        Symbol.asyncIterator in req.body) {\n        return;\n    }\n    throw new Error(\"byte stream required, but received JSON\");\n}\nexports.assertByteStreamRequest = assertByteStreamRequest;\n/**\n * HTTP 200 OK\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.uResponseOk = {\n    status: 200,\n};\n/**\n * HTTP 404 Not Found\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.uResponseNotFound = {\n    status: 404,\n};\n/**\n * HTTP 415 Unsupported Media Type\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.uResponseUnsupportedMediaType = {\n    status: 415,\n};\n/**\n * HTTP 405 Method Not Allowed\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.uResponseMethodNotAllowed = {\n    status: 405,\n};\n/**\n * HTTP 505 Version Not Supported\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.uResponseVersionNotSupported = {\n    status: 505,\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.negotiateProtocol = exports.createUniversalMethodHandler = exports.createUniversalServiceHandlers = exports.validateUniversalHandlerOptions = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst universal_js_1 = require(\"./universal.js\");\nconst content_type_matcher_js_1 = require(\"./content-type-matcher.js\");\nconst limit_io_js_1 = require(\"./limit-io.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * Asserts that the options are within sane limits, and returns default values\n * where no value is provided.\n *\n * Note that this function does not set default values for `acceptCompression`.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateUniversalHandlerOptions(opt) {\n    var _a, _b;\n    opt !== null && opt !== void 0 ? opt : (opt = {});\n    const acceptCompression = opt.acceptCompression\n        ? [...opt.acceptCompression]\n        : [];\n    const requireConnectProtocolHeader = (_a = opt.requireConnectProtocolHeader) !== null && _a !== void 0 ? _a : false;\n    const maxTimeoutMs = (_b = opt.maxTimeoutMs) !== null && _b !== void 0 ? _b : Number.MAX_SAFE_INTEGER;\n    return Object.assign(Object.assign({ acceptCompression }, (0, limit_io_js_1.validateReadWriteMaxBytes)(opt.readMaxBytes, opt.writeMaxBytes, opt.compressMinBytes)), { jsonOptions: opt.jsonOptions, binaryOptions: opt.binaryOptions, maxTimeoutMs, shutdownSignal: opt.shutdownSignal, requireConnectProtocolHeader });\n}\nexports.validateUniversalHandlerOptions = validateUniversalHandlerOptions;\n/**\n * For the given service implementation, return a universal handler for each\n * RPC. The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalServiceHandlers(spec, protocols) {\n    return Object.entries(spec.methods).map(([, implSpec]) => createUniversalMethodHandler(implSpec, protocols));\n}\nexports.createUniversalServiceHandlers = createUniversalServiceHandlers;\n/**\n * Return a universal handler for the given RPC implementation.\n * The handler serves the given protocols.\n *\n * At least one protocol is required.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createUniversalMethodHandler(spec, protocols) {\n    return negotiateProtocol(protocols.map((f) => f(spec)));\n}\nexports.createUniversalMethodHandler = createUniversalMethodHandler;\n/**\n * Create a universal handler that negotiates the protocol.\n *\n * This functions takes one or more handlers - all for the same RPC, but for\n * different protocols - and returns a single handler that looks at the\n * Content-Type header and the HTTP verb of the incoming request to select\n * the appropriate protocol-specific handler.\n *\n * Raises an error if no protocol handlers were provided, or if they do not\n * handle exactly the same RPC.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction negotiateProtocol(protocolHandlers) {\n    if (protocolHandlers.length == 0) {\n        throw new connect_error_js_1.ConnectError(\"at least one protocol is required\", code_js_1.Code.Internal);\n    }\n    const service = protocolHandlers[0].service;\n    const method = protocolHandlers[0].method;\n    const requestPath = protocolHandlers[0].requestPath;\n    if (protocolHandlers.some((h) => h.service !== service || h.method !== method)) {\n        throw new connect_error_js_1.ConnectError(\"cannot negotiate protocol for different RPCs\", code_js_1.Code.Internal);\n    }\n    if (protocolHandlers.some((h) => h.requestPath !== requestPath)) {\n        throw new connect_error_js_1.ConnectError(\"cannot negotiate protocol for different requestPaths\", code_js_1.Code.Internal);\n    }\n    async function protocolNegotiatingHandler(request) {\n        var _a;\n        if (method.kind == protobuf_1.MethodKind.BiDiStreaming &&\n            request.httpVersion.startsWith(\"1.\")) {\n            return Object.assign(Object.assign({}, universal_js_1.uResponseVersionNotSupported), { \n                // Clients coded to expect full-duplex connections may hang if they've\n                // mistakenly negotiated HTTP/1.1. To unblock them, we must close the\n                // underlying TCP connection.\n                header: new Headers({ Connection: \"close\" }) });\n        }\n        const contentType = (_a = request.header.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n        const matchingMethod = protocolHandlers.filter((h) => h.allowedMethods.includes(request.method));\n        if (matchingMethod.length == 0) {\n            return universal_js_1.uResponseMethodNotAllowed;\n        }\n        // If Content-Type is unset but only one handler matches, use it.\n        if (matchingMethod.length == 1 && contentType === \"\") {\n            const onlyMatch = matchingMethod[0];\n            return onlyMatch(request);\n        }\n        const matchingContentTypes = matchingMethod.filter((h) => h.supportedContentType(contentType));\n        if (matchingContentTypes.length == 0) {\n            return universal_js_1.uResponseUnsupportedMediaType;\n        }\n        const firstMatch = matchingContentTypes[0];\n        return firstMatch(request);\n    }\n    return Object.assign(protocolNegotiatingHandler, {\n        service,\n        method,\n        requestPath,\n        supportedContentType: (0, content_type_matcher_js_1.contentTypeMatcher)(...protocolHandlers.map((h) => h.supportedContentType)),\n        protocolNames: protocolHandlers\n            .flatMap((h) => h.protocolNames)\n            .filter((value, index, array) => array.indexOf(value) === index),\n        allowedMethods: protocolHandlers\n            .flatMap((h) => h.allowedMethods)\n            .filter((value, index, array) => array.indexOf(value) === index),\n    });\n}\nexports.negotiateProtocol = negotiateProtocol;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codeToString = exports.codeFromString = exports.protocolVersion = exports.transformConnectPostToGetRequest = exports.trailerDemux = exports.trailerMux = exports.validateResponseWithCompression = exports.validateResponse = exports.parseTimeout = exports.contentTypeStreamRegExp = exports.contentTypeUnaryRegExp = exports.contentTypeRegExp = exports.contentTypeStreamJson = exports.contentTypeStreamProto = exports.contentTypeUnaryJson = exports.contentTypeUnaryProto = exports.parseContentType = exports.errorToJsonBytes = exports.errorToJson = exports.errorFromJsonBytes = exports.errorFromJson = exports.createEndStreamSerialization = exports.endStreamFlag = exports.endStreamFromJson = exports.endStreamToJson = exports.requestHeaderWithCompression = exports.requestHeader = exports.codeToHttpStatus = exports.codeFromHttpStatus = exports.createTransport = exports.createHandlerFactory = void 0;\nvar handler_factory_js_1 = require(\"./handler-factory.js\");\nObject.defineProperty(exports, \"createHandlerFactory\", { enumerable: true, get: function () { return handler_factory_js_1.createHandlerFactory; } });\nvar transport_js_1 = require(\"./transport.js\");\nObject.defineProperty(exports, \"createTransport\", { enumerable: true, get: function () { return transport_js_1.createTransport; } });\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\nvar http_status_js_1 = require(\"./http-status.js\");\nObject.defineProperty(exports, \"codeFromHttpStatus\", { enumerable: true, get: function () { return http_status_js_1.codeFromHttpStatus; } });\nObject.defineProperty(exports, \"codeToHttpStatus\", { enumerable: true, get: function () { return http_status_js_1.codeToHttpStatus; } });\nvar request_header_js_1 = require(\"./request-header.js\");\nObject.defineProperty(exports, \"requestHeader\", { enumerable: true, get: function () { return request_header_js_1.requestHeader; } });\nObject.defineProperty(exports, \"requestHeaderWithCompression\", { enumerable: true, get: function () { return request_header_js_1.requestHeaderWithCompression; } });\nvar end_stream_js_1 = require(\"./end-stream.js\");\nObject.defineProperty(exports, \"endStreamToJson\", { enumerable: true, get: function () { return end_stream_js_1.endStreamToJson; } });\nObject.defineProperty(exports, \"endStreamFromJson\", { enumerable: true, get: function () { return end_stream_js_1.endStreamFromJson; } });\nObject.defineProperty(exports, \"endStreamFlag\", { enumerable: true, get: function () { return end_stream_js_1.endStreamFlag; } });\nObject.defineProperty(exports, \"createEndStreamSerialization\", { enumerable: true, get: function () { return end_stream_js_1.createEndStreamSerialization; } });\nvar error_json_js_1 = require(\"./error-json.js\");\nObject.defineProperty(exports, \"errorFromJson\", { enumerable: true, get: function () { return error_json_js_1.errorFromJson; } });\nObject.defineProperty(exports, \"errorFromJsonBytes\", { enumerable: true, get: function () { return error_json_js_1.errorFromJsonBytes; } });\nObject.defineProperty(exports, \"errorToJson\", { enumerable: true, get: function () { return error_json_js_1.errorToJson; } });\nObject.defineProperty(exports, \"errorToJsonBytes\", { enumerable: true, get: function () { return error_json_js_1.errorToJsonBytes; } });\nvar content_type_js_1 = require(\"./content-type.js\");\nObject.defineProperty(exports, \"parseContentType\", { enumerable: true, get: function () { return content_type_js_1.parseContentType; } });\nObject.defineProperty(exports, \"contentTypeUnaryProto\", { enumerable: true, get: function () { return content_type_js_1.contentTypeUnaryProto; } });\nObject.defineProperty(exports, \"contentTypeUnaryJson\", { enumerable: true, get: function () { return content_type_js_1.contentTypeUnaryJson; } });\nObject.defineProperty(exports, \"contentTypeStreamProto\", { enumerable: true, get: function () { return content_type_js_1.contentTypeStreamProto; } });\nObject.defineProperty(exports, \"contentTypeStreamJson\", { enumerable: true, get: function () { return content_type_js_1.contentTypeStreamJson; } });\nObject.defineProperty(exports, \"contentTypeRegExp\", { enumerable: true, get: function () { return content_type_js_1.contentTypeRegExp; } });\nObject.defineProperty(exports, \"contentTypeUnaryRegExp\", { enumerable: true, get: function () { return content_type_js_1.contentTypeUnaryRegExp; } });\nObject.defineProperty(exports, \"contentTypeStreamRegExp\", { enumerable: true, get: function () { return content_type_js_1.contentTypeStreamRegExp; } });\nvar parse_timeout_js_1 = require(\"./parse-timeout.js\");\nObject.defineProperty(exports, \"parseTimeout\", { enumerable: true, get: function () { return parse_timeout_js_1.parseTimeout; } });\nvar validate_response_js_1 = require(\"./validate-response.js\");\nObject.defineProperty(exports, \"validateResponse\", { enumerable: true, get: function () { return validate_response_js_1.validateResponse; } });\nObject.defineProperty(exports, \"validateResponseWithCompression\", { enumerable: true, get: function () { return validate_response_js_1.validateResponseWithCompression; } });\nvar trailer_mux_js_1 = require(\"./trailer-mux.js\");\nObject.defineProperty(exports, \"trailerMux\", { enumerable: true, get: function () { return trailer_mux_js_1.trailerMux; } });\nObject.defineProperty(exports, \"trailerDemux\", { enumerable: true, get: function () { return trailer_mux_js_1.trailerDemux; } });\n__exportStar(require(\"./headers.js\"), exports);\nvar get_request_js_1 = require(\"./get-request.js\");\nObject.defineProperty(exports, \"transformConnectPostToGetRequest\", { enumerable: true, get: function () { return get_request_js_1.transformConnectPostToGetRequest; } });\nvar version_js_1 = require(\"./version.js\");\nObject.defineProperty(exports, \"protocolVersion\", { enumerable: true, get: function () { return version_js_1.protocolVersion; } });\nvar code_string_js_1 = require(\"./code-string.js\");\nObject.defineProperty(exports, \"codeFromString\", { enumerable: true, get: function () { return code_string_js_1.codeFromString; } });\nvar code_string_js_2 = require(\"./code-string.js\");\nObject.defineProperty(exports, \"codeToString\", { enumerable: true, get: function () { return code_string_js_2.codeToString; } });\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHandlerFactory = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst implementation_js_1 = require(\"../implementation.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\nconst end_stream_js_1 = require(\"./end-stream.js\");\nconst error_json_js_1 = require(\"./error-json.js\");\nconst headers_js_1 = require(\"./headers.js\");\nconst http_status_js_1 = require(\"./http-status.js\");\nconst parse_timeout_js_1 = require(\"./parse-timeout.js\");\nconst query_params_js_1 = require(\"./query-params.js\");\nconst trailer_mux_js_1 = require(\"./trailer-mux.js\");\nconst version_js_1 = require(\"./version.js\");\nconst compression_js_1 = require(\"../protocol/compression.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\nconst universal_handler_js_1 = require(\"../protocol/universal-handler.js\");\nconst universal_js_1 = require(\"../protocol/universal.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst content_type_matcher_js_1 = require(\"../protocol/content-type-matcher.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst invoke_implementation_js_1 = require(\"../protocol/invoke-implementation.js\");\nconst protocolName = \"connect\";\nconst methodPost = \"POST\";\nconst methodGet = \"GET\";\n/**\n * Create a factory that creates Connect handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0, universal_handler_js_1.validateUniversalHandlerOptions)(options);\n    const endStreamSerialization = (0, end_stream_js_1.createEndStreamSerialization)(opt.jsonOptions);\n    function fact(spec) {\n        let h;\n        let contentTypeRegExp;\n        const serialization = (0, serialization_js_1.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n        switch (spec.kind) {\n            case protobuf_1.MethodKind.Unary:\n                contentTypeRegExp = content_type_js_1.contentTypeUnaryRegExp;\n                h = createUnaryHandler(opt, spec, serialization);\n                break;\n            default:\n                contentTypeRegExp = content_type_js_1.contentTypeStreamRegExp;\n                h = createStreamHandler(opt, spec, serialization, endStreamSerialization);\n                break;\n        }\n        const allowedMethods = [methodPost];\n        if (spec.method.idempotency === protobuf_1.MethodIdempotency.NoSideEffects) {\n            allowedMethods.push(methodGet);\n        }\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            supportedContentType: (0, content_type_matcher_js_1.contentTypeMatcher)(contentTypeRegExp),\n            allowedMethods,\n            requestPath: (0, create_method_url_js_1.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nexports.createHandlerFactory = createHandlerFactory;\nfunction createUnaryHandler(opt, spec, serialization) {\n    return async function handle(req) {\n        const isGet = req.method == methodGet;\n        if (isGet && spec.method.idempotency != protobuf_1.MethodIdempotency.NoSideEffects) {\n            return universal_js_1.uResponseMethodNotAllowed;\n        }\n        const queryParams = new URL(req.url).searchParams;\n        const compressionRequested = isGet\n            ? queryParams.get(query_params_js_1.paramCompression)\n            : req.header.get(headers_js_1.headerUnaryEncoding);\n        const type = isGet\n            ? (0, content_type_js_1.parseEncodingQuery)(queryParams.get(query_params_js_1.paramEncoding))\n            : (0, content_type_js_1.parseContentType)(req.header.get(headers_js_1.headerContentType));\n        if (type == undefined || type.stream) {\n            return universal_js_1.uResponseUnsupportedMediaType;\n        }\n        const timeout = (0, parse_timeout_js_1.parseTimeout)(req.header.get(headers_js_1.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, implementation_js_1.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, responseHeader: {\n                [headers_js_1.headerContentType]: type.binary\n                    ? content_type_js_1.contentTypeUnaryProto\n                    : content_type_js_1.contentTypeUnaryJson,\n            } }));\n        const compression = (0, compression_js_1.compressionNegotiate)(opt.acceptCompression, compressionRequested, req.header.get(headers_js_1.headerUnaryAcceptEncoding), headers_js_1.headerUnaryAcceptEncoding);\n        let status = universal_js_1.uResponseOk.status;\n        let body;\n        try {\n            if (opt.requireConnectProtocolHeader) {\n                if (isGet) {\n                    (0, version_js_1.requireProtocolVersionParam)(queryParams);\n                }\n                else {\n                    (0, version_js_1.requireProtocolVersionHeader)(req.header);\n                }\n            }\n            // raise compression error to serialize it as a error response\n            if (compression.error) {\n                throw compression.error;\n            }\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error) {\n                throw timeout.error;\n            }\n            let reqBody;\n            if (isGet) {\n                reqBody = await readUnaryMessageFromQuery(opt.readMaxBytes, compression.request, queryParams);\n            }\n            else {\n                reqBody = await readUnaryMessageFromBody(opt.readMaxBytes, compression.request, req);\n            }\n            const input = parseUnaryMessage(spec.method, type.binary, serialization, reqBody);\n            const output = await (0, invoke_implementation_js_1.invokeUnaryImplementation)(spec, context, input);\n            body = serialization.getO(type.binary).serialize(output);\n        }\n        catch (e) {\n            let error;\n            if (e instanceof connect_error_js_1.ConnectError) {\n                error = e;\n            }\n            else {\n                error = new connect_error_js_1.ConnectError(\"internal error\", code_js_1.Code.Internal, undefined, undefined, e);\n            }\n            status = (0, http_status_js_1.codeToHttpStatus)(error.code);\n            context.responseHeader.set(headers_js_1.headerContentType, content_type_js_1.contentTypeUnaryJson);\n            error.metadata.forEach((value, key) => {\n                context.responseHeader.set(key, value);\n            });\n            body = (0, error_json_js_1.errorToJsonBytes)(error, opt.jsonOptions);\n        }\n        finally {\n            context.abort();\n        }\n        if (compression.response && body.byteLength >= opt.compressMinBytes) {\n            body = await compression.response.compress(body);\n            context.responseHeader.set(headers_js_1.headerUnaryEncoding, compression.response.name);\n        }\n        const header = (0, trailer_mux_js_1.trailerMux)(context.responseHeader, context.responseTrailer);\n        header.set(headers_js_1.headerUnaryContentLength, body.byteLength.toString(10));\n        return {\n            status,\n            body: (0, async_iterable_js_1.createAsyncIterable)([body]),\n            header,\n        };\n    };\n}\nasync function readUnaryMessageFromBody(readMaxBytes, compression, request) {\n    if (typeof request.body == \"object\" &&\n        request.body !== null &&\n        Symbol.asyncIterator in request.body) {\n        let reqBytes = await (0, async_iterable_js_1.readAllBytes)(request.body, readMaxBytes, request.header.get(headers_js_1.headerUnaryContentLength));\n        if (compression) {\n            reqBytes = await compression.decompress(reqBytes, readMaxBytes);\n        }\n        return reqBytes;\n    }\n    return request.body;\n}\nasync function readUnaryMessageFromQuery(readMaxBytes, compression, queryParams) {\n    var _a;\n    const base64 = queryParams.get(query_params_js_1.paramBase64);\n    const message = (_a = queryParams.get(query_params_js_1.paramMessage)) !== null && _a !== void 0 ? _a : \"\";\n    let decoded;\n    if (base64 === \"1\") {\n        decoded = protobuf_1.protoBase64.dec(message);\n    }\n    else {\n        decoded = new TextEncoder().encode(message);\n    }\n    if (compression) {\n        decoded = await compression.decompress(decoded, readMaxBytes);\n    }\n    return decoded;\n}\nfunction parseUnaryMessage(method, useBinaryFormat, serialization, input) {\n    if (input instanceof Uint8Array) {\n        return serialization.getI(useBinaryFormat).parse(input);\n    }\n    if (useBinaryFormat) {\n        throw new connect_error_js_1.ConnectError(\"received parsed JSON request body, but content-type indicates binary format\", code_js_1.Code.Internal);\n    }\n    try {\n        return method.I.fromJson(input);\n    }\n    catch (e) {\n        throw connect_error_js_1.ConnectError.from(e, code_js_1.Code.InvalidArgument);\n    }\n}\nfunction createStreamHandler(opt, spec, serialization, endStreamSerialization) {\n    return async function handle(req) {\n        (0, universal_js_1.assertByteStreamRequest)(req);\n        const type = (0, content_type_js_1.parseContentType)(req.header.get(headers_js_1.headerContentType));\n        if (type == undefined || !type.stream) {\n            return universal_js_1.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return universal_js_1.uResponseMethodNotAllowed;\n        }\n        const timeout = (0, parse_timeout_js_1.parseTimeout)(req.header.get(headers_js_1.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, implementation_js_1.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, responseHeader: {\n                [headers_js_1.headerContentType]: type.binary\n                    ? content_type_js_1.contentTypeStreamProto\n                    : content_type_js_1.contentTypeStreamJson,\n            } }));\n        const compression = (0, compression_js_1.compressionNegotiate)(opt.acceptCompression, req.header.get(headers_js_1.headerStreamEncoding), req.header.get(headers_js_1.headerStreamAcceptEncoding), headers_js_1.headerStreamAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(headers_js_1.headerStreamEncoding, compression.response.name);\n        }\n        const outputIt = (0, async_iterable_js_1.pipe)(req.body, (0, async_iterable_js_1.transformPrepend)(() => {\n            if (opt.requireConnectProtocolHeader) {\n                (0, version_js_1.requireProtocolVersionHeader)(req.header);\n            }\n            // raise compression error to serialize it as the end stream response\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getI(type.binary), end_stream_js_1.endStreamFlag\n        // if we set `null` here, an end-stream-message in the request\n        // raises an error, but we want to be lenient\n        ), (0, invoke_implementation_js_1.transformInvokeImplementation)(spec, context), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, async_iterable_js_1.transformCatchFinally)((e) => {\n            context.abort();\n            const end = {\n                metadata: context.responseTrailer,\n            };\n            if (e instanceof connect_error_js_1.ConnectError) {\n                end.error = e;\n            }\n            else if (e !== undefined) {\n                end.error = new connect_error_js_1.ConnectError(\"internal error\", code_js_1.Code.Internal, undefined, undefined, e);\n            }\n            return {\n                flags: end_stream_js_1.endStreamFlag,\n                data: endStreamSerialization.serialize(end),\n            };\n        }), (0, async_iterable_js_1.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)());\n        return Object.assign(Object.assign({}, universal_js_1.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, async_iterable_js_1.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createServiceImplSpec = exports.createMethodImplSpec = exports.createHandlerContext = void 0;\nconst connect_error_js_1 = require(\"./connect-error.js\");\nconst code_js_1 = require(\"./code.js\");\nconst signals_js_1 = require(\"./protocol/signals.js\");\n/**\n * Create a new HandlerContext.\n *\n * The context is usually automatically created by handlers, but if a service\n * implementation is used in unit tests, this function can be used to create\n * a context.\n */\nfunction createHandlerContext(init) {\n    let timeoutMs;\n    if (init.timeoutMs !== undefined) {\n        const date = new Date(Date.now() + init.timeoutMs);\n        timeoutMs = () => date.getTime() - Date.now();\n    }\n    else {\n        timeoutMs = () => undefined;\n    }\n    const deadline = (0, signals_js_1.createDeadlineSignal)(init.timeoutMs);\n    const abortController = (0, signals_js_1.createLinkedAbortController)(deadline.signal, init.requestSignal, init.shutdownSignal);\n    return Object.assign(Object.assign({}, init), { signal: abortController.signal, timeoutMs, requestHeader: new Headers(init.requestHeader), responseHeader: new Headers(init.responseHeader), responseTrailer: new Headers(init.responseTrailer), abort(reason) {\n            deadline.cleanup();\n            abortController.abort(reason);\n        } });\n}\nexports.createHandlerContext = createHandlerContext;\n/**\n * Create an MethodImplSpec - a user-provided implementation for a method,\n * wrapped in a discriminated union type along with service and method metadata.\n */\nfunction createMethodImplSpec(service, method, impl) {\n    return {\n        kind: method.kind,\n        service,\n        method,\n        impl,\n    };\n}\nexports.createMethodImplSpec = createMethodImplSpec;\n/**\n * Create an ServiceImplSpec - a user-provided service implementation wrapped\n * with metadata.\n */\nfunction createServiceImplSpec(service, impl) {\n    const s = { service, methods: {} };\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        let fn = impl[localName];\n        if (typeof fn == \"function\") {\n            fn = fn.bind(impl);\n        }\n        else {\n            const message = `${service.typeName}.${methodInfo.name} is not implemented`;\n            fn = function unimplemented() {\n                throw new connect_error_js_1.ConnectError(message, code_js_1.Code.Unimplemented);\n            };\n        }\n        s.methods[localName] = createMethodImplSpec(service, methodInfo, fn);\n    }\n    return s;\n}\nexports.createServiceImplSpec = createServiceImplSpec;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEncodingQuery = exports.parseContentType = exports.contentTypeStreamJson = exports.contentTypeStreamProto = exports.contentTypeUnaryJson = exports.contentTypeUnaryProto = exports.contentTypeStreamRegExp = exports.contentTypeUnaryRegExp = exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid Connect Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.contentTypeRegExp = /^application\\/(connect\\+)?(?:(json)(?:; ?charset=utf-?8)?|(proto))$/i;\n/**\n * Regular Expression that matches a Connect unary Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.contentTypeUnaryRegExp = /^application\\/(?:json(?:; ?charset=utf-?8)?|proto)$/i;\n/**\n * Regular Expression that matches a Connect streaming Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.contentTypeStreamRegExp = /^application\\/connect\\+?(?:json(?:; ?charset=utf-?8)?|proto)$/i;\nexports.contentTypeUnaryProto = \"application/proto\";\nexports.contentTypeUnaryJson = \"application/json\";\nexports.contentTypeStreamProto = \"application/connect+proto\";\nexports.contentTypeStreamJson = \"application/connect+json\";\nconst encodingProto = \"proto\";\nconst encodingJson = \"json\";\n/**\n * Parse a Connect Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(exports.contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const stream = !!match[1];\n    const binary = !!match[3];\n    return { stream, binary };\n}\nexports.parseContentType = parseContentType;\n/**\n * Parse a Connect Get encoding query parameter.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseEncodingQuery(encoding) {\n    switch (encoding) {\n        case encodingProto:\n            return { stream: false, binary: true };\n        case encodingJson:\n            return { stream: false, binary: false };\n        default:\n            return undefined;\n    }\n}\nexports.parseEncodingQuery = parseEncodingQuery;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEndStreamSerialization = exports.endStreamToJson = exports.endStreamFromJson = exports.endStreamFlag = void 0;\nconst error_json_js_1 = require(\"./error-json.js\");\nconst http_headers_js_1 = require(\"../http-headers.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * endStreamFlag indicates that the data in a EnvelopedMessage\n * is a EndStreamResponse of the Connect protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.endStreamFlag = 0b00000010;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n * Throws a ConnectError on malformed input.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamFromJson(data) {\n    const parseErr = new connect_error_js_1.ConnectError(\"invalid end stream\", code_js_1.Code.InvalidArgument);\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(typeof data == \"string\" ? data : new TextDecoder().decode(data));\n    }\n    catch (e) {\n        throw parseErr;\n    }\n    if (typeof jsonValue != \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw parseErr;\n    }\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" ||\n            jsonValue.metadata == null ||\n            Array.isArray(jsonValue.metadata)) {\n            throw parseErr;\n        }\n        for (const [key, values] of Object.entries(jsonValue.metadata)) {\n            if (!Array.isArray(values) ||\n                values.some((value) => typeof value != \"string\")) {\n                throw parseErr;\n            }\n            for (const value of values) {\n                metadata.append(key, value);\n            }\n        }\n    }\n    const error = \"error\" in jsonValue\n        ? (0, error_json_js_1.errorFromJson)(jsonValue.error, metadata, parseErr)\n        : undefined;\n    return { metadata, error };\n}\nexports.endStreamFromJson = endStreamFromJson;\n/**\n * Serialize the given EndStreamResponse to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation of error details if the detail uses\n * google.protobuf.Any.\n *\n * See https://connect.build/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction endStreamToJson(metadata, error, jsonWriteOptions) {\n    const es = {};\n    if (error !== undefined) {\n        es.error = (0, error_json_js_1.errorToJson)(error, jsonWriteOptions);\n        metadata = (0, http_headers_js_1.appendHeaders)(metadata, error.metadata);\n    }\n    let hasMetadata = false;\n    const md = {};\n    metadata.forEach((value, key) => {\n        hasMetadata = true;\n        md[key] = [value];\n    });\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (hasMetadata) {\n        es.metadata = md;\n    }\n    return es;\n}\nexports.endStreamToJson = endStreamToJson;\n/**\n * Create a Serialization object that serializes a Connect EndStreamResponse.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createEndStreamSerialization(options) {\n    const textEncoder = new TextEncoder();\n    return {\n        serialize(data) {\n            try {\n                const jsonObject = endStreamToJson(data.metadata, data.error, options);\n                const jsonString = JSON.stringify(jsonObject);\n                return textEncoder.encode(jsonString);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new connect_error_js_1.ConnectError(`failed to serialize EndStreamResponse: ${m}`, code_js_1.Code.Internal);\n            }\n        },\n        parse(data) {\n            try {\n                return endStreamFromJson(data);\n            }\n            catch (e) {\n                const m = e instanceof Error ? e.message : String(e);\n                throw new connect_error_js_1.ConnectError(`failed to parse EndStreamResponse: ${m}`, code_js_1.Code.InvalidArgument);\n            }\n        },\n    };\n}\nexports.createEndStreamSerialization = createEndStreamSerialization;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorToJsonBytes = exports.errorToJson = exports.errorFromJsonBytes = exports.errorFromJson = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_string_js_1 = require(\"./code-string.js\");\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJson(jsonValue, metadata, fallback) {\n    if (metadata) {\n        new Headers(metadata).forEach((value, key) => fallback.metadata.append(key, value));\n    }\n    if (typeof jsonValue !== \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue) ||\n        !(\"code\" in jsonValue) ||\n        typeof jsonValue.code !== \"string\") {\n        throw fallback;\n    }\n    const code = (0, code_string_js_1.codeFromString)(jsonValue.code);\n    if (code === undefined) {\n        throw fallback;\n    }\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") {\n        throw fallback;\n    }\n    const error = new connect_error_js_1.ConnectError(message !== null && message !== void 0 ? message : \"\", code, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) {\n        for (const detail of jsonValue.details) {\n            if (detail === null ||\n                typeof detail != \"object\" ||\n                Array.isArray(detail) ||\n                typeof detail.type != \"string\" ||\n                typeof detail.value != \"string\" ||\n                (\"debug\" in detail && typeof detail.debug != \"object\")) {\n                throw fallback;\n            }\n            try {\n                error.details.push({\n                    type: detail.type,\n                    value: protobuf_1.protoBase64.dec(detail.value),\n                    debug: detail.debug,\n                });\n            }\n            catch (e) {\n                throw fallback;\n            }\n        }\n    }\n    return error;\n}\nexports.errorFromJson = errorFromJson;\n/**\n * Parse a Connect error from a serialized JSON value.\n * Will return a ConnectError, and throw the provided fallback if parsing failed.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorFromJsonBytes(bytes, metadata, fallback) {\n    let jsonValue;\n    try {\n        jsonValue = JSON.parse(new TextDecoder().decode(bytes));\n    }\n    catch (e) {\n        throw fallback;\n    }\n    return errorFromJson(jsonValue, metadata, fallback);\n}\nexports.errorFromJsonBytes = errorFromJsonBytes;\n/**\n * Serialize the given error to JSON.\n *\n * The JSON serialization options are required to produce the optional\n * human-readable representation in the \"debug\" key if the detail uses\n * google.protobuf.Any. If serialization of the \"debug\" value fails, it\n * is silently disregarded.\n *\n * See https://connect.build/docs/protocol#error-end-stream\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJson(error, jsonWriteOptions) {\n    const o = {\n        code: (0, code_string_js_1.codeToString)(error.code),\n    };\n    if (error.rawMessage.length > 0) {\n        o.message = error.rawMessage;\n    }\n    if (error.details.length > 0) {\n        o.details = error.details\n            .map((value) => {\n            if (value instanceof protobuf_1.Message) {\n                const i = {\n                    type: value.getType().typeName,\n                    value: value.toBinary(),\n                };\n                try {\n                    i.debug = value.toJson(jsonWriteOptions);\n                }\n                catch (e) {\n                    // We deliberately ignore errors that may occur when serializing\n                    // a message to JSON (the message contains an Any).\n                    // The rationale is that we are only trying to provide optional\n                    // debug information.\n                }\n                return i;\n            }\n            return value;\n        })\n            .map((_a) => {\n            var { value } = _a, rest = __rest(_a, [\"value\"]);\n            return (Object.assign(Object.assign({}, rest), { value: protobuf_1.protoBase64.enc(value) }));\n        });\n    }\n    return o;\n}\nexports.errorToJson = errorToJson;\n/**\n * Serialize the given error to JSON. This calls errorToJson(), but stringifies\n * the result, and converts it into a UInt8Array.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction errorToJsonBytes(error, jsonWriteOptions) {\n    const textEncoder = new TextEncoder();\n    try {\n        const jsonObject = errorToJson(error, jsonWriteOptions);\n        const jsonString = JSON.stringify(jsonObject);\n        return textEncoder.encode(jsonString);\n    }\n    catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new connect_error_js_1.ConnectError(`failed to serialize Connect Error: ${m}`, code_js_1.Code.Internal);\n    }\n}\nexports.errorToJsonBytes = errorToJsonBytes;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.appendHeaders = exports.decodeBinaryHeader = exports.encodeBinaryHeader = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst connect_error_js_1 = require(\"./connect-error.js\");\nconst code_js_1 = require(\"./code.js\");\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with unpadded base64 and returns a string that can be used for\n * a header whose name ends with `-bin`.\n */\nfunction encodeBinaryHeader(value) {\n    let bytes;\n    if (value instanceof protobuf_1.Message) {\n        bytes = value.toBinary();\n    }\n    else if (typeof value == \"string\") {\n        bytes = new TextEncoder().encode(value);\n    }\n    else {\n        bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    }\n    return protobuf_1.protoBase64.enc(bytes).replace(/=+$/, \"\");\n}\nexports.encodeBinaryHeader = encodeBinaryHeader;\nfunction decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = protobuf_1.protoBase64.dec(value);\n        if (type) {\n            return type.fromBinary(bytes, options);\n        }\n        return bytes;\n    }\n    catch (e) {\n        throw connect_error_js_1.ConnectError.from(e, code_js_1.Code.DataLoss);\n    }\n}\nexports.decodeBinaryHeader = decodeBinaryHeader;\n/**\n * Merge two or more Headers objects by appending all fields from\n * all inputs to a new Headers object.\n */\nfunction appendHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers) {\n        e.forEach((value, key) => {\n            h.append(key, value);\n        });\n    }\n    return h;\n}\nexports.appendHeaders = appendHeaders;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codeToHttpStatus = exports.codeFromHttpStatus = void 0;\nconst code_js_1 = require(\"../code.js\");\n/**\n * Determine the Connect error code for the given HTTP status code.\n * See https://connect.build/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return code_js_1.Code.InvalidArgument;\n        case 401: // Unauthorized\n            return code_js_1.Code.Unauthenticated;\n        case 403: // Forbidden\n            return code_js_1.Code.PermissionDenied;\n        case 404: // Not Found\n            return code_js_1.Code.Unimplemented;\n        case 408: // Request Timeout\n            return code_js_1.Code.DeadlineExceeded;\n        case 409: // Conflict\n            return code_js_1.Code.Aborted;\n        case 412: // Precondition Failed\n            return code_js_1.Code.FailedPrecondition;\n        case 413: // Payload Too Large\n            return code_js_1.Code.ResourceExhausted;\n        case 415: // Unsupported Media Type\n            return code_js_1.Code.Internal;\n        case 429: // Too Many Requests\n            return code_js_1.Code.Unavailable;\n        case 431: // Request Header Fields Too Large\n            return code_js_1.Code.ResourceExhausted;\n        case 502: // Bad Gateway\n            return code_js_1.Code.Unavailable;\n        case 503: // Service Unavailable\n            return code_js_1.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return code_js_1.Code.Unavailable;\n        default:\n            return code_js_1.Code.Unknown;\n    }\n}\nexports.codeFromHttpStatus = codeFromHttpStatus;\n/**\n * Returns a HTTP status code for the given Connect code.\n * See https://connect.build/docs/protocol#error-codes\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeToHttpStatus(code) {\n    switch (code) {\n        case code_js_1.Code.Canceled:\n            return 408; // Request Timeout\n        case code_js_1.Code.Unknown:\n            return 500; // Internal Server Error\n        case code_js_1.Code.InvalidArgument:\n            return 400; // Bad Request\n        case code_js_1.Code.DeadlineExceeded:\n            return 408; // Request Timeout\n        case code_js_1.Code.NotFound:\n            return 404; // Not Found\n        case code_js_1.Code.AlreadyExists:\n            return 409; // Conflict\n        case code_js_1.Code.PermissionDenied:\n            return 403; // Forbidden\n        case code_js_1.Code.ResourceExhausted:\n            return 429; // Too Many Requests\n        case code_js_1.Code.FailedPrecondition:\n            return 412; // Precondition Failed\n        case code_js_1.Code.Aborted:\n            return 409; // Conflict\n        case code_js_1.Code.OutOfRange:\n            return 400; // Bad Request\n        case code_js_1.Code.Unimplemented:\n            return 404; // Not Found\n        case code_js_1.Code.Internal:\n            return 500; // Internal Server Error\n        case code_js_1.Code.Unavailable:\n            return 503; // Service Unavailable\n        case code_js_1.Code.DataLoss:\n            return 500; // Internal Server Error\n        case code_js_1.Code.Unauthenticated:\n            return 401; // Unauthorized\n        default:\n            return 500; // same as CodeUnknown\n    }\n}\nexports.codeToHttpStatus = codeToHttpStatus;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTimeout = void 0;\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\n/**\n * Parse a Connect Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^\\d{1,10}$/.exec(value);\n    if (results === null) {\n        return {\n            error: new connect_error_js_1.ConnectError(`protocol error: invalid connect timeout value: ${value}`, code_js_1.Code.InvalidArgument),\n        };\n    }\n    const timeoutMs = parseInt(results[0]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new connect_error_js_1.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, code_js_1.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs: parseInt(results[0]),\n    };\n}\nexports.parseTimeout = parseTimeout;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paramMessage = exports.paramBase64 = exports.paramCompression = exports.paramEncoding = exports.paramConnectVersion = void 0;\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nexports.paramConnectVersion = \"connect\";\nexports.paramEncoding = \"encoding\";\nexports.paramCompression = \"compression\";\nexports.paramBase64 = \"base64\";\nexports.paramMessage = \"message\";\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trailerMux = exports.trailerDemux = void 0;\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerDemux(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key) => {\n        if (key.toLowerCase().startsWith(\"trailer-\")) {\n            t.set(key.substring(8), value);\n        }\n        else {\n            h.set(key, value);\n        }\n    });\n    return [h, t];\n}\nexports.trailerDemux = trailerDemux;\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function muxes a header and a trailer into a single Headers object.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerMux(header, trailer) {\n    const h = new Headers(header);\n    trailer.forEach((value, key) => {\n        h.set(`trailer-${key}`, value);\n    });\n    return h;\n}\nexports.trailerMux = trailerMux;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requireProtocolVersionParam = exports.requireProtocolVersionHeader = exports.protocolVersion = void 0;\nconst headers_js_1 = require(\"./headers.js\");\nconst query_params_js_1 = require(\"./query-params.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\n/**\n * The only know value for the header Connect-Protocol-Version.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.protocolVersion = \"1\";\n/**\n * Requires the Connect-Protocol-Version header to be present with the expected\n * value. Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionHeader(requestHeader) {\n    const v = requestHeader.get(headers_js_1.headerProtocolVersion);\n    if (v === null) {\n        throw new connect_error_js_1.ConnectError(`missing required header: set ${headers_js_1.headerProtocolVersion} to \"${exports.protocolVersion}\"`, code_js_1.Code.InvalidArgument);\n    }\n    else if (v !== exports.protocolVersion) {\n        throw new connect_error_js_1.ConnectError(`${headers_js_1.headerProtocolVersion} must be \"${exports.protocolVersion}\": got \"${v}\"`, code_js_1.Code.InvalidArgument);\n    }\n}\nexports.requireProtocolVersionHeader = requireProtocolVersionHeader;\n/**\n * Requires the connect query parameter to be present with the expected value.\n * Raises a ConnectError with Code.InvalidArgument otherwise.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requireProtocolVersionParam(queryParams) {\n    const v = queryParams.get(query_params_js_1.paramConnectVersion);\n    if (v === null) {\n        throw new connect_error_js_1.ConnectError(`missing required parameter: set ${query_params_js_1.paramConnectVersion} to \"v${exports.protocolVersion}\"`, code_js_1.Code.InvalidArgument);\n    }\n    else if (v !== `v${exports.protocolVersion}`) {\n        throw new connect_error_js_1.ConnectError(`${query_params_js_1.paramConnectVersion} must be \"v${exports.protocolVersion}\": got \"${v}\"`, code_js_1.Code.InvalidArgument);\n    }\n}\nexports.requireProtocolVersionParam = requireProtocolVersionParam;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTransport = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst request_header_js_1 = require(\"./request-header.js\");\nconst headers_js_1 = require(\"./headers.js\");\nconst validate_response_js_1 = require(\"./validate-response.js\");\nconst trailer_mux_js_1 = require(\"./trailer-mux.js\");\nconst error_json_js_1 = require(\"./error-json.js\");\nconst end_stream_js_1 = require(\"./end-stream.js\");\nconst get_request_js_1 = require(\"./get-request.js\");\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst http_headers_js_1 = require(\"../http-headers.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst run_call_js_1 = require(\"../protocol/run-call.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\n/**\n * Create a Transport for the Connect protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, run_call_js_1.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: message instanceof method.I ? message : new method.I(message),\n                },\n                next: async (req) => {\n                    var _a;\n                    let requestBody = serialization\n                        .getI(opt.useBinaryFormat)\n                        .serialize(req.message);\n                    if (opt.sendCompression &&\n                        requestBody.byteLength > opt.compressMinBytes) {\n                        requestBody = await opt.sendCompression.compress(requestBody);\n                        req.header.set(headers_js_1.headerUnaryEncoding, opt.sendCompression.name);\n                    }\n                    else {\n                        req.header.delete(headers_js_1.headerUnaryEncoding);\n                    }\n                    const useGet = opt.useHttpGet === true &&\n                        method.idempotency === protobuf_1.MethodIdempotency.NoSideEffects;\n                    let body;\n                    if (useGet) {\n                        req = (0, get_request_js_1.transformConnectPostToGetRequest)(req, requestBody, opt.useBinaryFormat);\n                    }\n                    else {\n                        body = (0, async_iterable_js_1.createAsyncIterable)([requestBody]);\n                    }\n                    const universalResponse = await opt.httpClient({\n                        url: req.url,\n                        method: (_a = req.init.method) !== null && _a !== void 0 ? _a : \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body,\n                    });\n                    const { compression, isUnaryError, unaryError } = (0, validate_response_js_1.validateResponseWithCompression)(method.kind, opt.acceptCompression, universalResponse.status, universalResponse.header);\n                    const [header, trailer] = (0, trailer_mux_js_1.trailerDemux)(universalResponse.header);\n                    let responseBody = await (0, async_iterable_js_1.pipeTo)(universalResponse.body, (0, async_iterable_js_1.sinkAllBytes)(opt.readMaxBytes, universalResponse.header.get(headers_js_1.headerUnaryContentLength)), { propagateDownStreamError: false });\n                    if (compression) {\n                        responseBody = await compression.decompress(responseBody, opt.readMaxBytes);\n                    }\n                    if (isUnaryError) {\n                        throw (0, error_json_js_1.errorFromJsonBytes)(responseBody, (0, http_headers_js_1.appendHeaders)(header, trailer), unaryError);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header,\n                        message: serialization\n                            .getO(opt.useBinaryFormat)\n                            .parse(responseBody),\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            const endStreamSerialization = (0, end_stream_js_1.createEndStreamSerialization)(opt.jsonOptions);\n            return (0, run_call_js_1.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(method.kind, opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, async_iterable_js_1.pipe)(input, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true,\n                    }),\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, async_iterable_js_1.pipe)(req.message, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, async_iterable_js_1.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression } = (0, validate_response_js_1.validateResponseWithCompression)(method.kind, opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0, async_iterable_js_1.pipe)(uRes.body, (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), end_stream_js_1.endStreamFlag, endStreamSerialization), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_1, _b, _c;\n                                let endStreamReceived = false;\n                                try {\n                                    for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a;) {\n                                        _c = iterable_1_1.value;\n                                        _d = false;\n                                        try {\n                                            const chunk = _c;\n                                            if (chunk.end) {\n                                                if (endStreamReceived) {\n                                                    throw new connect_error_js_1.ConnectError(\"protocol error: received extra EndStreamResponse\", code_js_1.Code.InvalidArgument);\n                                                }\n                                                endStreamReceived = true;\n                                                if (chunk.value.error) {\n                                                    throw chunk.value.error;\n                                                }\n                                                chunk.value.metadata.forEach((value, key) => res.trailer.set(key, value));\n                                                continue;\n                                            }\n                                            if (endStreamReceived) {\n                                                throw new connect_error_js_1.ConnectError(\"protocol error: received extra message after EndStreamResponse\", code_js_1.Code.InvalidArgument);\n                                            }\n                                            yield yield __await(chunk.value);\n                                        }\n                                        finally {\n                                            _d = true;\n                                        }\n                                    }\n                                }\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n                                    }\n                                    finally { if (e_1) throw e_1.error; }\n                                }\n                                if (!endStreamReceived) {\n                                    throw new connect_error_js_1.ConnectError(\"protocol error: missing EndStreamResponse\", code_js_1.Code.InvalidArgument);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\nexports.createTransport = createTransport;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestHeaderWithCompression = exports.requestHeader = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst headers_js_1 = require(\"./headers.js\");\nconst version_js_1 = require(\"./version.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\n/**\n * Creates headers for a Connect request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    if (timeoutMs !== undefined) {\n        result.set(headers_js_1.headerTimeout, `${timeoutMs}`);\n    }\n    result.set(headers_js_1.headerContentType, methodKind == protobuf_1.MethodKind.Unary\n        ? useBinaryFormat\n            ? content_type_js_1.contentTypeUnaryProto\n            : content_type_js_1.contentTypeUnaryJson\n        : useBinaryFormat\n            ? content_type_js_1.contentTypeStreamProto\n            : content_type_js_1.contentTypeStreamJson);\n    result.set(headers_js_1.headerProtocolVersion, version_js_1.protocolVersion);\n    return result;\n}\nexports.requestHeader = requestHeader;\n/**\n * Creates headers for a Connect request with compression.\n *\n * Note that we always set the Content-Encoding header for unary methods.\n * It is up to the caller to decide whether to apply compression - and remove\n * the header if compression is not used, for example because the payload is\n * too small to make compression effective.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = requestHeader(methodKind, useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        const name = methodKind == protobuf_1.MethodKind.Unary\n            ? headers_js_1.headerUnaryEncoding\n            : headers_js_1.headerStreamEncoding;\n        result.set(name, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        const name = methodKind == protobuf_1.MethodKind.Unary\n            ? headers_js_1.headerUnaryAcceptEncoding\n            : headers_js_1.headerStreamAcceptEncoding;\n        result.set(name, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\nexports.requestHeaderWithCompression = requestHeaderWithCompression;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateResponseWithCompression = exports.validateResponse = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst code_js_1 = require(\"../code.js\");\nconst http_status_js_1 = require(\"./http-status.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\nconst headers_js_1 = require(\"./headers.js\");\n/**\n * Validates response status and header for the Connect protocol.\n * Throws a ConnectError if the header indicates an error, or if\n * the content type is unexpected, with the following exception:\n * For unary RPCs with an HTTP error status, this returns an error\n * derived from the HTTP status instead of throwing it, giving an\n * implementation a chance to parse a Connect error from the wire.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(methodKind, status, headers) {\n    const mimeType = headers.get(\"Content-Type\");\n    const parsedType = (0, content_type_js_1.parseContentType)(mimeType);\n    if (status !== 200) {\n        const errorFromStatus = new connect_error_js_1.ConnectError(`HTTP ${status}`, (0, http_status_js_1.codeFromHttpStatus)(status), headers);\n        // If parsedType is defined and it is not binary, then this is a unary JSON response\n        if (methodKind == protobuf_1.MethodKind.Unary && parsedType && !parsedType.binary) {\n            return { isUnaryError: true, unaryError: errorFromStatus };\n        }\n        throw errorFromStatus;\n    }\n    return { isUnaryError: false };\n}\nexports.validateResponse = validateResponse;\n/**\n * Validates response status and header for the Connect protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * @private\n */\nfunction validateResponseWithCompression(methodKind, acceptCompression, status, headers) {\n    let compression;\n    const encoding = headers.get(methodKind == protobuf_1.MethodKind.Unary ? headers_js_1.headerUnaryEncoding : headers_js_1.headerStreamEncoding);\n    if (encoding != null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new connect_error_js_1.ConnectError(`unsupported response encoding \"${encoding}\"`, code_js_1.Code.InvalidArgument, headers);\n        }\n    }\n    return Object.assign({ compression }, validateResponse(methodKind, status, headers));\n}\nexports.validateResponseWithCompression = validateResponseWithCompression;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformConnectPostToGetRequest = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst headers_js_1 = require(\"./headers.js\");\nconst version_js_1 = require(\"./version.js\");\nconst contentTypePrefix = \"application/\";\nfunction encodeMessageForUrl(message, useBase64) {\n    if (useBase64) {\n        // TODO(jchadwick-buf): Three regex replaces seems excessive.\n        // Can we make protoBase64.enc more flexible?\n        return protobuf_1.protoBase64\n            .enc(message)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/=+$/, \"\");\n    }\n    else {\n        return encodeURIComponent(new TextDecoder().decode(message));\n    }\n}\n/**\n * @private Internal code, does not follow semantic versioning.\n */\nfunction transformConnectPostToGetRequest(request, message, useBase64) {\n    let query = `?connect=v${version_js_1.protocolVersion}`;\n    const contentType = request.header.get(headers_js_1.headerContentType);\n    if ((contentType === null || contentType === void 0 ? void 0 : contentType.indexOf(contentTypePrefix)) === 0) {\n        query +=\n            \"&encoding=\" +\n                encodeURIComponent(contentType.slice(contentTypePrefix.length));\n    }\n    const compression = request.header.get(headers_js_1.headerUnaryEncoding);\n    if (compression !== null && compression !== \"identity\") {\n        query += \"&compression=\" + encodeURIComponent(compression);\n        // Force base64 for compressed payloads.\n        useBase64 = true;\n    }\n    if (useBase64) {\n        query += \"&base64=1\";\n    }\n    query += \"&message=\" + encodeMessageForUrl(message, useBase64);\n    const url = request.url + query;\n    // Omit headers that are not used for unary GET requests.\n    const header = new Headers(request.header);\n    header.delete(headers_js_1.headerProtocolVersion);\n    header.delete(headers_js_1.headerContentType);\n    header.delete(headers_js_1.headerUnaryContentLength);\n    header.delete(headers_js_1.headerUnaryEncoding);\n    header.delete(headers_js_1.headerUnaryAcceptEncoding);\n    return Object.assign(Object.assign({}, request), { init: Object.assign(Object.assign({}, request.init), { method: \"GET\" }), url,\n        header });\n}\nexports.transformConnectPostToGetRequest = transformConnectPostToGetRequest;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.grpcStatusOk = exports.validateTrailer = exports.setTrailerStatus = exports.parseTimeout = exports.createTrailerSerialization = exports.trailerSerialize = exports.trailerParse = exports.trailerFlag = exports.validateResponseWithCompression = exports.validateResponse = exports.contentTypeJson = exports.contentTypeProto = exports.contentTypeRegExp = exports.parseContentType = exports.requestHeaderWithCompression = exports.requestHeader = exports.createTransport = exports.createHandlerFactory = void 0;\nvar handler_factory_js_1 = require(\"./handler-factory.js\");\nObject.defineProperty(exports, \"createHandlerFactory\", { enumerable: true, get: function () { return handler_factory_js_1.createHandlerFactory; } });\nvar transport_js_1 = require(\"./transport.js\");\nObject.defineProperty(exports, \"createTransport\", { enumerable: true, get: function () { return transport_js_1.createTransport; } });\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\nvar request_header_js_1 = require(\"./request-header.js\");\nObject.defineProperty(exports, \"requestHeader\", { enumerable: true, get: function () { return request_header_js_1.requestHeader; } });\nObject.defineProperty(exports, \"requestHeaderWithCompression\", { enumerable: true, get: function () { return request_header_js_1.requestHeaderWithCompression; } });\nvar content_type_js_1 = require(\"./content-type.js\");\nObject.defineProperty(exports, \"parseContentType\", { enumerable: true, get: function () { return content_type_js_1.parseContentType; } });\nObject.defineProperty(exports, \"contentTypeRegExp\", { enumerable: true, get: function () { return content_type_js_1.contentTypeRegExp; } });\nObject.defineProperty(exports, \"contentTypeProto\", { enumerable: true, get: function () { return content_type_js_1.contentTypeProto; } });\nObject.defineProperty(exports, \"contentTypeJson\", { enumerable: true, get: function () { return content_type_js_1.contentTypeJson; } });\nvar validate_response_js_1 = require(\"./validate-response.js\");\nObject.defineProperty(exports, \"validateResponse\", { enumerable: true, get: function () { return validate_response_js_1.validateResponse; } });\nObject.defineProperty(exports, \"validateResponseWithCompression\", { enumerable: true, get: function () { return validate_response_js_1.validateResponseWithCompression; } });\nvar trailer_js_1 = require(\"./trailer.js\");\nObject.defineProperty(exports, \"trailerFlag\", { enumerable: true, get: function () { return trailer_js_1.trailerFlag; } });\nObject.defineProperty(exports, \"trailerParse\", { enumerable: true, get: function () { return trailer_js_1.trailerParse; } });\nObject.defineProperty(exports, \"trailerSerialize\", { enumerable: true, get: function () { return trailer_js_1.trailerSerialize; } });\nObject.defineProperty(exports, \"createTrailerSerialization\", { enumerable: true, get: function () { return trailer_js_1.createTrailerSerialization; } });\nvar index_js_1 = require(\"../protocol-grpc/index.js\");\nObject.defineProperty(exports, \"parseTimeout\", { enumerable: true, get: function () { return index_js_1.parseTimeout; } });\nObject.defineProperty(exports, \"setTrailerStatus\", { enumerable: true, get: function () { return index_js_1.setTrailerStatus; } });\nObject.defineProperty(exports, \"validateTrailer\", { enumerable: true, get: function () { return index_js_1.validateTrailer; } });\nObject.defineProperty(exports, \"grpcStatusOk\", { enumerable: true, get: function () { return index_js_1.grpcStatusOk; } });\n__exportStar(require(\"./headers.js\"), exports);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHandlerFactory = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\nconst implementation_js_1 = require(\"../implementation.js\");\nconst trailer_js_1 = require(\"./trailer.js\");\nconst headers_js_1 = require(\"./headers.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\nconst parse_timeout_js_1 = require(\"../protocol-grpc/parse-timeout.js\");\nconst trailer_status_js_1 = require(\"../protocol-grpc/trailer-status.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst compression_js_1 = require(\"../protocol/compression.js\");\nconst content_type_matcher_js_1 = require(\"../protocol/content-type-matcher.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst invoke_implementation_js_1 = require(\"../protocol/invoke-implementation.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\nconst universal_handler_js_1 = require(\"../protocol/universal-handler.js\");\nconst universal_js_1 = require(\"../protocol/universal.js\");\nconst protocolName = \"grpc-web\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC-web handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0, universal_handler_js_1.validateUniversalHandlerOptions)(options);\n    const trailerSerialization = (0, trailer_js_1.createTrailerSerialization)();\n    function fact(spec) {\n        const h = createHandler(opt, trailerSerialization, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0, content_type_matcher_js_1.contentTypeMatcher)(content_type_js_1.contentTypeRegExp),\n            requestPath: (0, create_method_url_js_1.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nexports.createHandlerFactory = createHandlerFactory;\nfunction createHandler(opt, trailerSerialization, spec) {\n    const serialization = (0, serialization_js_1.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0, universal_js_1.assertByteStreamRequest)(req);\n        const type = (0, content_type_js_1.parseContentType)(req.header.get(headers_js_1.headerContentType));\n        if (type == undefined || type.text) {\n            return universal_js_1.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return universal_js_1.uResponseMethodNotAllowed;\n        }\n        const timeout = (0, parse_timeout_js_1.parseTimeout)(req.header.get(headers_js_1.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, implementation_js_1.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, responseHeader: {\n                [headers_js_1.headerContentType]: type.binary ? content_type_js_1.contentTypeProto : content_type_js_1.contentTypeJson,\n            }, responseTrailer: {\n                [headers_js_1.headerGrpcStatus]: trailer_status_js_1.grpcStatusOk,\n            } }));\n        const compression = (0, compression_js_1.compressionNegotiate)(opt.acceptCompression, req.header.get(headers_js_1.headerEncoding), req.header.get(headers_js_1.headerAcceptEncoding), headers_js_1.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(headers_js_1.headerEncoding, compression.response.name);\n        }\n        const outputIt = (0, async_iterable_js_1.pipe)(req.body, (0, async_iterable_js_1.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getI(type.binary), trailer_js_1.trailerFlag\n        // if we set `null` here, an end-stream-message in the request\n        // raises an error, but we want to be lenient\n        ), (0, invoke_implementation_js_1.transformInvokeImplementation)(spec, context), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, async_iterable_js_1.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof connect_error_js_1.ConnectError) {\n                (0, trailer_status_js_1.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0, trailer_status_js_1.setTrailerStatus)(context.responseTrailer, new connect_error_js_1.ConnectError(\"internal error\", code_js_1.Code.Internal, undefined, undefined, e));\n            }\n            return {\n                flags: trailer_js_1.trailerFlag,\n                data: trailerSerialization.serialize(context.responseTrailer),\n            };\n        }), (0, async_iterable_js_1.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)());\n        return Object.assign(Object.assign({}, universal_js_1.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, async_iterable_js_1.untilFirst)(outputIt), header: context.responseHeader });\n    };\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTrailerSerialization = exports.trailerSerialize = exports.trailerParse = exports.trailerFlag = void 0;\n/**\n * trailerFlag indicates that the data in a EnvelopedMessage\n * is a set of trailers of the gRPC-web protocol.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.trailerFlag = 0b10000000;\n/**\n * Parse a gRPC-web trailer, a set of header fields separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerParse(data) {\n    const headers = new Headers();\n    const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n    for (const line of lines) {\n        if (line === \"\") {\n            continue;\n        }\n        const i = line.indexOf(\":\");\n        if (i > 0) {\n            const name = line.substring(0, i).trim();\n            const value = line.substring(i + 1).trim();\n            headers.append(name, value);\n        }\n    }\n    return headers;\n}\nexports.trailerParse = trailerParse;\n/**\n * Serialize a Headers object as a gRPC-web trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction trailerSerialize(trailer) {\n    const lines = [];\n    trailer.forEach((value, key) => {\n        lines.push(`${key}: ${value}\\r\\n`);\n    });\n    return new TextEncoder().encode(lines.join(\"\"));\n}\nexports.trailerSerialize = trailerSerialize;\n/**\n * Create a Serialization object that serializes a gRPC-web trailer, a Headers\n * object that is serialized as a set of header fields, separated by CRLF.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction createTrailerSerialization() {\n    return {\n        serialize: trailerSerialize,\n        parse: trailerParse,\n    };\n}\nexports.createTrailerSerialization = createTrailerSerialization;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseContentType = exports.contentTypeJson = exports.contentTypeProto = exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid gRPC-web Content-Type header value.\n * Note that this includes application/grpc-web-text with the additional base64\n * encoding.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.contentTypeRegExp = /^application\\/grpc-web(-text)?(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nexports.contentTypeProto = \"application/grpc-web+proto\";\nexports.contentTypeJson = \"application/grpc-web+json\";\n/**\n * Parse a gRPC-web Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(exports.contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const text = !!match[1];\n    const binary = !match[2];\n    return { text, binary };\n}\nexports.parseContentType = parseContentType;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTimeout = void 0;\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\n/**\n * Parse a gRPC Timeout (Deadline) header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseTimeout(value, maxTimeoutMs) {\n    if (value === null) {\n        return {};\n    }\n    const results = /^(\\d{1,8})([HMSmun])$/.exec(value);\n    if (results === null) {\n        return {\n            error: new connect_error_js_1.ConnectError(`protocol error: invalid grpc timeout value: ${value}`, code_js_1.Code.InvalidArgument),\n        };\n    }\n    const unitToMultiplicand = {\n        H: 60 * 60 * 1000,\n        M: 60 * 1000,\n        S: 1000,\n        m: 1,\n        u: 0.001,\n        n: 0.000001, // nanosecond\n    };\n    const timeoutMs = unitToMultiplicand[results[2]] *\n        parseInt(results[1]);\n    if (timeoutMs > maxTimeoutMs) {\n        return {\n            timeoutMs: timeoutMs,\n            error: new connect_error_js_1.ConnectError(`timeout ${timeoutMs}ms must be <= ${maxTimeoutMs}`, code_js_1.Code.InvalidArgument),\n        };\n    }\n    return {\n        timeoutMs,\n    };\n}\nexports.parseTimeout = parseTimeout;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findTrailerError = exports.setTrailerStatus = exports.grpcStatusOk = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst status_pb_js_1 = require(\"./gen/status_pb.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst http_headers_js_1 = require(\"../http-headers.js\");\nconst code_js_1 = require(\"../code.js\");\nconst headers_js_1 = require(\"./headers.js\");\n/**\n * The value of the Grpc-Status header or trailer in case of success.\n * Used by the gRPC and gRPC-web protocols.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.grpcStatusOk = \"0\";\n/**\n * Sets the fields \"grpc-status\" and \"grpc-message\" in the given\n * Headers object.\n * If an error is given and contains error details, the function\n * will also set the field \"grpc-status-details-bin\" with an encoded\n * google.rpc.Status message including the error details.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction setTrailerStatus(target, error) {\n    if (error) {\n        target.set(headers_js_1.headerGrpcStatus, error.code.toString(10));\n        target.set(headers_js_1.headerGrpcMessage, encodeURIComponent(error.rawMessage));\n        if (error.details.length > 0) {\n            const status = new status_pb_js_1.Status({\n                code: error.code,\n                message: error.rawMessage,\n                details: error.details.map((value) => value instanceof protobuf_1.Message\n                    ? protobuf_1.Any.pack(value)\n                    : new protobuf_1.Any({\n                        typeUrl: `type.googleapis.com/${value.type}`,\n                        value: value.value,\n                    })),\n            });\n            target.set(headers_js_1.headerStatusDetailsBin, (0, http_headers_js_1.encodeBinaryHeader)(status));\n        }\n    }\n    else {\n        target.set(headers_js_1.headerGrpcStatus, exports.grpcStatusOk.toString());\n    }\n    return target;\n}\nexports.setTrailerStatus = setTrailerStatus;\n/**\n * Find an error status in the given Headers object, which can be either\n * a trailer, or a header (as allowed for so-called trailers-only responses).\n * The field \"grpc-status-details-bin\" is inspected, and if not present,\n * the fields \"grpc-status\" and \"grpc-message\" are used.\n * Returns an error only if the gRPC status code is > 0.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction findTrailerError(headerOrTrailer) {\n    // TODO\n    // let code: Code;\n    // let message: string = \"\";\n    var _a;\n    // Prefer the protobuf-encoded data to the grpc-status header.\n    const statusBytes = headerOrTrailer.get(headers_js_1.headerStatusDetailsBin);\n    if (statusBytes != null) {\n        const status = (0, http_headers_js_1.decodeBinaryHeader)(statusBytes, status_pb_js_1.Status);\n        if (status.code == 0) {\n            return undefined;\n        }\n        const error = new connect_error_js_1.ConnectError(status.message, status.code, headerOrTrailer);\n        error.details = status.details.map((any) => ({\n            type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n            value: any.value,\n        }));\n        return error;\n    }\n    const grpcStatus = headerOrTrailer.get(headers_js_1.headerGrpcStatus);\n    if (grpcStatus != null) {\n        if (grpcStatus === exports.grpcStatusOk) {\n            return undefined;\n        }\n        const code = parseInt(grpcStatus, 10);\n        if (code in code_js_1.Code) {\n            return new connect_error_js_1.ConnectError(decodeURIComponent((_a = headerOrTrailer.get(headers_js_1.headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n        }\n        return new connect_error_js_1.ConnectError(`invalid grpc-status: ${grpcStatus}`, code_js_1.Code.Internal, headerOrTrailer);\n    }\n    return undefined;\n}\nexports.findTrailerError = findTrailerError;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\n/**\n * The `Status` type defines a logical error model that is suitable for different\n * programming environments, including REST APIs and RPC APIs. It is used by\n * [gRPC](https://github.com/grpc). The error model is designed to be:\n *\n * - Simple to use and understand for most users\n * - Flexible enough to meet unexpected needs\n *\n * # Overview\n *\n * The `Status` message contains three pieces of data: error code, error message,\n * and error details. The error code should be an enum value of\n * [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\n * error message should be a developer-facing English message that helps\n * developers *understand* and *resolve* the error. If a localized user-facing\n * error message is needed, put the localized message in the error details or\n * localize it in the client. The optional error details may contain arbitrary\n * information about the error. There is a predefined set of error detail types\n * in the package `google.rpc` which can be used for common error conditions.\n *\n * # Language mapping\n *\n * The `Status` message is the logical representation of the error model, but it\n * is not necessarily the actual wire format. When the `Status` message is\n * exposed in different client libraries and different wire protocols, it can be\n * mapped differently. For example, it will likely be mapped to some exceptions\n * in Java, but more likely mapped to some error codes in C.\n *\n * # Other uses\n *\n * The error model and the `Status` message can be used in a variety of\n * environments, either with or without APIs, to provide a\n * consistent developer experience across different environments.\n *\n * Example uses of this error model include:\n *\n * - Partial errors. If a service needs to return partial errors to the client,\n *     it may embed the `Status` in the normal response to indicate the partial\n *     errors.\n *\n * - Workflow errors. A typical workflow has multiple steps. Each step may\n *     have a `Status` message for error reporting purpose.\n *\n * - Batch operations. If a client uses batch request and batch response, the\n *     `Status` message should be used directly inside batch response, one for\n *     each error sub-response.\n *\n * - Asynchronous operations. If an API call embeds asynchronous operation\n *     results in its response, the status of those operations should be\n *     represented directly using the `Status` message.\n *\n * - Logging. If some API errors are stored in logs, the message `Status` could\n *     be used directly after any stripping needed for security/privacy reasons.\n *\n * @generated from message google.rpc.Status\n */\nclass Status extends protobuf_1.Message {\n    constructor(data) {\n        super();\n        /**\n         * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n         *\n         * @generated from field: int32 code = 1;\n         */\n        this.code = 0;\n        /**\n         * A developer-facing error message, which should be in English. Any\n         * user-facing error message should be localized and sent in the\n         * [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n         *\n         * @generated from field: string message = 2;\n         */\n        this.message = \"\";\n        /**\n         * A list of messages that carry the error details.  There will be a\n         * common set of message types for APIs to use.\n         *\n         * @generated from field: repeated google.protobuf.Any details = 3;\n         */\n        this.details = [];\n        protobuf_1.proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Status().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Status().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Status().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return protobuf_1.proto3.util.equals(Status, a, b);\n    }\n}\nStatus.runtime = protobuf_1.proto3;\nStatus.typeName = \"google.rpc.Status\";\nStatus.fields = protobuf_1.proto3.util.newFieldList(() => [\n    { no: 1, name: \"code\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n    { no: 2, name: \"message\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"details\", kind: \"message\", T: protobuf_1.Any, repeated: true },\n]);\nexports.Status = Status;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTransport = void 0;\nconst validate_trailer_js_1 = require(\"../protocol-grpc/validate-trailer.js\");\nconst request_header_js_1 = require(\"./request-header.js\");\nconst validate_response_js_1 = require(\"./validate-response.js\");\nconst trailer_js_1 = require(\"./trailer.js\");\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst run_call_js_1 = require(\"../protocol/run-call.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\n/**\n * Create a Transport for the gRPC-web protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, message) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, run_call_js_1.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: message instanceof method.I ? message : new method.I(message),\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, async_iterable_js_1.pipe)((0, async_iterable_js_1.createAsyncIterable)([req.message]), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, async_iterable_js_1.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression } = (0, validate_response_js_1.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const { trailer, message } = await (0, async_iterable_js_1.pipeTo)(uRes.body, (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), trailer_js_1.trailerFlag, (0, trailer_js_1.createTrailerSerialization)()), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        let trailer;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                try {\n                                    const env = _c;\n                                    if (env.end) {\n                                        if (trailer !== undefined) {\n                                            throw new connect_error_js_1.ConnectError(\"protocol error: received extra trailer\", code_js_1.Code.InvalidArgument);\n                                        }\n                                        trailer = env.value;\n                                    }\n                                    else {\n                                        if (message !== undefined) {\n                                            throw new connect_error_js_1.ConnectError(\"protocol error: received extra output message for unary method\", code_js_1.Code.InvalidArgument);\n                                        }\n                                        message = env.value;\n                                    }\n                                }\n                                finally {\n                                    _d = true;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return { trailer, message };\n                    }, {\n                        propagateDownStreamError: false,\n                    });\n                    if (trailer === undefined) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: missing trailer\", code_js_1.Code.InvalidArgument);\n                    }\n                    (0, validate_trailer_js_1.validateTrailer)(trailer);\n                    if (message === undefined) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: missing output message for unary method\", code_js_1.Code.InvalidArgument);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return (0, run_call_js_1.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, async_iterable_js_1.pipe)(input, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true,\n                    }),\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, async_iterable_js_1.pipe)(req.message, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, async_iterable_js_1.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus } = (0, validate_response_js_1.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: new Headers(), message: (0, async_iterable_js_1.pipe)(uRes.body, (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat), trailer_js_1.trailerFlag, (0, trailer_js_1.createTrailerSerialization)()), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                var _a, e_2, _b, _c;\n                                if (foundStatus) {\n                                    // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                                    // response (a response without a body and no trailers).\n                                    //\n                                    // The spec seems to disallow a trailers-only response for status 0 - we are\n                                    // lenient and only verify that the body is empty.\n                                    //\n                                    // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                                    // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                                    const r = yield __await(iterable[Symbol.asyncIterator]().next());\n                                    if (r.done !== true) {\n                                        throw new connect_error_js_1.ConnectError(\"protocol error: extra data for trailers-only\", code_js_1.Code.InvalidArgument);\n                                    }\n                                    return yield __await(void 0);\n                                }\n                                let trailerReceived = false;\n                                try {\n                                    for (var _d = true, iterable_2 = __asyncValues(iterable), iterable_2_1; iterable_2_1 = yield __await(iterable_2.next()), _a = iterable_2_1.done, !_a;) {\n                                        _c = iterable_2_1.value;\n                                        _d = false;\n                                        try {\n                                            const chunk = _c;\n                                            if (chunk.end) {\n                                                if (trailerReceived) {\n                                                    throw new connect_error_js_1.ConnectError(\"protocol error: received extra trailer\", code_js_1.Code.InvalidArgument);\n                                                }\n                                                trailerReceived = true;\n                                                (0, validate_trailer_js_1.validateTrailer)(chunk.value);\n                                                chunk.value.forEach((value, key) => res.trailer.set(key, value));\n                                                continue;\n                                            }\n                                            if (trailerReceived) {\n                                                throw new connect_error_js_1.ConnectError(\"protocol error: received extra message after trailer\", code_js_1.Code.InvalidArgument);\n                                            }\n                                            yield yield __await(chunk.value);\n                                        }\n                                        finally {\n                                            _d = true;\n                                        }\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (!_d && !_a && (_b = iterable_2.return)) yield __await(_b.call(iterable_2));\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                                if (!trailerReceived) {\n                                    throw new connect_error_js_1.ConnectError(\"protocol error: missing trailer\", code_js_1.Code.InvalidArgument);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\nexports.createTransport = createTransport;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTrailer = void 0;\nconst trailer_status_js_1 = require(\"./trailer-status.js\");\n/**\n * Validates a trailer for the gRPC and the gRPC-web protocol.\n * Throws a ConnectError if the trailer contains an error status.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateTrailer(trailer) {\n    const err = (0, trailer_status_js_1.findTrailerError)(trailer);\n    if (err) {\n        throw err;\n    }\n}\nexports.validateTrailer = validateTrailer;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestHeaderWithCompression = exports.requestHeader = void 0;\nconst headers_js_1 = require(\"./headers.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\n/**\n * Creates headers for a gRPC-web request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    // Note that we do not support the grpc-web-text format.\n    // https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md#protocol-differences-vs-grpc-over-http2\n    result.set(headers_js_1.headerContentType, useBinaryFormat ? content_type_js_1.contentTypeProto : content_type_js_1.contentTypeJson);\n    result.set(headers_js_1.headerXGrpcWeb, \"1\");\n    // Note that we do not comply with recommended structure for the\n    // user-agent string.\n    // https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(headers_js_1.headerXUserAgent, \"@bufbuild/connect-web\");\n    if (timeoutMs !== undefined) {\n        result.set(headers_js_1.headerTimeout, `${timeoutMs}m`);\n    }\n    return result;\n}\nexports.requestHeader = requestHeader;\n/**\n * Creates headers for a gRPC-web request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        result.set(headers_js_1.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(headers_js_1.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\nexports.requestHeaderWithCompression = requestHeaderWithCompression;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateResponseWithCompression = exports.validateResponse = void 0;\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\nconst headers_js_1 = require(\"./headers.js\");\nconst http_status_js_1 = require(\"../protocol-grpc/http-status.js\");\nconst trailer_status_js_1 = require(\"../protocol-grpc/trailer-status.js\");\n/**\n * Validates response status and header for the gRPC-web protocol.\n *\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    var _a;\n    // For compatibility with the `grpc-web` package, we treat all HTTP status\n    // codes in the 200 range as valid, not just HTTP 200.\n    if (status >= 200 && status < 300) {\n        const err = (0, trailer_status_js_1.findTrailerError)(headers);\n        if (err) {\n            throw err;\n        }\n        return { foundStatus: headers.has(headers_js_1.headerGrpcStatus) };\n    }\n    throw new connect_error_js_1.ConnectError(decodeURIComponent((_a = headers.get(headers_js_1.headerGrpcMessage)) !== null && _a !== void 0 ? _a : `HTTP ${status}`), (0, http_status_js_1.codeFromHttpStatus)(status), headers);\n}\nexports.validateResponse = validateResponse;\n/**\n * Validates response status and header for the gRPC-web protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(headers_js_1.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new connect_error_js_1.ConnectError(`unsupported response encoding \"${encoding}\"`, code_js_1.Code.InvalidArgument, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n    };\n}\nexports.validateResponseWithCompression = validateResponseWithCompression;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codeFromHttpStatus = void 0;\nconst code_js_1 = require(\"../code.js\");\n/**\n * Determine the gRPC-web error code for the given HTTP status code.\n * See https://github.com/grpc/grpc/blob/master/doc/http-grpc-status-mapping.md.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction codeFromHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return code_js_1.Code.Internal;\n        case 401: // Unauthorized\n            return code_js_1.Code.Unauthenticated;\n        case 403: // Forbidden\n            return code_js_1.Code.PermissionDenied;\n        case 404: // Not Found\n            return code_js_1.Code.Unimplemented;\n        case 429: // Too Many Requests\n            return code_js_1.Code.Unavailable;\n        case 502: // Bad Gateway\n            return code_js_1.Code.Unavailable;\n        case 503: // Service Unavailable\n            return code_js_1.Code.Unavailable;\n        case 504: // Gateway Timeout\n            return code_js_1.Code.Unavailable;\n        default:\n            // 200 is UNKNOWN because there should be a grpc-status in case of truly OK response.\n            return code_js_1.Code.Unknown;\n    }\n}\nexports.codeFromHttpStatus = codeFromHttpStatus;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTrailer = exports.validateResponseWithCompression = exports.validateResponse = exports.grpcStatusOk = exports.setTrailerStatus = exports.findTrailerError = exports.parseTimeout = exports.contentTypeProto = exports.contentTypeJson = exports.contentTypeRegExp = exports.parseContentType = exports.requestHeaderWithCompression = exports.requestHeader = exports.codeFromHttpStatus = exports.createTransport = exports.createHandlerFactory = void 0;\nvar handler_factory_js_1 = require(\"./handler-factory.js\");\nObject.defineProperty(exports, \"createHandlerFactory\", { enumerable: true, get: function () { return handler_factory_js_1.createHandlerFactory; } });\nvar transport_js_1 = require(\"./transport.js\");\nObject.defineProperty(exports, \"createTransport\", { enumerable: true, get: function () { return transport_js_1.createTransport; } });\n// All exports below are private — internal code that does not follow semantic\n// versioning.\n// We will try hard to avoid breaking changes, but if you depend on the\n// following exports, we recommend that you do so with an exact version\n// constraint (no ~ or ^).\nvar http_status_js_1 = require(\"./http-status.js\");\nObject.defineProperty(exports, \"codeFromHttpStatus\", { enumerable: true, get: function () { return http_status_js_1.codeFromHttpStatus; } });\nvar request_header_js_1 = require(\"./request-header.js\");\nObject.defineProperty(exports, \"requestHeader\", { enumerable: true, get: function () { return request_header_js_1.requestHeader; } });\nObject.defineProperty(exports, \"requestHeaderWithCompression\", { enumerable: true, get: function () { return request_header_js_1.requestHeaderWithCompression; } });\nvar content_type_js_1 = require(\"./content-type.js\");\nObject.defineProperty(exports, \"parseContentType\", { enumerable: true, get: function () { return content_type_js_1.parseContentType; } });\nObject.defineProperty(exports, \"contentTypeRegExp\", { enumerable: true, get: function () { return content_type_js_1.contentTypeRegExp; } });\nObject.defineProperty(exports, \"contentTypeJson\", { enumerable: true, get: function () { return content_type_js_1.contentTypeJson; } });\nObject.defineProperty(exports, \"contentTypeProto\", { enumerable: true, get: function () { return content_type_js_1.contentTypeProto; } });\nvar parse_timeout_js_1 = require(\"./parse-timeout.js\");\nObject.defineProperty(exports, \"parseTimeout\", { enumerable: true, get: function () { return parse_timeout_js_1.parseTimeout; } });\nvar trailer_status_js_1 = require(\"./trailer-status.js\");\nObject.defineProperty(exports, \"findTrailerError\", { enumerable: true, get: function () { return trailer_status_js_1.findTrailerError; } });\nObject.defineProperty(exports, \"setTrailerStatus\", { enumerable: true, get: function () { return trailer_status_js_1.setTrailerStatus; } });\nObject.defineProperty(exports, \"grpcStatusOk\", { enumerable: true, get: function () { return trailer_status_js_1.grpcStatusOk; } });\nvar validate_response_js_1 = require(\"./validate-response.js\");\nObject.defineProperty(exports, \"validateResponse\", { enumerable: true, get: function () { return validate_response_js_1.validateResponse; } });\nObject.defineProperty(exports, \"validateResponseWithCompression\", { enumerable: true, get: function () { return validate_response_js_1.validateResponseWithCompression; } });\nvar validate_trailer_js_1 = require(\"./validate-trailer.js\");\nObject.defineProperty(exports, \"validateTrailer\", { enumerable: true, get: function () { return validate_trailer_js_1.validateTrailer; } });\n__exportStar(require(\"./headers.js\"), exports);\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHandlerFactory = void 0;\nconst implementation_js_1 = require(\"../implementation.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst code_js_1 = require(\"../code.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\nconst headers_js_1 = require(\"./headers.js\");\nconst trailer_status_js_1 = require(\"./trailer-status.js\");\nconst parse_timeout_js_1 = require(\"./parse-timeout.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst compression_js_1 = require(\"../protocol/compression.js\");\nconst content_type_matcher_js_1 = require(\"../protocol/content-type-matcher.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst invoke_implementation_js_1 = require(\"../protocol/invoke-implementation.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\nconst universal_handler_js_1 = require(\"../protocol/universal-handler.js\");\nconst universal_js_1 = require(\"../protocol/universal.js\");\nconst protocolName = \"grpc\";\nconst methodPost = \"POST\";\n/**\n * Create a factory that creates gRPC handlers.\n */\nfunction createHandlerFactory(options) {\n    const opt = (0, universal_handler_js_1.validateUniversalHandlerOptions)(options);\n    function fact(spec) {\n        const h = createHandler(opt, spec);\n        return Object.assign(h, {\n            protocolNames: [protocolName],\n            allowedMethods: [methodPost],\n            supportedContentType: (0, content_type_matcher_js_1.contentTypeMatcher)(content_type_js_1.contentTypeRegExp),\n            requestPath: (0, create_method_url_js_1.createMethodUrl)(\"/\", spec.service, spec.method),\n            service: spec.service,\n            method: spec.method,\n        });\n    }\n    fact.protocolName = protocolName;\n    return fact;\n}\nexports.createHandlerFactory = createHandlerFactory;\nfunction createHandler(opt, spec) {\n    const serialization = (0, serialization_js_1.createMethodSerializationLookup)(spec.method, opt.binaryOptions, opt.jsonOptions, opt);\n    return async function handle(req) {\n        (0, universal_js_1.assertByteStreamRequest)(req);\n        const type = (0, content_type_js_1.parseContentType)(req.header.get(headers_js_1.headerContentType));\n        if (type == undefined) {\n            return universal_js_1.uResponseUnsupportedMediaType;\n        }\n        if (req.method !== methodPost) {\n            return universal_js_1.uResponseMethodNotAllowed;\n        }\n        const timeout = (0, parse_timeout_js_1.parseTimeout)(req.header.get(headers_js_1.headerTimeout), opt.maxTimeoutMs);\n        const context = (0, implementation_js_1.createHandlerContext)(Object.assign(Object.assign({}, spec), { requestMethod: req.method, protocolName, timeoutMs: timeout.timeoutMs, shutdownSignal: opt.shutdownSignal, requestSignal: req.signal, requestHeader: req.header, responseHeader: {\n                [headers_js_1.headerContentType]: type.binary ? content_type_js_1.contentTypeProto : content_type_js_1.contentTypeJson,\n            }, responseTrailer: {\n                [headers_js_1.headerGrpcStatus]: trailer_status_js_1.grpcStatusOk,\n            } }));\n        const compression = (0, compression_js_1.compressionNegotiate)(opt.acceptCompression, req.header.get(headers_js_1.headerEncoding), req.header.get(headers_js_1.headerAcceptEncoding), headers_js_1.headerAcceptEncoding);\n        if (compression.response) {\n            context.responseHeader.set(headers_js_1.headerEncoding, compression.response.name);\n        }\n        const outputIt = (0, async_iterable_js_1.pipe)(req.body, (0, async_iterable_js_1.transformPrepend)(() => {\n            // raise compression error to serialize it as a trailer status\n            if (compression.error)\n                throw compression.error;\n            // raise timeout parsing error to serialize it as a trailer status\n            if (timeout.error)\n                throw timeout.error;\n            return undefined;\n        }), (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression.request, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getI(type.binary)), (0, invoke_implementation_js_1.transformInvokeImplementation)(spec, context), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getO(type.binary)), (0, async_iterable_js_1.transformCompressEnvelope)(compression.response, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), (0, async_iterable_js_1.transformCatchFinally)((e) => {\n            context.abort();\n            if (e instanceof connect_error_js_1.ConnectError) {\n                (0, trailer_status_js_1.setTrailerStatus)(context.responseTrailer, e);\n            }\n            else if (e !== undefined) {\n                (0, trailer_status_js_1.setTrailerStatus)(context.responseTrailer, new connect_error_js_1.ConnectError(\"internal error\", code_js_1.Code.Internal, undefined, undefined, e));\n            }\n        }));\n        return Object.assign(Object.assign({}, universal_js_1.uResponseOk), { \n            // We wait for the first response body bytes before resolving, so that\n            // implementations have a chance to add headers before an adapter commits\n            // them to the wire.\n            body: await (0, async_iterable_js_1.untilFirst)(outputIt), header: context.responseHeader, trailer: context.responseTrailer });\n    };\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseContentType = exports.contentTypeJson = exports.contentTypeProto = exports.contentTypeRegExp = void 0;\n/**\n * Regular Expression that matches any valid gRPC Content-Type header value.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nexports.contentTypeRegExp = /^application\\/grpc(?:\\+(?:(json)(?:; ?charset=utf-?8)?|proto))?$/i;\nexports.contentTypeProto = \"application/grpc+proto\";\nexports.contentTypeJson = \"application/grpc+json\";\n/**\n * Parse a gRPC Content-Type header.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction parseContentType(contentType) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(exports.contentTypeRegExp);\n    if (!match) {\n        return undefined;\n    }\n    const binary = !match[1];\n    return { binary };\n}\nexports.parseContentType = parseContentType;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncDelegator = (this && this.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTransport = void 0;\nconst request_header_js_1 = require(\"./request-header.js\");\nconst validate_response_js_1 = require(\"./validate-response.js\");\nconst validate_trailer_js_1 = require(\"./validate-trailer.js\");\nconst code_js_1 = require(\"../code.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst async_iterable_js_1 = require(\"../protocol/async-iterable.js\");\nconst create_method_url_js_1 = require(\"../protocol/create-method-url.js\");\nconst run_call_js_1 = require(\"../protocol/run-call.js\");\nconst serialization_js_1 = require(\"../protocol/serialization.js\");\n/**\n * Create a Transport for the gRPC protocol.\n */\nfunction createTransport(opt) {\n    return {\n        async unary(service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return await (0, run_call_js_1.runUnaryCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: input instanceof method.I ? input : new method.I(input),\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, async_iterable_js_1.pipe)((0, async_iterable_js_1.createAsyncIterable)([req.message]), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, async_iterable_js_1.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), {\n                            propagateDownStreamError: true,\n                        }),\n                    });\n                    const { compression } = (0, validate_response_js_1.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const message = await (0, async_iterable_js_1.pipeTo)(uRes.body, (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), async (iterable) => {\n                        var _a, e_1, _b, _c;\n                        let message;\n                        try {\n                            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = await iterable_1.next(), _a = iterable_1_1.done, !_a;) {\n                                _c = iterable_1_1.value;\n                                _d = false;\n                                try {\n                                    const chunk = _c;\n                                    if (message !== undefined) {\n                                        throw new connect_error_js_1.ConnectError(\"protocol error: received extra output message for unary method\", code_js_1.Code.InvalidArgument);\n                                    }\n                                    message = chunk;\n                                }\n                                finally {\n                                    _d = true;\n                                }\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (!_d && !_a && (_b = iterable_1.return)) await _b.call(iterable_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return message;\n                    }, { propagateDownStreamError: false });\n                    (0, validate_trailer_js_1.validateTrailer)(uRes.trailer);\n                    if (message === undefined) {\n                        throw new connect_error_js_1.ConnectError(\"protocol error: missing output message for unary method\", code_js_1.Code.InvalidArgument);\n                    }\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: uRes.header,\n                        message,\n                        trailer: uRes.trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input) {\n            const serialization = (0, serialization_js_1.createMethodSerializationLookup)(method, opt.binaryOptions, opt.jsonOptions, opt);\n            return (0, run_call_js_1.runStreamingCall)({\n                interceptors: opt.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0, create_method_url_js_1.createMethodUrl)(opt.baseUrl, service, method),\n                    init: {},\n                    header: (0, request_header_js_1.requestHeaderWithCompression)(opt.useBinaryFormat, timeoutMs, header, opt.acceptCompression, opt.sendCompression),\n                    message: (0, async_iterable_js_1.pipe)(input, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), {\n                        propagateDownStreamError: true,\n                    }),\n                },\n                next: async (req) => {\n                    const uRes = await opt.httpClient({\n                        url: req.url,\n                        method: \"POST\",\n                        header: req.header,\n                        signal: req.signal,\n                        body: (0, async_iterable_js_1.pipe)(req.message, (0, async_iterable_js_1.transformNormalizeMessage)(method.I), (0, async_iterable_js_1.transformSerializeEnvelope)(serialization.getI(opt.useBinaryFormat)), (0, async_iterable_js_1.transformCompressEnvelope)(opt.sendCompression, opt.compressMinBytes), (0, async_iterable_js_1.transformJoinEnvelopes)(), { propagateDownStreamError: true }),\n                    });\n                    const { compression, foundStatus } = (0, validate_response_js_1.validateResponseWithCompression)(opt.acceptCompression, uRes.status, uRes.header);\n                    const res = Object.assign(Object.assign({}, req), { header: uRes.header, trailer: uRes.trailer, message: (0, async_iterable_js_1.pipe)(uRes.body, (0, async_iterable_js_1.transformSplitEnvelope)(opt.readMaxBytes), (0, async_iterable_js_1.transformDecompressEnvelope)(compression !== null && compression !== void 0 ? compression : null, opt.readMaxBytes), (0, async_iterable_js_1.transformParseEnvelope)(serialization.getO(opt.useBinaryFormat)), function (iterable) {\n                            return __asyncGenerator(this, arguments, function* () {\n                                yield __await(yield* __asyncDelegator(__asyncValues(iterable)));\n                                if (!foundStatus) {\n                                    (0, validate_trailer_js_1.validateTrailer)(uRes.trailer);\n                                }\n                            });\n                        }, { propagateDownStreamError: true }) });\n                    return res;\n                },\n            });\n        },\n    };\n}\nexports.createTransport = createTransport;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestHeaderWithCompression = exports.requestHeader = void 0;\nconst headers_js_1 = require(\"./headers.js\");\nconst content_type_js_1 = require(\"./content-type.js\");\n/**\n * Creates headers for a gRPC request.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders) {\n    const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n    result.set(headers_js_1.headerContentType, useBinaryFormat ? content_type_js_1.contentTypeProto : content_type_js_1.contentTypeJson);\n    // Note that we do not comply with recommended structure for the\n    // user-agent string.\n    // https://github.com/grpc/grpc/blob/c462bb8d485fc1434ecfae438823ca8d14cf3154/doc/PROTOCOL-HTTP2.md#user-agents\n    result.set(headers_js_1.headerUserAgent, \"@bufbuild/connect-web\");\n    if (timeoutMs !== undefined) {\n        result.set(headers_js_1.headerTimeout, `${timeoutMs}m`);\n    }\n    // The gRPC-HTTP2 specification requires this - it flushes out proxies that\n    // don't support HTTP trailers.\n    result.set(\"Te\", \"trailers\");\n    return result;\n}\nexports.requestHeader = requestHeader;\n/**\n * Creates headers for a gRPC request with compression.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction requestHeaderWithCompression(useBinaryFormat, timeoutMs, userProvidedHeaders, acceptCompression, sendCompression) {\n    const result = requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders);\n    if (sendCompression != null) {\n        result.set(headers_js_1.headerEncoding, sendCompression.name);\n    }\n    if (acceptCompression.length > 0) {\n        result.set(headers_js_1.headerAcceptEncoding, acceptCompression.map((c) => c.name).join(\",\"));\n    }\n    return result;\n}\nexports.requestHeaderWithCompression = requestHeaderWithCompression;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateResponseWithCompression = exports.validateResponse = void 0;\nconst http_status_js_1 = require(\"./http-status.js\");\nconst connect_error_js_1 = require(\"../connect-error.js\");\nconst trailer_status_js_1 = require(\"./trailer-status.js\");\nconst code_js_1 = require(\"../code.js\");\nconst headers_js_1 = require(\"./headers.js\");\n/**\n * Validates response status and header for the gRPC protocol.\n * Throws a ConnectError if the header contains an error status,\n * or if the HTTP status indicates an error.\n *\n * Returns an object that indicates whether a gRPC status was found\n * in the response header. In this case, clients can not expect a\n * trailer.\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponse(status, headers) {\n    if (status != 200) {\n        throw new connect_error_js_1.ConnectError(`HTTP ${status}`, (0, http_status_js_1.codeFromHttpStatus)(status), headers);\n    }\n    const err = (0, trailer_status_js_1.findTrailerError)(headers);\n    if (err) {\n        throw err;\n    }\n    return { foundStatus: headers.has(headers_js_1.headerGrpcStatus) };\n}\nexports.validateResponse = validateResponse;\n/**\n * Validates response status and header for the gRPC protocol.\n * This function is identical to validateResponse(), but also verifies\n * that a given encoding header is acceptable.\n *\n * Returns an object with the response compression, and a boolean\n * indicating whether a gRPC status was found in the response header\n * (in this case, clients can not expect a trailer).\n *\n * @private Internal code, does not follow semantic versioning.\n */\nfunction validateResponseWithCompression(acceptCompression, status, headers) {\n    const { foundStatus } = validateResponse(status, headers);\n    let compression;\n    const encoding = headers.get(headers_js_1.headerEncoding);\n    if (encoding !== null && encoding.toLowerCase() !== \"identity\") {\n        compression = acceptCompression.find((c) => c.name === encoding);\n        if (!compression) {\n            throw new connect_error_js_1.ConnectError(`unsupported response encoding \"${encoding}\"`, code_js_1.Code.InvalidArgument, headers);\n        }\n    }\n    return {\n        foundStatus,\n        compression,\n    };\n}\nexports.validateResponseWithCompression = validateResponseWithCompression;\n","import { MethodKind } from \"@bufbuild/protobuf\";\nimport { createPromiseClient, ConnectError } from \"@bufbuild/connect\";\nimport { createConnectTransport } from \"@bufbuild/connect-web\";\n\nimport type { PromiseClient } from \"@bufbuild/connect\";\n\nimport {\n  CreateGolinkRequest,\n  CreateGolinkResponse,\n} from \"../../gen/golink/v1/golink_pb\";\nimport { GolinkService } from \"../../gen/golink/v1/golink_connect\";\n\nconst golinkUrlKey = \"golinkUrl\";\n\nclass GolinkPopup {\n  client: PromiseClient<typeof GolinkService> | undefined;\n  url: string | null;\n\n  constructor(url: string | null) {\n    this.url = url;\n    if (this.url) {\n      if (!this.url.endsWith(\"/\")) {\n        this.url += \"/\";\n      }\n      this.api = this.url + \"api\";\n      this.buildClient();\n    }\n  }\n\n  public static async create(): Promise<GolinkPopup> {\n    const url = (await chrome.storage.sync.get(golinkUrlKey))[golinkUrlKey];\n    return new GolinkPopup(url);\n  }\n\n  public async initialize() {\n    const notConfiguredElem = document.getElementById(\"not-configured\");\n    const unauthenticatedElem = document.getElementById(\"unauthenticated\");\n    const golinkUiElem = document.getElementById(\"golink-ui\");\n\n    const showNotConfigured = () => {\n      notConfiguredElem.hidden = false;\n      unauthenticatedElem.hidden = true;\n      golinkUiElem.hidden = true;\n    };\n\n    const showUnauthenticated = () => {\n      notConfiguredElem.hidden = true;\n      unauthenticatedElem.hidden = false;\n      golinkUiElem.hidden = true;\n    };\n\n    const showGolinkUi = () => {\n      notConfiguredElem.hidden = true;\n      unauthenticatedElem.hidden = true;\n      golinkUiElem.hidden = false;\n    };\n\n    if (!this.url) {\n      showNotConfigured();\n      return;\n    }\n\n    if (await this.checkAuth()) {\n      const tabs = await chrome.tabs.query({\n        active: true,\n        currentWindow: true,\n      });\n      if (tabs.length > 0) {\n        const title = tabs[0].title || \"\";\n        document.getElementById(\"tab-title\").innerText = title;\n        document.getElementById(\"url\").value = tabs[0].url;\n        const match = title.match(/go\\/(?<name>[\\w-]+)/);\n        document.getElementById(\"name\").value = match?.groups?.name || \"\";\n      }\n      showGolinkUi();\n      await this.listGolinks();\n    } else {\n      showUnauthenticated();\n    }\n  }\n\n  public onSave = async () => {\n    const name = document.getElementById(\"name\").value;\n    const url = document.getElementById(\"url\").value;\n\n    if (!name || !url) {\n      alert(\"name and url are required\");\n      return;\n    }\n\n    try {\n      await this.client.createGolink({\n        name: name,\n        url: url,\n      });\n      document.getElementById(\"save\").hidden = true;\n      document.getElementById(\"saved\").hidden = false;\n    } catch (rawErr) {\n      const err = ConnectError.from(rawErr);\n      alert(err.message);\n    }\n  };\n\n  public openConsole = async () => {\n    chrome.tabs.create({ url: this.url + \"c\" });\n  };\n\n  private async checkAuth(): boolean {\n    try {\n      const res = await fetch(this.api + \"/healthz\", {\n        credentials: \"include\",\n      });\n      return res.status === 200;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  private buildClient() {\n    if (!this.url) return;\n\n    const transport = createConnectTransport({\n      baseUrl: this.api,\n      credentials: \"include\",\n    });\n    this.client = createPromiseClient(GolinkService, transport);\n  }\n\n  private async listGolinks() {\n    const url = document.getElementById(\"url\").value;\n    if (!url) return;\n\n    try {\n      const res = await this.client.listGolinksByUrl({ url });\n      const golinks = res.golinks;\n\n      if (golinks.length === 0) return;\n\n      const ul = document.getElementById(\"golinks\");\n      golinks.forEach((golink) => {\n        const li = document.createElement(\"li\");\n        const a = document.createElement(\"a\");\n        a.href = golink.url;\n        a.innerText = \"go/\" + golink.name;\n        li.appendChild(a);\n        ul.appendChild(li);\n      });\n\n      document.getElementById(\"golinks-container\").hidden = false;\n    } catch (rawErr) {\n      const err = ConnectError.from(rawErr);\n      alert(err.message);\n    }\n  }\n}\n\nasync function initialize() {\n  const popup = await GolinkPopup.create();\n  await popup.initialize();\n\n  document\n    .getElementById(\"open-options\")\n    .addEventListener(\"click\", async () => {\n      await chrome.runtime.openOptionsPage();\n    });\n  document\n    .getElementById(\"open-console\")\n    .addEventListener(\"click\", popup.openConsole);\n  document.getElementById(\"save\").addEventListener(\"click\", popup.onSave);\n  console.log(\"initialized\");\n}\n\ninitialize();\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRouterTransport = exports.createMethodImplSpec = exports.createServiceImplSpec = exports.makeAnyClient = exports.runStreaming = exports.runUnary = exports.cors = exports.createHandlerContext = exports.createConnectRouter = exports.createPromiseClient = exports.createCallbackClient = exports.appendHeaders = exports.decodeBinaryHeader = exports.encodeBinaryHeader = exports.Code = exports.connectErrorFromReason = exports.connectErrorDetails = exports.ConnectError = void 0;\nvar connect_error_js_1 = require(\"./connect-error.js\");\nObject.defineProperty(exports, \"ConnectError\", { enumerable: true, get: function () { return connect_error_js_1.ConnectError; } });\nObject.defineProperty(exports, \"connectErrorDetails\", { enumerable: true, get: function () { return connect_error_js_1.connectErrorDetails; } });\nObject.defineProperty(exports, \"connectErrorFromReason\", { enumerable: true, get: function () { return connect_error_js_1.connectErrorFromReason; } });\nvar code_js_1 = require(\"./code.js\");\nObject.defineProperty(exports, \"Code\", { enumerable: true, get: function () { return code_js_1.Code; } });\nvar http_headers_js_1 = require(\"./http-headers.js\");\nObject.defineProperty(exports, \"encodeBinaryHeader\", { enumerable: true, get: function () { return http_headers_js_1.encodeBinaryHeader; } });\nObject.defineProperty(exports, \"decodeBinaryHeader\", { enumerable: true, get: function () { return http_headers_js_1.decodeBinaryHeader; } });\nObject.defineProperty(exports, \"appendHeaders\", { enumerable: true, get: function () { return http_headers_js_1.appendHeaders; } });\nvar callback_client_js_1 = require(\"./callback-client.js\");\nObject.defineProperty(exports, \"createCallbackClient\", { enumerable: true, get: function () { return callback_client_js_1.createCallbackClient; } });\nvar promise_client_js_1 = require(\"./promise-client.js\");\nObject.defineProperty(exports, \"createPromiseClient\", { enumerable: true, get: function () { return promise_client_js_1.createPromiseClient; } });\nvar router_js_1 = require(\"./router.js\");\nObject.defineProperty(exports, \"createConnectRouter\", { enumerable: true, get: function () { return router_js_1.createConnectRouter; } });\nvar implementation_js_1 = require(\"./implementation.js\");\nObject.defineProperty(exports, \"createHandlerContext\", { enumerable: true, get: function () { return implementation_js_1.createHandlerContext; } });\nvar cors_js_1 = require(\"./cors.js\");\nObject.defineProperty(exports, \"cors\", { enumerable: true, get: function () { return cors_js_1.cors; } });\n// TODO(TCN-1261)\n// Symbols above should be relevant to end users.\n// Symbols below should only be relevant for other libraries.\nvar legacy_interceptor_js_1 = require(\"./legacy-interceptor.js\");\nObject.defineProperty(exports, \"runUnary\", { enumerable: true, get: function () { return legacy_interceptor_js_1.runUnary; } });\nObject.defineProperty(exports, \"runStreaming\", { enumerable: true, get: function () { return legacy_interceptor_js_1.runStreaming; } });\nvar any_client_js_1 = require(\"./any-client.js\");\nObject.defineProperty(exports, \"makeAnyClient\", { enumerable: true, get: function () { return any_client_js_1.makeAnyClient; } });\nvar implementation_js_2 = require(\"./implementation.js\");\nObject.defineProperty(exports, \"createServiceImplSpec\", { enumerable: true, get: function () { return implementation_js_2.createServiceImplSpec; } });\nObject.defineProperty(exports, \"createMethodImplSpec\", { enumerable: true, get: function () { return implementation_js_2.createMethodImplSpec; } });\nvar router_transport_js_1 = require(\"./router-transport.js\");\nObject.defineProperty(exports, \"createRouterTransport\", { enumerable: true, get: function () { return router_transport_js_1.createRouterTransport; } });\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCallbackClient = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst connect_error_js_1 = require(\"./connect-error.js\");\nconst code_js_1 = require(\"./code.js\");\nconst any_client_js_1 = require(\"./any-client.js\");\nconst async_iterable_js_1 = require(\"./protocol/async-iterable.js\");\n/**\n * Create a CallbackClient for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createCallbackClient(service, transport) {\n    return (0, any_client_js_1.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case protobuf_1.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case protobuf_1.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\nexports.createCallbackClient = createCallbackClient;\nfunction createUnaryFn(transport, service, method) {\n    return function (requestMessage, callback, options) {\n        const abort = new AbortController();\n        options = wrapSignal(abort, options);\n        transport\n            .unary(service, method, abort.signal, options.timeoutMs, options.headers, requestMessage)\n            .then((response) => {\n            var _a, _b;\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n            callback(undefined, response.message);\n        }, (reason) => {\n            const err = connect_error_js_1.ConnectError.from(reason, code_js_1.Code.Internal);\n            if (err.code === code_js_1.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user.\n                return;\n            }\n            callback(err, new method.O());\n        });\n        return () => abort.abort();\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, onResponse, onClose, options) {\n        const abort = new AbortController();\n        const inputMessage = input instanceof method.I ? input : new method.I(input);\n        async function run() {\n            var _a, e_1, _b, _c;\n            var _d, _e;\n            options = wrapSignal(abort, options);\n            const response = await transport.stream(service, method, options.signal, options.timeoutMs, options.headers, (0, async_iterable_js_1.createAsyncIterable)([inputMessage]));\n            (_d = options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n            try {\n                for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a;) {\n                    _c = _h.value;\n                    _f = false;\n                    try {\n                        const message = _c;\n                        onResponse(message);\n                    }\n                    finally {\n                        _f = true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            (_e = options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n            onClose(undefined);\n        }\n        run().catch((reason) => {\n            const err = connect_error_js_1.ConnectError.from(reason, code_js_1.Code.Internal);\n            if (err.code === code_js_1.Code.Canceled && abort.signal.aborted) {\n                // As documented, discard Canceled errors if canceled by the user,\n                // but do invoke the close-callback.\n                onClose(undefined);\n            }\n            else {\n                onClose(err);\n            }\n        });\n        return () => abort.abort();\n    };\n}\nfunction wrapSignal(abort, options) {\n    if (options === null || options === void 0 ? void 0 : options.signal) {\n        options.signal.addEventListener(\"abort\", () => abort.abort());\n        if (options.signal.aborted) {\n            abort.abort();\n        }\n    }\n    return Object.assign(Object.assign({}, options), { signal: abort.signal });\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeAnyClient = void 0;\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */\nfunction makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), { localName,\n            service }));\n        if (method != null) {\n            client[localName] = method;\n        }\n    }\n    return client;\n}\nexports.makeAnyClient = makeAnyClient;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __asyncDelegator = (this && this.__asyncDelegator) || function (o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n};\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBiDiStreamingFn = exports.createClientStreamingFn = exports.createServerStreamingFn = exports.createPromiseClient = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst any_client_js_1 = require(\"./any-client.js\");\nconst connect_error_js_1 = require(\"./connect-error.js\");\nconst code_js_1 = require(\"./code.js\");\nconst async_iterable_js_1 = require(\"./protocol/async-iterable.js\");\n/**\n * Create a PromiseClient for the given service, invoking RPCs through the\n * given transport.\n */\nfunction createPromiseClient(service, transport) {\n    return (0, any_client_js_1.makeAnyClient)(service, (method) => {\n        switch (method.kind) {\n            case protobuf_1.MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case protobuf_1.MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            case protobuf_1.MethodKind.ClientStreaming:\n                return createClientStreamingFn(transport, service, method);\n            case protobuf_1.MethodKind.BiDiStreaming:\n                return createBiDiStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\nexports.createPromiseClient = createPromiseClient;\nfunction createUnaryFn(transport, service, method) {\n    return async function (input, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (input, options) {\n        var _a, _b;\n        return __asyncGenerator(this, arguments, function* () {\n            const inputMessage = input instanceof method.I ? input : new method.I(input);\n            const response = yield __await(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, (0, async_iterable_js_1.createAsyncIterable)([inputMessage])));\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            yield __await(yield* __asyncDelegator(__asyncValues(response.message)));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        });\n    };\n}\nexports.createServerStreamingFn = createServerStreamingFn;\nfunction createClientStreamingFn(transport, service, method) {\n    return async function (request, options) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        function input() {\n            return __asyncGenerator(this, arguments, function* input_1() {\n                var _a, e_2, _b, _c;\n                try {\n                    for (var _d = true, request_1 = __asyncValues(request), request_1_1; request_1_1 = yield __await(request_1.next()), _a = request_1_1.done, !_a;) {\n                        _c = request_1_1.value;\n                        _d = false;\n                        try {\n                            const partial = _c;\n                            yield yield __await(partial instanceof method.I ? partial : new method.I(partial));\n                        }\n                        finally {\n                            _d = true;\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = request_1.return)) yield __await(_b.call(request_1));\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            });\n        }\n        const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input());\n        (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n        let singleMessage;\n        try {\n            for (var _f = true, _g = __asyncValues(response.message), _h; _h = await _g.next(), _a = _h.done, !_a;) {\n                _c = _h.value;\n                _f = false;\n                try {\n                    const message = _c;\n                    singleMessage = message;\n                }\n                finally {\n                    _f = true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (!singleMessage) {\n            throw new connect_error_js_1.ConnectError(\"protocol error: missing response message\", code_js_1.Code.Internal);\n        }\n        (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n        return singleMessage;\n    };\n}\nexports.createClientStreamingFn = createClientStreamingFn;\nfunction createBiDiStreamingFn(transport, service, method) {\n    return function (request, options) {\n        var _a, _b;\n        return __asyncGenerator(this, arguments, function* () {\n            function input() {\n                return __asyncGenerator(this, arguments, function* input_2() {\n                    var _a, e_3, _b, _c;\n                    try {\n                        for (var _d = true, request_2 = __asyncValues(request), request_2_1; request_2_1 = yield __await(request_2.next()), _a = request_2_1.done, !_a;) {\n                            _c = request_2_1.value;\n                            _d = false;\n                            try {\n                                const partial = _c;\n                                yield yield __await(partial instanceof method.I ? partial : new method.I(partial));\n                            }\n                            finally {\n                                _d = true;\n                            }\n                        }\n                    }\n                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = request_2.return)) yield __await(_b.call(request_2));\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                    }\n                });\n            }\n            const response = yield __await(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input()));\n            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n            yield __await(yield* __asyncDelegator(__asyncValues(response.message)));\n            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        });\n    };\n}\nexports.createBiDiStreamingFn = createBiDiStreamingFn;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnectRouter = void 0;\nconst connect_error_js_1 = require(\"./connect-error.js\");\nconst code_js_1 = require(\"./code.js\");\nconst implementation_js_1 = require(\"./implementation.js\");\nconst handler_factory_js_1 = require(\"./protocol-grpc-web/handler-factory.js\");\nconst handler_factory_js_2 = require(\"./protocol-grpc/handler-factory.js\");\nconst handler_factory_js_3 = require(\"./protocol-connect/handler-factory.js\");\nconst universal_handler_js_1 = require(\"./protocol/universal-handler.js\");\n/**\n * Create a new ConnectRouter.\n */\nfunction createConnectRouter(routerOptions) {\n    const base = whichProtocols(routerOptions);\n    const handlers = [];\n    return {\n        handlers,\n        service(service, implementation, options) {\n            const { protocols } = whichProtocols(options, base);\n            handlers.push(...(0, universal_handler_js_1.createUniversalServiceHandlers)((0, implementation_js_1.createServiceImplSpec)(service, implementation), protocols));\n            return this;\n        },\n        rpc(service, method, implementation, options) {\n            const { protocols } = whichProtocols(options, base);\n            handlers.push((0, universal_handler_js_1.createUniversalMethodHandler)((0, implementation_js_1.createMethodImplSpec)(service, method, implementation), protocols));\n            return this;\n        },\n    };\n}\nexports.createConnectRouter = createConnectRouter;\nfunction whichProtocols(options, base) {\n    if (base && !options) {\n        return base;\n    }\n    const opt = base\n        ? Object.assign(Object.assign({}, (0, universal_handler_js_1.validateUniversalHandlerOptions)(base.options)), options) : Object.assign(Object.assign({}, options), (0, universal_handler_js_1.validateUniversalHandlerOptions)(options !== null && options !== void 0 ? options : {}));\n    const protocols = [];\n    if ((options === null || options === void 0 ? void 0 : options.grpc) !== false) {\n        protocols.push((0, handler_factory_js_2.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.grpcWeb) !== false) {\n        protocols.push((0, handler_factory_js_1.createHandlerFactory)(opt));\n    }\n    if ((options === null || options === void 0 ? void 0 : options.connect) !== false) {\n        protocols.push((0, handler_factory_js_3.createHandlerFactory)(opt));\n    }\n    if (protocols.length === 0) {\n        throw new connect_error_js_1.ConnectError(\"cannot create handler, all protocols are disabled\", code_js_1.Code.InvalidArgument);\n    }\n    return {\n        options: opt,\n        protocols,\n    };\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cors = void 0;\nconst connect = require(\"./protocol-connect/headers.js\");\nconst grpc = require(\"./protocol-grpc/headers.js\");\nconst grpcWeb = require(\"./protocol-grpc-web/headers.js\");\n/**\n * CORS prevents rogue scripts in a web browser from making arbitrary requests\n * to other web servers.\n *\n * This object provides helpful constants to configure CORS middleware for\n * cross-domain requests with the protocols supported by Connect.\n *\n * Make sure to add application-specific headers that your application\n * uses as well.\n */\nexports.cors = {\n    /**\n     * Request methods that scripts running in the browser are permitted to use.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these headers fields must be included in the preflight response header\n     * Access-Control-Allow-Methods.\n     */\n    allowedMethods: [\"POST\", \"GET\"],\n    /**\n     * Header fields that scripts running in the browser are permitted to send.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in the preflight response header\n     * Access-Control-Allow-Headers.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * may send.\n     */\n    allowedHeaders: [\n        connect.headerContentType,\n        connect.headerProtocolVersion,\n        connect.headerTimeout,\n        connect.headerStreamEncoding,\n        connect.headerStreamAcceptEncoding,\n        connect.headerUnaryEncoding,\n        connect.headerUnaryAcceptEncoding,\n        grpc.headerMessageType,\n        grpcWeb.headerXGrpcWeb,\n        grpcWeb.headerXUserAgent,\n        grpcWeb.headerTimeout,\n    ],\n    /**\n     * Header fields that scripts running the browser are permitted to see.\n     *\n     * To support cross-domain requests with the protocols supported by Connect,\n     * these field names must be included in header Access-Control-Expose-Headers\n     * of the actual response.\n     *\n     * Make sure to include any application-specific headers your browser client\n     * should see. If your application uses trailers, they will be sent as header\n     * fields with a `Trailer-` prefix for Connect unary RPCs - make sure to\n     * expose them as well if you want them to be visible in all supported\n     * protocols.\n     */\n    exposedHeaders: [\n        grpcWeb.headerGrpcStatus,\n        grpcWeb.headerGrpcMessage,\n        grpcWeb.headerStatusDetailsBin,\n        connect.headerUnaryEncoding,\n        connect.headerStreamEncoding, // Unused in web browsers, but added for future-proofing\n    ],\n};\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runStreaming = exports.runUnary = void 0;\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n *\n * @deprecated Use runUnaryCall from @bufbuild/connect/protocol instead.\n */\nfunction runUnary(req, next, interceptors) {\n    if (interceptors) {\n        next = applyInterceptors(next, interceptors);\n    }\n    return next(req);\n}\nexports.runUnary = runUnary;\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n *\n * @deprecated Use runStreamingCall from @bufbuild/connect/protocol instead.\n */\nfunction runStreaming(req, next, interceptors) {\n    if (interceptors) {\n        next = applyInterceptors(next, interceptors);\n    }\n    return next(req);\n}\nexports.runStreaming = runStreaming;\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    return interceptors\n        .concat()\n        .reverse()\n        .reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n), next // eslint-disable-line @typescript-eslint/no-explicit-any\n    );\n}\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRouterTransport = void 0;\nconst transport_js_1 = require(\"./protocol-connect/transport.js\");\nconst universal_handler_client_js_1 = require(\"./protocol/universal-handler-client.js\");\nconst router_js_1 = require(\"./router.js\");\n/**\n * Creates a Transport that routes requests to the configured router. Useful for testing\n * and calling services running in the same process.\n *\n * This can be used to test both client logic by using this to stub/mock the backend,\n * and to test server logic by using this to run without needing to spin up a server.\n */\nfunction createRouterTransport(routes, options) {\n    var _a, _b;\n    const router = (0, router_js_1.createConnectRouter)(Object.assign(Object.assign({}, ((_a = options === null || options === void 0 ? void 0 : options.router) !== null && _a !== void 0 ? _a : {})), { connect: true }));\n    routes(router);\n    return (0, transport_js_1.createTransport)(Object.assign({ httpClient: (0, universal_handler_client_js_1.createUniversalHandlerClient)(router.handlers), baseUrl: \"https://in-memory\", useBinaryFormat: true, interceptors: [], acceptCompression: [], sendCompression: null, compressMinBytes: Number.MAX_SAFE_INTEGER, readMaxBytes: Number.MAX_SAFE_INTEGER, writeMaxBytes: Number.MAX_SAFE_INTEGER }, ((_b = options === null || options === void 0 ? void 0 : options.transport) !== null && _b !== void 0 ? _b : {})));\n}\nexports.createRouterTransport = createRouterTransport;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createGrpcWebTransport = exports.createConnectTransport = void 0;\nvar connect_transport_js_1 = require(\"./connect-transport.js\");\nObject.defineProperty(exports, \"createConnectTransport\", { enumerable: true, get: function () { return connect_transport_js_1.createConnectTransport; } });\nvar grpc_web_transport_js_1 = require(\"./grpc-web-transport.js\");\nObject.defineProperty(exports, \"createGrpcWebTransport\", { enumerable: true, get: function () { return grpc_web_transport_js_1.createGrpcWebTransport; } });\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConnectTransport = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst connect_1 = require(\"@bufbuild/connect\");\nconst protocol_1 = require(\"@bufbuild/connect/protocol\");\nconst protocol_connect_1 = require(\"@bufbuild/connect/protocol-connect\");\nconst assert_fetch_api_js_1 = require(\"./assert-fetch-api.js\");\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */\nfunction createConnectTransport(options) {\n    var _a;\n    (0, assert_fetch_api_js_1.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message) {\n            var _a;\n            const { normalize, serialize, parse } = (0, protocol_1.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            return await (0, protocol_1.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0, protocol_1.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, protocol_connect_1.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header),\n                    message: normalize(message),\n                },\n                next: async (req) => {\n                    var _a;\n                    const useGet = options.useHttpGet === true &&\n                        method.idempotency === protobuf_1.MethodIdempotency.NoSideEffects;\n                    let body = null;\n                    if (useGet) {\n                        req = (0, protocol_connect_1.transformConnectPostToGetRequest)(req, serialize(req.message), useBinaryFormat);\n                    }\n                    else {\n                        body = serialize(req.message);\n                    }\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body }));\n                    const { isUnaryError, unaryError } = (0, protocol_connect_1.validateResponse)(method.kind, response.status, response.headers);\n                    if (isUnaryError) {\n                        throw (0, protocol_connect_1.errorFromJson)((await response.json()), (0, connect_1.appendHeaders)(...(0, protocol_connect_1.trailerDemux)(response.headers)), unaryError);\n                    }\n                    const [demuxedHeader, demuxedTrailer] = (0, protocol_connect_1.trailerDemux)(response.headers);\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat\n                            ? parse(new Uint8Array(await response.arrayBuffer()))\n                            : method.O.fromJson((await response.json()), (0, protocol_1.getJsonOptions)(options.jsonOptions)),\n                        trailer: demuxedTrailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input) {\n            var _a;\n            const { serialize, parse } = (0, protocol_1.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, trailerTarget) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0, protocol_1.createEnvelopeReadableStream)(body).getReader();\n                    let endStreamReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & protocol_connect_1.endStreamFlag) === protocol_connect_1.endStreamFlag) {\n                            endStreamReceived = true;\n                            const endStream = (0, protocol_connect_1.endStreamFromJson)(data);\n                            if (endStream.error) {\n                                throw endStream.error;\n                            }\n                            endStream.metadata.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        yield yield __await(parse(data));\n                    }\n                    if (!endStreamReceived) {\n                        throw \"missing EndStreamResponse\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != protobuf_1.MethodKind.ServerStreaming) {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0, protocol_1.encodeEnvelope)(0, serialize(r.value));\n            }\n            return await (0, protocol_1.runStreamingCall)({\n                interceptors: options.interceptors,\n                timeoutMs,\n                signal,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0, protocol_1.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, protocol_connect_1.requestHeader)(method.kind, useBinaryFormat, timeoutMs, header),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    (0, protocol_connect_1.validateResponse)(method.kind, fRes.status, fRes.headers);\n                    if (fRes.body === null) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, trailer) });\n                    return res;\n                },\n            });\n        },\n    };\n}\nexports.createConnectTransport = createConnectTransport;\n","// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// workaround for bundlers that do not support subpath exports.\nmodule.exports = require(\"./dist/cjs/protocol/index.js\");\n","// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Workaround for bundlers that do not support subpath exports.\nmodule.exports = require(\"./dist/cjs/protocol-connect/index.js\");\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertFetchApi = void 0;\n/**\n * Asserts that the fetch API is available.\n */\nfunction assertFetchApi() {\n    try {\n        new Headers();\n    }\n    catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\nexports.assertFetchApi = assertFetchApi;\n","\"use strict\";\n// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createGrpcWebTransport = void 0;\nconst protobuf_1 = require(\"@bufbuild/protobuf\");\nconst protocol_1 = require(\"@bufbuild/connect/protocol\");\nconst protocol_grpc_web_1 = require(\"@bufbuild/connect/protocol-grpc-web\");\nconst assert_fetch_api_js_1 = require(\"./assert-fetch-api.js\");\n/**\n * Create a Transport for the gRPC-web protocol. The protocol encodes\n * trailers in the response body and makes unary and server-streaming\n * methods available to web browsers. It uses the fetch API to make\n * HTTP requests.\n *\n * Note that this transport does not implement the grpc-web-text format,\n * which applies base64 encoding to the request and response bodies to\n * support reading streaming responses from an XMLHttpRequest.\n */\nfunction createGrpcWebTransport(options) {\n    var _a;\n    (0, assert_fetch_api_js_1.assertFetchApi)();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message) {\n            var _a;\n            const { normalize, serialize, parse } = (0, protocol_1.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            return await (0, protocol_1.runUnaryCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: false,\n                    service,\n                    method,\n                    url: (0, protocol_1.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, protocol_grpc_web_1.requestHeader)(useBinaryFormat, timeoutMs, header),\n                    message: normalize(message),\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: (0, protocol_1.encodeEnvelope)(0, serialize(req.message)) }));\n                    (0, protocol_grpc_web_1.validateResponse)(response.status, response.headers);\n                    if (!response.body) {\n                        throw \"missing response body\";\n                    }\n                    const reader = (0, protocol_1.createEnvelopeReadableStream)(response.body).getReader();\n                    let trailer;\n                    let message;\n                    for (;;) {\n                        const r = await reader.read();\n                        if (r.done) {\n                            break;\n                        }\n                        const { flags, data } = r.value;\n                        if (flags === protocol_grpc_web_1.trailerFlag) {\n                            if (trailer !== undefined) {\n                                throw \"extra trailer\";\n                            }\n                            // Unary responses require exactly one response message, but in\n                            // case of an error, it is perfectly valid to have a response body\n                            // that only contains error trailers.\n                            trailer = (0, protocol_grpc_web_1.trailerParse)(data);\n                            continue;\n                        }\n                        if (message !== undefined) {\n                            throw \"extra message\";\n                        }\n                        message = parse(data);\n                    }\n                    if (trailer === undefined) {\n                        throw \"missing trailer\";\n                    }\n                    (0, protocol_grpc_web_1.validateTrailer)(trailer);\n                    if (message === undefined) {\n                        throw \"missing message\";\n                    }\n                    return {\n                        stream: false,\n                        header: response.headers,\n                        message,\n                        trailer,\n                    };\n                },\n            });\n        },\n        async stream(service, method, signal, timeoutMs, header, input) {\n            var _a;\n            const { serialize, parse } = (0, protocol_1.createClientMethodSerializers)(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n            function parseResponseBody(body, foundStatus, trailerTarget) {\n                return __asyncGenerator(this, arguments, function* parseResponseBody_1() {\n                    const reader = (0, protocol_1.createEnvelopeReadableStream)(body).getReader();\n                    if (foundStatus) {\n                        // A grpc-status: 0 response header was present. This is a \"trailers-only\"\n                        // response (a response without a body and no trailers).\n                        //\n                        // The spec seems to disallow a trailers-only response for status 0 - we are\n                        // lenient and only verify that the body is empty.\n                        //\n                        // > [...] Trailers-Only is permitted for calls that produce an immediate error.\n                        // See https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md\n                        if (!(yield __await(reader.read())).done) {\n                            throw \"extra data for trailers-only\";\n                        }\n                        return yield __await(void 0);\n                    }\n                    let trailerReceived = false;\n                    for (;;) {\n                        const result = yield __await(reader.read());\n                        if (result.done) {\n                            break;\n                        }\n                        const { flags, data } = result.value;\n                        if ((flags & protocol_grpc_web_1.trailerFlag) === protocol_grpc_web_1.trailerFlag) {\n                            if (trailerReceived) {\n                                throw \"extra trailer\";\n                            }\n                            trailerReceived = true;\n                            const trailer = (0, protocol_grpc_web_1.trailerParse)(data);\n                            (0, protocol_grpc_web_1.validateTrailer)(trailer);\n                            trailer.forEach((value, key) => trailerTarget.set(key, value));\n                            continue;\n                        }\n                        if (trailerReceived) {\n                            throw \"extra message\";\n                        }\n                        yield yield __await(parse(data));\n                        continue;\n                    }\n                    if (!trailerReceived) {\n                        throw \"missing trailer\";\n                    }\n                });\n            }\n            async function createRequestBody(input) {\n                if (method.kind != protobuf_1.MethodKind.ServerStreaming) {\n                    throw \"The fetch API does not support streaming request bodies\";\n                }\n                const r = await input[Symbol.asyncIterator]().next();\n                if (r.done == true) {\n                    throw \"missing request message\";\n                }\n                return (0, protocol_1.encodeEnvelope)(0, serialize(r.value));\n            }\n            return (0, protocol_1.runStreamingCall)({\n                interceptors: options.interceptors,\n                signal,\n                timeoutMs,\n                req: {\n                    stream: true,\n                    service,\n                    method,\n                    url: (0, protocol_1.createMethodUrl)(options.baseUrl, service, method),\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: (0, protocol_grpc_web_1.requestHeader)(useBinaryFormat, timeoutMs, header),\n                    message: input,\n                },\n                next: async (req) => {\n                    var _a;\n                    const fetch = (_a = options.fetch) !== null && _a !== void 0 ? _a : globalThis.fetch;\n                    const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n                    const { foundStatus } = (0, protocol_grpc_web_1.validateResponse)(fRes.status, fRes.headers);\n                    if (!fRes.body) {\n                        throw \"missing response body\";\n                    }\n                    const trailer = new Headers();\n                    const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, foundStatus, trailer) });\n                    return res;\n                },\n            });\n        },\n    };\n}\nexports.createGrpcWebTransport = createGrpcWebTransport;\n","// Copyright 2021-2023 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// workaround for bundlers that do not support subpath exports.\nmodule.exports = require(\"./dist/cjs/protocol-grpc-web/index.js\");\n","// @generated by protoc-gen-connect-es v0.12.0 with parameter \"target=ts\"\n// @generated from file golink/v1/golink.proto (package golink.v1, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport { AddOwnerRequest, AddOwnerResponse, CreateGolinkRequest, CreateGolinkResponse, DeleteGolinkRequest, DeleteGolinkResponse, GetGolinkRequest, GetGolinkResponse, ListGolinksByUrlRequest, ListGolinksByUrlResponse, ListGolinksRequest, ListGolinksResponse, RemoveOwnerRequest, RemoveOwnerResponse, UpdateGolinkRequest, UpdateGolinkResponse } from \"./golink_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from service golink.v1.GolinkService\n */\nexport const GolinkService = {\n  typeName: \"golink.v1.GolinkService\",\n  methods: {\n    /**\n     * @generated from rpc golink.v1.GolinkService.CreateGolink\n     */\n    createGolink: {\n      name: \"CreateGolink\",\n      I: CreateGolinkRequest,\n      O: CreateGolinkResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.GetGolink\n     */\n    getGolink: {\n      name: \"GetGolink\",\n      I: GetGolinkRequest,\n      O: GetGolinkResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.ListGolinks\n     */\n    listGolinks: {\n      name: \"ListGolinks\",\n      I: ListGolinksRequest,\n      O: ListGolinksResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.ListGolinksByUrl\n     */\n    listGolinksByUrl: {\n      name: \"ListGolinksByUrl\",\n      I: ListGolinksByUrlRequest,\n      O: ListGolinksByUrlResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.UpdateGolink\n     */\n    updateGolink: {\n      name: \"UpdateGolink\",\n      I: UpdateGolinkRequest,\n      O: UpdateGolinkResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.DeleteGolink\n     */\n    deleteGolink: {\n      name: \"DeleteGolink\",\n      I: DeleteGolinkRequest,\n      O: DeleteGolinkResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.AddOwner\n     */\n    addOwner: {\n      name: \"AddOwner\",\n      I: AddOwnerRequest,\n      O: AddOwnerResponse,\n      kind: MethodKind.Unary,\n    },\n    /**\n     * @generated from rpc golink.v1.GolinkService.RemoveOwner\n     */\n    removeOwner: {\n      name: \"RemoveOwner\",\n      I: RemoveOwnerRequest,\n      O: RemoveOwnerResponse,\n      kind: MethodKind.Unary,\n    },\n  }\n} as const;\n\n","// @generated by protoc-gen-es v1.3.0 with parameter \"target=ts\"\n// @generated from file golink/v1/golink.proto (package golink.v1, syntax proto3)\n/* eslint-disable */\n// @ts-nocheck\n\nimport type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from \"@bufbuild/protobuf\";\nimport { Message, proto3 } from \"@bufbuild/protobuf\";\n\n/**\n * @generated from message golink.v1.Golink\n */\nexport class Golink extends Message<Golink> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: string url = 2;\n   */\n  url = \"\";\n\n  /**\n   * @generated from field: repeated string owners = 3;\n   */\n  owners: string[] = [];\n\n  constructor(data?: PartialMessage<Golink>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.Golink\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"owners\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Golink {\n    return new Golink().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Golink {\n    return new Golink().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Golink {\n    return new Golink().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: Golink | PlainMessage<Golink> | undefined, b: Golink | PlainMessage<Golink> | undefined): boolean {\n    return proto3.util.equals(Golink, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.CreateGolinkRequest\n */\nexport class CreateGolinkRequest extends Message<CreateGolinkRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: string url = 2;\n   */\n  url = \"\";\n\n  constructor(data?: PartialMessage<CreateGolinkRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.CreateGolinkRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGolinkRequest {\n    return new CreateGolinkRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGolinkRequest {\n    return new CreateGolinkRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGolinkRequest {\n    return new CreateGolinkRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateGolinkRequest | PlainMessage<CreateGolinkRequest> | undefined, b: CreateGolinkRequest | PlainMessage<CreateGolinkRequest> | undefined): boolean {\n    return proto3.util.equals(CreateGolinkRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.CreateGolinkResponse\n */\nexport class CreateGolinkResponse extends Message<CreateGolinkResponse> {\n  /**\n   * @generated from field: golink.v1.Golink golink = 1;\n   */\n  golink?: Golink;\n\n  constructor(data?: PartialMessage<CreateGolinkResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.CreateGolinkResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golink\", kind: \"message\", T: Golink },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateGolinkResponse {\n    return new CreateGolinkResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateGolinkResponse {\n    return new CreateGolinkResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateGolinkResponse {\n    return new CreateGolinkResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: CreateGolinkResponse | PlainMessage<CreateGolinkResponse> | undefined, b: CreateGolinkResponse | PlainMessage<CreateGolinkResponse> | undefined): boolean {\n    return proto3.util.equals(CreateGolinkResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.GetGolinkRequest\n */\nexport class GetGolinkRequest extends Message<GetGolinkRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  constructor(data?: PartialMessage<GetGolinkRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.GetGolinkRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGolinkRequest {\n    return new GetGolinkRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGolinkRequest {\n    return new GetGolinkRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGolinkRequest {\n    return new GetGolinkRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetGolinkRequest | PlainMessage<GetGolinkRequest> | undefined, b: GetGolinkRequest | PlainMessage<GetGolinkRequest> | undefined): boolean {\n    return proto3.util.equals(GetGolinkRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.GetGolinkResponse\n */\nexport class GetGolinkResponse extends Message<GetGolinkResponse> {\n  /**\n   * @generated from field: golink.v1.Golink golink = 1;\n   */\n  golink?: Golink;\n\n  constructor(data?: PartialMessage<GetGolinkResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.GetGolinkResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golink\", kind: \"message\", T: Golink },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetGolinkResponse {\n    return new GetGolinkResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetGolinkResponse {\n    return new GetGolinkResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetGolinkResponse {\n    return new GetGolinkResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: GetGolinkResponse | PlainMessage<GetGolinkResponse> | undefined, b: GetGolinkResponse | PlainMessage<GetGolinkResponse> | undefined): boolean {\n    return proto3.util.equals(GetGolinkResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.ListGolinksRequest\n */\nexport class ListGolinksRequest extends Message<ListGolinksRequest> {\n  /**\n   * @generated from field: string owner = 1;\n   */\n  owner = \"\";\n\n  constructor(data?: PartialMessage<ListGolinksRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.ListGolinksRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"owner\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGolinksRequest {\n    return new ListGolinksRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGolinksRequest {\n    return new ListGolinksRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGolinksRequest {\n    return new ListGolinksRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListGolinksRequest | PlainMessage<ListGolinksRequest> | undefined, b: ListGolinksRequest | PlainMessage<ListGolinksRequest> | undefined): boolean {\n    return proto3.util.equals(ListGolinksRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.ListGolinksResponse\n */\nexport class ListGolinksResponse extends Message<ListGolinksResponse> {\n  /**\n   * @generated from field: repeated golink.v1.Golink golinks = 1;\n   */\n  golinks: Golink[] = [];\n\n  constructor(data?: PartialMessage<ListGolinksResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.ListGolinksResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golinks\", kind: \"message\", T: Golink, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGolinksResponse {\n    return new ListGolinksResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGolinksResponse {\n    return new ListGolinksResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGolinksResponse {\n    return new ListGolinksResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListGolinksResponse | PlainMessage<ListGolinksResponse> | undefined, b: ListGolinksResponse | PlainMessage<ListGolinksResponse> | undefined): boolean {\n    return proto3.util.equals(ListGolinksResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.ListGolinksByUrlRequest\n */\nexport class ListGolinksByUrlRequest extends Message<ListGolinksByUrlRequest> {\n  /**\n   * @generated from field: string url = 1;\n   */\n  url = \"\";\n\n  constructor(data?: PartialMessage<ListGolinksByUrlRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.ListGolinksByUrlRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGolinksByUrlRequest {\n    return new ListGolinksByUrlRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGolinksByUrlRequest {\n    return new ListGolinksByUrlRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGolinksByUrlRequest {\n    return new ListGolinksByUrlRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListGolinksByUrlRequest | PlainMessage<ListGolinksByUrlRequest> | undefined, b: ListGolinksByUrlRequest | PlainMessage<ListGolinksByUrlRequest> | undefined): boolean {\n    return proto3.util.equals(ListGolinksByUrlRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.ListGolinksByUrlResponse\n */\nexport class ListGolinksByUrlResponse extends Message<ListGolinksByUrlResponse> {\n  /**\n   * @generated from field: repeated golink.v1.Golink golinks = 1;\n   */\n  golinks: Golink[] = [];\n\n  constructor(data?: PartialMessage<ListGolinksByUrlResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.ListGolinksByUrlResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golinks\", kind: \"message\", T: Golink, repeated: true },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListGolinksByUrlResponse {\n    return new ListGolinksByUrlResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListGolinksByUrlResponse {\n    return new ListGolinksByUrlResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListGolinksByUrlResponse {\n    return new ListGolinksByUrlResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: ListGolinksByUrlResponse | PlainMessage<ListGolinksByUrlResponse> | undefined, b: ListGolinksByUrlResponse | PlainMessage<ListGolinksByUrlResponse> | undefined): boolean {\n    return proto3.util.equals(ListGolinksByUrlResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.UpdateGolinkRequest\n */\nexport class UpdateGolinkRequest extends Message<UpdateGolinkRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * @generated from field: string url = 2;\n   */\n  url = \"\";\n\n  constructor(data?: PartialMessage<UpdateGolinkRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.UpdateGolinkRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGolinkRequest {\n    return new UpdateGolinkRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGolinkRequest {\n    return new UpdateGolinkRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGolinkRequest {\n    return new UpdateGolinkRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateGolinkRequest | PlainMessage<UpdateGolinkRequest> | undefined, b: UpdateGolinkRequest | PlainMessage<UpdateGolinkRequest> | undefined): boolean {\n    return proto3.util.equals(UpdateGolinkRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.UpdateGolinkResponse\n */\nexport class UpdateGolinkResponse extends Message<UpdateGolinkResponse> {\n  /**\n   * @generated from field: golink.v1.Golink golink = 1;\n   */\n  golink?: Golink;\n\n  constructor(data?: PartialMessage<UpdateGolinkResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.UpdateGolinkResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golink\", kind: \"message\", T: Golink },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateGolinkResponse {\n    return new UpdateGolinkResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateGolinkResponse {\n    return new UpdateGolinkResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateGolinkResponse {\n    return new UpdateGolinkResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: UpdateGolinkResponse | PlainMessage<UpdateGolinkResponse> | undefined, b: UpdateGolinkResponse | PlainMessage<UpdateGolinkResponse> | undefined): boolean {\n    return proto3.util.equals(UpdateGolinkResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.DeleteGolinkRequest\n */\nexport class DeleteGolinkRequest extends Message<DeleteGolinkRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  constructor(data?: PartialMessage<DeleteGolinkRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.DeleteGolinkRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteGolinkRequest {\n    return new DeleteGolinkRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteGolinkRequest {\n    return new DeleteGolinkRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteGolinkRequest {\n    return new DeleteGolinkRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteGolinkRequest | PlainMessage<DeleteGolinkRequest> | undefined, b: DeleteGolinkRequest | PlainMessage<DeleteGolinkRequest> | undefined): boolean {\n    return proto3.util.equals(DeleteGolinkRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.DeleteGolinkResponse\n */\nexport class DeleteGolinkResponse extends Message<DeleteGolinkResponse> {\n  constructor(data?: PartialMessage<DeleteGolinkResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.DeleteGolinkResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteGolinkResponse {\n    return new DeleteGolinkResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteGolinkResponse {\n    return new DeleteGolinkResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteGolinkResponse {\n    return new DeleteGolinkResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: DeleteGolinkResponse | PlainMessage<DeleteGolinkResponse> | undefined, b: DeleteGolinkResponse | PlainMessage<DeleteGolinkResponse> | undefined): boolean {\n    return proto3.util.equals(DeleteGolinkResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.AddOwnerRequest\n */\nexport class AddOwnerRequest extends Message<AddOwnerRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * email\n   *\n   * @generated from field: string owner = 2;\n   */\n  owner = \"\";\n\n  constructor(data?: PartialMessage<AddOwnerRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.AddOwnerRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"owner\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOwnerRequest {\n    return new AddOwnerRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOwnerRequest {\n    return new AddOwnerRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOwnerRequest {\n    return new AddOwnerRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AddOwnerRequest | PlainMessage<AddOwnerRequest> | undefined, b: AddOwnerRequest | PlainMessage<AddOwnerRequest> | undefined): boolean {\n    return proto3.util.equals(AddOwnerRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.AddOwnerResponse\n */\nexport class AddOwnerResponse extends Message<AddOwnerResponse> {\n  /**\n   * @generated from field: golink.v1.Golink golink = 1;\n   */\n  golink?: Golink;\n\n  constructor(data?: PartialMessage<AddOwnerResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.AddOwnerResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golink\", kind: \"message\", T: Golink },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOwnerResponse {\n    return new AddOwnerResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOwnerResponse {\n    return new AddOwnerResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOwnerResponse {\n    return new AddOwnerResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: AddOwnerResponse | PlainMessage<AddOwnerResponse> | undefined, b: AddOwnerResponse | PlainMessage<AddOwnerResponse> | undefined): boolean {\n    return proto3.util.equals(AddOwnerResponse, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.RemoveOwnerRequest\n */\nexport class RemoveOwnerRequest extends Message<RemoveOwnerRequest> {\n  /**\n   * @generated from field: string name = 1;\n   */\n  name = \"\";\n\n  /**\n   * email\n   *\n   * @generated from field: string owner = 2;\n   */\n  owner = \"\";\n\n  constructor(data?: PartialMessage<RemoveOwnerRequest>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.RemoveOwnerRequest\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"name\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"owner\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOwnerRequest {\n    return new RemoveOwnerRequest().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOwnerRequest {\n    return new RemoveOwnerRequest().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOwnerRequest {\n    return new RemoveOwnerRequest().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RemoveOwnerRequest | PlainMessage<RemoveOwnerRequest> | undefined, b: RemoveOwnerRequest | PlainMessage<RemoveOwnerRequest> | undefined): boolean {\n    return proto3.util.equals(RemoveOwnerRequest, a, b);\n  }\n}\n\n/**\n * @generated from message golink.v1.RemoveOwnerResponse\n */\nexport class RemoveOwnerResponse extends Message<RemoveOwnerResponse> {\n  /**\n   * @generated from field: golink.v1.Golink golink = 1;\n   */\n  golink?: Golink;\n\n  constructor(data?: PartialMessage<RemoveOwnerResponse>) {\n    super();\n    proto3.util.initPartial(data, this);\n  }\n\n  static readonly runtime: typeof proto3 = proto3;\n  static readonly typeName = \"golink.v1.RemoveOwnerResponse\";\n  static readonly fields: FieldList = proto3.util.newFieldList(() => [\n    { no: 1, name: \"golink\", kind: \"message\", T: Golink },\n  ]);\n\n  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOwnerResponse {\n    return new RemoveOwnerResponse().fromBinary(bytes, options);\n  }\n\n  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOwnerResponse {\n    return new RemoveOwnerResponse().fromJson(jsonValue, options);\n  }\n\n  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOwnerResponse {\n    return new RemoveOwnerResponse().fromJsonString(jsonString, options);\n  }\n\n  static equals(a: RemoveOwnerResponse | PlainMessage<RemoveOwnerResponse> | undefined, b: RemoveOwnerResponse | PlainMessage<RemoveOwnerResponse> | undefined): boolean {\n    return proto3.util.equals(RemoveOwnerResponse, a, b);\n  }\n}\n\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","Object","defineProperty","value","GeneratedCodeInfo_Annotation_Semantic","GeneratedCodeInfo_Annotation","GeneratedCodeInfo","SourceCodeInfo_Location","SourceCodeInfo","UninterpretedOption_NamePart","UninterpretedOption","MethodOptions_IdempotencyLevel","MethodOptions","ServiceOptions","EnumValueOptions","EnumOptions","OneofOptions","FieldOptions_OptionTargetType","FieldOptions_OptionRetention","FieldOptions_JSType","FieldOptions_CType","FieldOptions","MessageOptions","FileOptions_OptimizeMode","FileOptions","MethodDescriptorProto","ServiceDescriptorProto","EnumValueDescriptorProto","EnumDescriptorProto_EnumReservedRange","EnumDescriptorProto","OneofDescriptorProto","FieldDescriptorProto_Label","FieldDescriptorProto_Type","FieldDescriptorProto","ExtensionRangeOptions_Declaration","ExtensionRangeOptions_VerificationState","ExtensionRangeOptions","DescriptorProto_ReservedRange","DescriptorProto_ExtensionRange","DescriptorProto","FileDescriptorProto","FileDescriptorSet","$c968341c96f92984$var$ExtensionRangeOptions_VerificationState","$c968341c96f92984$var$FieldDescriptorProto_Type","$c968341c96f92984$var$FieldDescriptorProto_Label","$c968341c96f92984$var$FileOptions_OptimizeMode","$c968341c96f92984$var$FieldOptions_CType","$c968341c96f92984$var$FieldOptions_JSType","$c968341c96f92984$var$FieldOptions_OptionRetention","$c968341c96f92984$var$FieldOptions_OptionTargetType","$c968341c96f92984$var$MethodOptions_IdempotencyLevel","$c968341c96f92984$var$GeneratedCodeInfo_Annotation_Semantic","$daMMc","$aYdaj","$c968341c96f92984$var$FileDescriptorSet","Message","constructor","data","file","proto2","util","initPartial","fromBinary","bytes","options","fromJson","jsonValue","fromJsonString","jsonString","equals","a","b","runtime","typeName","fields","newFieldList","no","name","kind","T","$c968341c96f92984$var$FileDescriptorProto","repeated","dependency","publicDependency","weakDependency","messageType","enumType","service","extension","opt","$c968341c96f92984$var$DescriptorProto","$c968341c96f92984$var$EnumDescriptorProto","$c968341c96f92984$var$ServiceDescriptorProto","$c968341c96f92984$var$FieldDescriptorProto","$c968341c96f92984$var$FileOptions","$c968341c96f92984$var$SourceCodeInfo","field","nestedType","extensionRange","oneofDecl","reservedRange","reservedName","$c968341c96f92984$var$DescriptorProto_ExtensionRange","$c968341c96f92984$var$OneofDescriptorProto","$c968341c96f92984$var$MessageOptions","$c968341c96f92984$var$DescriptorProto_ReservedRange","$c968341c96f92984$var$ExtensionRangeOptions","uninterpretedOption","declaration","$c968341c96f92984$var$UninterpretedOption","$c968341c96f92984$var$ExtensionRangeOptions_Declaration","getEnumType","default","UNVERIFIED","setEnumType","$c968341c96f92984$var$FieldOptions","$c968341c96f92984$var$OneofOptions","$c968341c96f92984$var$EnumValueDescriptorProto","$c968341c96f92984$var$EnumOptions","$c968341c96f92984$var$EnumDescriptorProto_EnumReservedRange","$c968341c96f92984$var$EnumValueOptions","method","$c968341c96f92984$var$MethodDescriptorProto","$c968341c96f92984$var$ServiceOptions","$c968341c96f92984$var$MethodOptions","SPEED","targets","STRING","JS_NORMAL","IDEMPOTENCY_UNKNOWN","$c968341c96f92984$var$UninterpretedOption_NamePart","location","$c968341c96f92984$var$SourceCodeInfo_Location","path","span","leadingDetachedComments","packed","$c968341c96f92984$var$GeneratedCodeInfo","annotation","$c968341c96f92984$var$GeneratedCodeInfo_Annotation","other","getType","clone","type","format","bin","makeReadOptions","readMessage","readerFactory","byteLength","json","JSON","parse","e","message","String","toBinary","makeWriteOptions","writer","writerFactory","writeMessage","finish","toJson","toJsonString","_a","stringify","prettySpaces","toJSON","emitDefaultValues","getPrototypeOf","$lZ0Gt","$dNiWp","$4kBo5","$hbbeO","$gamDJ","$hxoip","$daMbB","$7fc9b85bccb8cdbf$var$normalizeFieldInfosProto2","fieldInfos","_b","_c","o","r","f","localName","localFieldName","undefined","oneof","jsonName","fieldJsonName","ooname","InternalOneofInfo","addField","push","makeProtoRuntime","makeJsonFormatProto2","makeBinaryFormatProto2","assign","makeUtilCommon","InternalFieldList","initFields","target","member","byMember","t","case","$jlOnx","$dNCE8","syntax","makeMessageType","makeEnum","makeEnumType","$2RXcp","$e1670e9cbe146218$var$enumTypeSymbol","Symbol","$e1670e9cbe146218$var$setEnumType","enumObject","values","$e1670e9cbe146218$var$makeEnumType","map","v","_opt","names","create","numbers","normalValues","n","$e1670e9cbe146218$var$normalizeEnumValue","findName","findNumber","assert","assertFloat32","assertUInt32","assertInt32","condition","msg","arg","Number","isInteger","isFinite","substring","lastIndexOf","setPrototypeOf","prototype","$9mVQy","$cwy9l","makeBinaryFormatCommon","byNumber","scalarType","ScalarType","INT32","writePacked","item","writeScalar","writeMessageField","key","val","entries","writeMapEntry","m","length","writeUnknownFields","$6d230a47d21f361f$var$ScalarType","$1D0pI","$2fBvO","$bQjda","$91e2f69c12db0a74$var$unknownFieldsSymbol","$91e2f69c12db0a74$var$readDefaults","readUnknownFields","BinaryReader","$91e2f69c12db0a74$var$writeDefaults","BinaryWriter","$91e2f69c12db0a74$var$makeReadOptions","$91e2f69c12db0a74$var$makeWriteOptions","$91e2f69c12db0a74$var$readMessageField","reader","uint32","$91e2f69c12db0a74$var$readScalar","string","BOOL","bool","DOUBLE","double","FLOAT","float","int32","INT64","int64","UINT64","uint64","FIXED64","fixed64","BYTES","FIXED32","fixed32","SFIXED32","sfixed32","SFIXED64","sfixed64","SINT64","sint64","UINT32","SINT32","sint32","$91e2f69c12db0a74$var$writeMessageField","fieldNo","wrapField","tag","WireType","LengthDelimited","$91e2f69c12db0a74$var$writeScalar","emitIntrinsicDefault","wireType","isIntrinsicDefault","scalarTypeInfo","listUnknownFields","discardUnknownFields","c","raw","onUnknownField","Array","isArray","end","len","pos","find","skip","arr","fieldWrapper","unwrapField","mapKey","mapVal","$91e2f69c12db0a74$var$readMapEntry","K","V","keyRaw","scalarDefaultValue","toString","fork","keyValue","parseInt","join","i","$12f9c123e4583420$var$WireType","$9NeDz","$dkRgk","textEncoder","stack","TextEncoder","chunks","buf","Uint8Array","offset","set","chunk","prev","pop","varint32write","encode","DataView","buffer","setFloat32","setFloat64","setUint32","setInt32","view","tc","protoInt64","enc","lo","hi","uEnc","varint64write","sign","textDecoder","varint64","varint64read","varint32read","byteOffset","TextDecoder","start","Varint","Bit64","Bit32","StartGroup","EndGroup","assertBounds","subarray","RangeError","zze","dec","uDec","s","getUint32","getInt32","getFloat32","getFloat64","decode","$72140b4c92fafb45$var$uInt64ToString","$72140b4c92fafb45$var$TWO_PWR_32_DBL","low","mid","high","digitA","digitB","digitC","Math","floor","$72140b4c92fafb45$var$decimalFrom1e7WithLeadingZeros","$72140b4c92fafb45$var$newBits","$72140b4c92fafb45$var$negate","lowBits","highBits","uInt64ToString","int64ToString","int64FromString","shift","middleByte","hasNext","byte","splitBits","hasMoreBits","minus","slice","add1e6digit","begin","digit1e6","bits","negative","result","digit1e7","partial","readBytes","$hPtJY","$9b567569ee6bb48a$var$makeInt64Support","dv","ArrayBuffer","ok","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","env","MIN","MAX","UMIN","UMAX","zero","supported","bi","uParse","assertInt64String","test","assertUInt64String","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","clearTimeout","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","run","$cfae44f0dfdf62c0$var$runClearTimeout","marker","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","arguments","apply","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","getUnwrappedFieldType","fieldKind","$1a3a14955b4bf421$var$wktWrapperToScalarType","scalarEquals","isUndefined","toLowerCase","$3276080af4c6fcf5$var$cloneSingularField","source","sk","sourceField","findField","k","keys","mt","every","va","vb","copy","any","normalizer","_fields","_normalizer","findJsonName","jsonNames","list","all","numbersAsc","sort","members","localOneofName","_lookup","$cc485d605498fdf6$var$localFieldName","protoName","inOneof","$cc485d605498fdf6$var$protoCamelCase","safeObjectProperty","$cc485d605498fdf6$var$safeMessageProperty","$cc485d605498fdf6$var$localOneofName","snakeCase","capNext","charAt","toUpperCase","safeIdentifier","findEnumSharedPrefix","desc","pkg","proto","package","replace","sharedPrefix","parent","enumName","valueNames","prefix","$cc485d605498fdf6$var$camelToSnakeCase","camel","startsWith","shortName","$cc485d605498fdf6$var$reservedIdentifiers","Set","$cc485d605498fdf6$var$reservedObjectProperties","$cc485d605498fdf6$var$reservedMessageProperties","$cc485d605498fdf6$var$fallback","has","$74iHn","makeJsonFormatCommon","writeEnum","jsonObj","entryKey","entryValue","enumAsInteger","jsonArr","$9BP9U","$525769473ca78db0$var$jsonReadDefaults","ignoreUnknownFields","$525769473ca78db0$var$jsonWriteDefaults","useProtoFieldName","$525769473ca78db0$var$makeReadOptions","$525769473ca78db0$var$makeWriteOptions","$525769473ca78db0$var$debugJsonValue","split","$525769473ca78db0$var$readScalar","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","trim","isNaN","encodeURIComponent","protoBase64","$525769473ca78db0$var$readEnum","$525769473ca78db0$var$writeEnum","$525769473ca78db0$var$writeScalar","makeWriteField","writeField","debug","oneofSeen","jsonKey","seen","targetArray","jsonItem","targetMap","jsonMapKey","jsonMapValue","enumValue","readScalar","$6fef40d42480dd6e$var$encTable","$6fef40d42480dd6e$var$decTable","charCodeAt","indexOf","base64Str","es","bytePos","groupPos","p","base64","Timestamp","$bkOG2","$89274c511e8ee683$var$Timestamp","seconds","nanos","proto3","matches","match","ms","Date","repeat","z","nanosStr","toISOString","toDate","ceil","now","fromDate","date","getTime","$2NGPb","$k7eOo","$8408df614a3602e9$var$normalizeFieldInfosProto3","makeJsonFormatProto3","makeBinaryFormatProto3","Duration","$2fdf7631cfdd18df$var$Duration","longSeconds","is","text","abs","Any","$7a0fc3181a94ef5a$var$Any","typeUrl","typeUrlToName","typeRegistry","findMessage","hasOwnProperty","packFrom","typeNameToUrl","unpackTo","unpack","registry","url","slash","pack","Empty","$816957bddc385ba9$var$Empty","FieldMask","$8fb85eae0edc507c$var$FieldMask","paths","protoCamelCase","str","includes","sc","letter","ListValue","Value","Struct","NullValue","$4a3d6681b0b39ffd$var$NullValue","$4a3d6681b0b39ffd$var$Struct","$4a3d6681b0b39ffd$var$Value","NULL_VALUE","$4a3d6681b0b39ffd$var$ListValue","BytesValue","StringValue","BoolValue","UInt32Value","Int32Value","UInt64Value","Int64Value","FloatValue","DoubleValue","$e95da06101fe0922$var$DoubleValue","$e95da06101fe0922$var$FloatValue","$e95da06101fe0922$var$Int64Value","$e95da06101fe0922$var$UInt64Value","$e95da06101fe0922$var$Int32Value","$e95da06101fe0922$var$UInt32Value","$e95da06101fe0922$var$BoolValue","$e95da06101fe0922$var$StringValue","$e95da06101fe0922$var$BytesValue","CodeGeneratorResponse_File","CodeGeneratorResponse_Feature","CodeGeneratorResponse","CodeGeneratorRequest","Version","$394c309a6c422b7e$var$CodeGeneratorResponse_Feature","$hi5gE","$394c309a6c422b7e$var$Version","$394c309a6c422b7e$var$CodeGeneratorRequest","fileToGenerate","protoFile","$394c309a6c422b7e$var$CodeGeneratorResponse","$394c309a6c422b7e$var$CodeGeneratorResponse_File","Mixin","Method","Api","$dwaHV","$jooX7","$f972ceb5177e76cf$var$Api","methods","mixins","Syntax","PROTO2","$f972ceb5177e76cf$var$Method","Option","SourceContext","$f972ceb5177e76cf$var$Mixin","requestTypeUrl","requestStreaming","responseTypeUrl","responseStreaming","root","EnumValue","Enum","Field_Cardinality","Field_Kind","Field","Type","$9d7691cc8832da6f$var$Syntax","$9d7691cc8832da6f$var$Field_Kind","$9d7691cc8832da6f$var$Field_Cardinality","$atJju","$9d7691cc8832da6f$var$Type","oneofs","edition","$9d7691cc8832da6f$var$Field","$9d7691cc8832da6f$var$Option","TYPE_UNKNOWN","cardinality","UNKNOWN","number","oneofIndex","defaultValue","$9d7691cc8832da6f$var$Enum","enumvalue","$9d7691cc8832da6f$var$EnumValue","$e1e39d48590b248e$var$SourceContext","fileName","headerXGrpcWeb","headerXUserAgent","headerStatusDetailsBin","headerGrpcMessage","headerGrpcStatus","headerTimeout","headerAcceptEncoding","headerEncoding","headerContentType","$d5YNv","enumerable","get","headerMessageType","headerUserAgent","headerProtocolVersion","headerStreamAcceptEncoding","headerUnaryAcceptEncoding","headerStreamEncoding","headerUnaryEncoding","headerUnaryContentLength","uResponseMethodNotAllowed","uResponseUnsupportedMediaType","uResponseNotFound","uResponseOk","assertByteStreamRequest","createDeadlineSignal","getAbortSignalReason","createLinkedAbortController","transformInvokeImplementation","invokeUnaryImplementation","contentTypeMatcher","untilFirst","readAllBytes","createAsyncIterable","createWritableIterable","makeIterableAbortable","sinkAllBytes","sinkAll","pipeTo","transformParseEnvelope","transformSerializeEnvelope","transformSplitEnvelope","transformJoinEnvelopes","transformDecompressEnvelope","transformCompressEnvelope","transformNormalizeMessage","transformReadAllBytes","transformPrepend","transformAppend","transformCatchFinally","transformCatch","pipe","compressionNegotiate","compressedFlag","createEnvelopeReadableStream","envelopeCompress","envelopeDecompress","encodeEnvelopes","encodeEnvelope","validateReadWriteMaxBytes","limitSerialization","getJsonOptions","createClientMethodSerializers","createMethodSerializationLookup","runStreamingCall","runUnaryCall","createFetchHandler","createFetchClient","createUniversalHandlerClient","createMethodUrl","createUniversalMethodHandler","createUniversalServiceHandlers","validateUniversalHandlerOptions","uResponseVersionNotSupported","$3xity","$dVUld","$fn7mU","$85AEY","$3mgpQ","$cKeEL","$bO3lh","$cFI6K","$4TIBd","$dHfIs","$kPxXG","$5iLQY","$5cbVl","$9FNZj","baseUrl","$2S2uU","$dbKGs","$a24c4d69efcdce32$var$raceSignal","signal","promise","cleanup","signalPromise","Promise","_","reject","onAbort","aborted","addEventListener","removeEventListener","race","finally","uHandlers","handlerMap","Map","handler","requestPath","uClientReq","pathname","URL","ConnectError","Code","Unimplemented","reqSignal","AbortController","uServerRes","body","httpVersion","header","iterable","asyncIterator","it","w","next","throw","return","Headers","status","trailer","connectErrorFromReason","connectErrorDetails","$hNn7i","$dpeGY","$99a083d93cf9c550$var$ConnectError","Unknown","metadata","outgoingDetails","cause","codeToString","rawMessage","details","from","reason","Canceled","findDetails","typeOrRegistry","error","moreTypes","types","createRegistry","$cf48f1c8be3b514b$var$__createBinding","__createBinding","k2","getOwnPropertyDescriptor","__esModule","writable","configurable","$cf48f1c8be3b514b$var$__exportStar","__exportStar","exports1","toPlainMessage","createRegistryFromDescriptors","createDescriptorSet","MethodIdempotency","MethodKind","codegenInfo","protoDelimited","protoDouble","$lEZfE","$97cGY","$2lUVF","$eMVZ5","$l83TF","$7lDkw","$4cWLX","$ga6K0","$6a2e9ce4a1633704$var$__asyncValues","__asyncValues","TypeError","__values","iterator","verb","resolve","settle","d","then","done","$6a2e9ce4a1633704$var$__await","__await","$6a2e9ce4a1633704$var$__asyncGenerator","__asyncGenerator","thisArg","_arguments","generator","g","q","resume","fulfill","decStream","e_1","iterable_1_1","_d","iterable_1","append","size","peekSize","eof","e_1_1","sizeEof","$745gB","$1b69b3e5750deb9a$var$packageName","packageName","reifyWkt","symbols","typeOnly","privateImportPath","publicImportPath","PartialMessage","PlainMessage","FieldList","MessageType","BinaryReadOptions","BinaryWriteOptions","JsonReadOptions","JsonWriteOptions","JsonValue","JsonObject","IMessageTypeRegistry","wktSourceFiles","scalar","mapValue","nullValue","enum","numberValue","stringValue","boolValue","structValue","listValue","$ac4286d780d94fba$var$MethodKind","$ac4286d780d94fba$var$MethodIdempotency","isPackedFieldByDefault","FieldNumber","$f61d5e2e5c1f3634$var$FieldNumber","$f61d5e2e5c1f3634$var$addExtensions","cart","ext","$f61d5e2e5c1f3634$var$newExtension","extensions","nestedExtensions","nestedMessages","$f61d5e2e5c1f3634$var$addFields","allOneofs","deprecated","getComments","sourcePath","DescriptorProto_OneofDecl","$f61d5e2e5c1f3634$var$findComments","sourceCodeInfo","oneofsSeen","$f61d5e2e5c1f3634$var$findOneof","proto3Optional","$f61d5e2e5c1f3634$var$newField","add","filter","child","$f61d5e2e5c1f3634$var$addEnum","$f61d5e2e5c1f3634$var$makeTypeName","DescriptorProto_EnumType","FileDescriptorProto_EnumType","enums","forEach","declarationString","EnumDescriptorProto_Value","nestedEnums","packedByDefault","$f61d5e2e5c1f3634$var$isPackedFieldByDefault","common","optional","$f61d5e2e5c1f3634$var$isOptionalField","label","OPTIONAL","$f61d5e2e5c1f3634$var$declarationString","DescriptorProto_Field","REPEATED","MESSAGE","GROUP","mapEntry","mapEntries","$f61d5e2e5c1f3634$var$trimLeadingDot","$f61d5e2e5c1f3634$var$getMapFieldTypes","keyField","valueField","messages","ENUM","getDefaultValue","$f61d5e2e5c1f3634$var$getDefaultValue","$f61d5e2e5c1f3634$var$fieldTypeToScalarType","extendee","DescriptorProto_Extension","FileDescriptorProto_Extension","input","services","fileDescriptors","files","$f61d5e2e5c1f3634$var$newFile","getSyntaxComments","FileDescriptorProto_Syntax","getPackageComments","FileDescriptorProto_Package","enumProto","clear","messageProto","$f61d5e2e5c1f3634$var$addMessage","DescriptorProto_NestedType","FileDescriptorProto_MessageType","serviceProto","$f61d5e2e5c1f3634$var$addService","FileDescriptorProto_Service","methodProto","$f61d5e2e5c1f3634$var$newMethod","methodKind","idempotency","inputType","outputType","clientStreaming","serverStreaming","BiDiStreaming","ClientStreaming","ServerStreaming","Unary","idempotencyLevel","IDEMPOTENT","Idempotent","NO_SIDE_EFFECTS","NoSideEffects","output","ServiceDescriptorProto_Method","leadingDetached","some","index","leading","leadingComments","trailing","trailingComments","parts","REQUIRED","u","$f61d5e2e5c1f3634$var$unescapeBytesDefaultValue","tail","take","parseFloat","findService","I","O","findEnum","$bM41u","$46Pek","$b6QY7","$cl1bT","$6naYd","$k2cpW","$3105df6328a52f1a$var$wkMessages","$3105df6328a52f1a$var$wkEnums","replaceWkt","et","existing","fieldInfo","$3105df6328a52f1a$var$makeFieldInfo","resolver","$3105df6328a52f1a$var$makeMapFieldInfo","base","$3105df6328a52f1a$var$makeMessageFieldInfo","fi","$3105df6328a52f1a$var$makeEnumFieldInfo","$3105df6328a52f1a$var$makeScalarFieldInfo","$bc42cf2933a54116$var$toPlainMessage","$bc42cf2933a54116$var$toPlainValue","$9c2901ba5e31df27$var$stringToCode","codeFromString","$9c2901ba5e31df27$var$codeToString","$390ee4f96ea853ca$var$__asyncValues","$390ee4f96ea853ca$var$__await","$390ee4f96ea853ca$var$__asyncGenerator","$390ee4f96ea853ca$var$__asyncDelegator","__asyncDelegator","$390ee4f96ea853ca$var$pipe","rest","abortable","transforms","propagateDownStreamError","$390ee4f96ea853ca$var$makeIterableAbortable","abort","$390ee4f96ea853ca$var$readAllBytes","readMaxBytes","lengthHint","e_13","e_14","_e","_f","hint","$390ee4f96ea853ca$var$parseLengthHint","isSafeInteger","assertReadMaxBytes","iterable_13_1","_g","iterable_13","InvalidArgument","e_13_1","count","iterable_14_1","_h","iterable_14","e_14_1","$390ee4f96ea853ca$var$untilFirst","first","resultPromise","innerCandidate","inner","used","state","sink","$390ee4f96ea853ca$var$pickTransformsAndSink","catch","catchError","caught","catchFinally","provide","e_2","iterable_2_1","iterable_2","e_2_1","e_3","prepend","iterable_3_1","iterable_3","e_3_1","e_4","iterable_4_1","iterable_4","e_4_1","serialization","endStreamFlag","endSerialization","e_5","iterable_5_1","iterable_5","serialize","flags","e_5_1","e_6","iterable_6_1","iterable_6","e_6_1","e_7","iterable_7_1","iterable_7","e_7_1","e_8","iterable_8_1","iterable_8","e_8_1","compression","compressMinBytes","e_9","iterable_9_1","iterable_9","e_9_1","e_10","iterable_10_1","iterable_10","e_10_1","e_11","iterable_11_1","iterable_11","e_11_1","peekHeader","getUint8","e_12","iterable_12_1","iterable_12","e_12_1","queueResolve","queue","process","payload","elem","prom","closed","isClosed","write","close","items","$8986f4ef8997851c$var$envelopeCompress","envelope","Internal","compress","$8986f4ef8997851c$var$envelopeDecompress","decompress","stream","ReadableStream","getReader","pull","controller","read","DataLoss","enqueue","setUint8","envelopes","reduce","previousValue","currentValue","available","requested","accepted","headerNameAcceptEncoding","request","response","found","acceptable","acceptNames","assertWriteMaxBytes","writeMaxBytes","bytesWritten","ResourceExhausted","bytesRead","totalSizeKnown","$3dc3c0e800a8a3f2$var$getAbortSignalReason","signals","sa","timeoutMs","timeoutId","listener","DeadlineExceeded","$b30eb835cae65953$var$iterableToReadableStream","cancel","$b30eb835cae65953$var$iterableFromReadableStream","fetchFn","res","$b30eb835cae65953$var$universalClientRequestToFetch","req","Request","headers","uHandler","uReq","uRes","Response","$5e3b3a453c819ba6$var$setupSignal","$5e3b3a453c819ba6$var$applyInterceptors","interceptors","reverse","createJsonSerialization","createBinarySerialization","$27202909dabb305c$var$getJsonOptions","$27202909dabb305c$var$limitSerialization","limitOptions","$27202909dabb305c$var$createBinarySerialization","$27202909dabb305c$var$createJsonSerialization","binaryOptions","jsonOptions","inputBinary","inputJson","outputBinary","outputJson","getI","useBinaryFormat","getO","normalize","cache","contentType","cached","re","$f2a2ea2104ee01c4$var$__await","$f2a2ea2104ee01c4$var$__asyncGenerator","$f2a2ea2104ee01c4$var$__asyncValues","$f2a2ea2104ee01c4$var$invokeUnaryImplementation","spec","context","impl","$f2a2ea2104ee01c4$var$normalizeOutput","inputIt","input1","input2","negotiateProtocol","$70aeb7eda71fc236$var$createUniversalMethodHandler","protocols","$70aeb7eda71fc236$var$negotiateProtocol","protocolHandlers","h","Connection","matchingMethod","allowedMethods","onlyMatch","matchingContentTypes","supportedContentType","firstMatch","protocolNames","flatMap","acceptCompression","requireConnectProtocolHeader","maxTimeoutMs","MAX_SAFE_INTEGER","shutdownSignal","implSpec","$34c3d594ed34db37$var$__createBinding","$34c3d594ed34db37$var$__exportStar","protocolVersion","transformConnectPostToGetRequest","trailerDemux","trailerMux","validateResponseWithCompression","validateResponse","parseTimeout","contentTypeStreamRegExp","contentTypeUnaryRegExp","contentTypeRegExp","contentTypeStreamJson","contentTypeStreamProto","contentTypeUnaryJson","contentTypeUnaryProto","parseContentType","errorToJsonBytes","errorToJson","errorFromJsonBytes","errorFromJson","createEndStreamSerialization","endStreamFromJson","endStreamToJson","requestHeaderWithCompression","requestHeader","codeToHttpStatus","codeFromHttpStatus","createTransport","createHandlerFactory","$9jc4q","$ciggp","$gomUo","$kPVNl","$5PCxW","$5z3hl","$91teX","$sQNNB","$fHJsY","$f9Qm8","$iLIBn","$lJphl","$4Jmw5","$2vMsJ","$im48N","$6c6f4053d5b7b913$var$protocolName","$6c6f4053d5b7b913$var$methodPost","$6c6f4053d5b7b913$var$readUnaryMessageFromBody","reqBytes","$6c6f4053d5b7b913$var$readUnaryMessageFromQuery","queryParams","decoded","paramBase64","paramMessage","endStreamSerialization","fact","isGet","searchParams","compressionRequested","paramCompression","parseEncodingQuery","paramEncoding","createHandlerContext","requestMethod","protocolName","requestSignal","responseHeader","binary","reqBody","requireProtocolVersionParam","requireProtocolVersionHeader","$6c6f4053d5b7b913$var$parseUnaryMessage","responseTrailer","outputIt","createServiceImplSpec","createMethodImplSpec","$371cd4b334e49bf5$var$createMethodImplSpec","deadline","abortController","methodInfo","fn","bind","encoding","$b1qwC","$43ef9db3a58ea7de$var$endStreamFromJson","parseErr","$43ef9db3a58ea7de$var$endStreamToJson","jsonWriteOptions","appendHeaders","hasMetadata","md","jsonObject","$40d2c3b657f2a7ca$var$__rest","__rest","getOwnPropertySymbols","propertyIsEnumerable","$40d2c3b657f2a7ca$var$errorFromJson","fallback","detail","$40d2c3b657f2a7ca$var$errorToJson","decodeBinaryHeader","encodeBinaryHeader","httpStatus","Unauthenticated","PermissionDenied","Aborted","FailedPrecondition","Unavailable","NotFound","AlreadyExists","OutOfRange","results","exec","paramConnectVersion","$8f33c8137accfad6$var$__asyncValues","$8f33c8137accfad6$var$__await","$8f33c8137accfad6$var$__asyncGenerator","unary","sendCompression","requestBody","delete","useGet","useHttpGet","universalResponse","httpClient","isUnaryError","unaryError","responseBody","redirect","mode","endStreamReceived","$f2b566ef41ecece4$var$requestHeader","userProvidedHeaders","$b6ee23d341f4cbe8$var$validateResponse","mimeType","parsedType","errorFromStatus","$da9f36cca8d50374$var$contentTypePrefix","useBase64","query","$ff5896c2885feba8$var$__createBinding","$ff5896c2885feba8$var$__exportStar","grpcStatusOk","validateTrailer","setTrailerStatus","createTrailerSerialization","trailerSerialize","trailerParse","trailerFlag","contentTypeJson","contentTypeProto","$dNf8z","$5OJoL","$2PueP","$eqULm","$3AVUK","$butBH","$lOZg6","$bAe87","$cvlyH","$7x6hp","$a0ab97ea14ded1e8$var$protocolName","$a0ab97ea14ded1e8$var$methodPost","trailerSerialization","$a0ab97ea14ded1e8$var$createHandler","$85d9766512bac2be$var$trailerParse","lines","line","$85d9766512bac2be$var$trailerSerialize","unitToMultiplicand","H","M","S","findTrailerError","$1xuzX","Status","headerOrTrailer","statusBytes","grpcStatus","decodeURIComponent","$11f097e0fd3ec76c$var$Status","$43c4d67102148167$var$__asyncValues","$43c4d67102148167$var$__await","$43c4d67102148167$var$__asyncGenerator","$lwDrP","foundStatus","trailerReceived","$20f7ccddee2fb6c6$var$requestHeader","$hRSmW","$29e1a875c1633d15$var$validateResponse","$fe2dc92b62f974b3$var$__createBinding","$fe2dc92b62f974b3$var$__exportStar","$jso5J","$cehvE","$axkTu","$4xd0I","$8N0Wq","$e2a351eb06925d84$var$protocolName","$e2a351eb06925d84$var$methodPost","$e2a351eb06925d84$var$createHandler","$8e745fe03fabacf7$var$__asyncValues","$8e745fe03fabacf7$var$__await","$8e745fe03fabacf7$var$__asyncDelegator","$8e745fe03fabacf7$var$__asyncGenerator","$7abd31960b3a9f0b$var$requestHeader","$6663a141d9eb6881$var$validateResponse","$d29c05496bcb6d6e$exports","createRouterTransport","makeAnyClient","runStreaming","runUnary","cors","createConnectRouter","createPromiseClient","createCallbackClient","$be8d41fc155fe396$exports","$be8d41fc155fe396$var$__asyncValues","$83008738c4ad9b66$exports","createMethod","client","$be8d41fc155fe396$var$wrapSignal","transport","requestMessage","callback","onHeader","onTrailer","onResponse","onClose","inputMessage","$dd505730e24bcb50$exports","$dd505730e24bcb50$var$__await","$dd505730e24bcb50$var$__asyncValues","$dd505730e24bcb50$var$__asyncDelegator","$dd505730e24bcb50$var$__asyncGenerator","createBiDiStreamingFn","createClientStreamingFn","createServerStreamingFn","$dd505730e24bcb50$var$createServerStreamingFn","$dd505730e24bcb50$var$createClientStreamingFn","singleMessage","request_1_1","request_1","$dd505730e24bcb50$var$createBiDiStreamingFn","request_2_1","request_2","$f3a9c8f5d6a6846a$exports","$f3a9c8f5d6a6846a$var$whichProtocols","grpc","grpcWeb","connect","routerOptions","handlers","implementation","rpc","$3f08055aa3acf793$exports","allowedHeaders","exposedHeaders","$b29d408944d5e2cf$exports","$b29d408944d5e2cf$var$applyInterceptors","$0ccc67c58f017fe8$exports","routes","router","$bb5abba579f9f96c$exports","createGrpcWebTransport","createConnectTransport","$c892c532d475ad55$exports","$c892c532d475ad55$var$__await","$c892c532d475ad55$var$__asyncGenerator","$85618898c1be81b4$exports","$073a1d431124c308$exports","$05f920a7fdf2108e$exports","assertFetchApi","credentials","fetch","demuxedHeader","demuxedTrailer","arrayBuffer","createRequestBody","fRes","parseResponseBody","trailerTarget","endStream","$ebb60b8df3e53498$exports","$ebb60b8df3e53498$var$__await","$ebb60b8df3e53498$var$__asyncGenerator","$43fd2868d32f080b$exports","$e85ef4e4708acee0$export$f2850b83364a06f","owners","_1","_2","$e85ef4e4708acee0$export$95c568565e56377b","$e85ef4e4708acee0$export$d0561031f3e5f6b3","$e85ef4e4708acee0$export$176e77a363d6dd85","$e85ef4e4708acee0$export$b81e38a4ebf472e","$e85ef4e4708acee0$export$8ecb3010f5c08c83","owner","$e85ef4e4708acee0$export$64a6120861524b5c","golinks","$e85ef4e4708acee0$export$dcc7c2e60581b008","$e85ef4e4708acee0$export$530b992b2baf63bb","$e85ef4e4708acee0$export$7c7f741f624cedb5","$e85ef4e4708acee0$export$2505ddf9464311a7","$e85ef4e4708acee0$export$fdd3d7e8d8deb018","$e85ef4e4708acee0$export$b4ec09bdda9aa5b8","$e85ef4e4708acee0$export$2e154683c494163b","$e85ef4e4708acee0$export$aa2f45033b266548","$e85ef4e4708acee0$export$4167f916ddfb8355","$e85ef4e4708acee0$export$f6c065a4c840b7dc","$711c43b261558fea$export$512cb7579e4fe867","createGolink","getGolink","listGolinks","listGolinksByUrl","updateGolink","deleteGolink","addOwner","removeOwner","$566c8d9d74c4fb47$var$golinkUrlKey","$566c8d9d74c4fb47$var$GolinkPopup","onSave","document","getElementById","alert","hidden","rawErr","openConsole","chrome","tabs","endsWith","api","buildClient","storage","sync","initialize","notConfiguredElem","unauthenticatedElem","golinkUiElem","checkAuth","active","currentWindow","innerText","groups","console","ul","golink","li","createElement","href","appendChild","$566c8d9d74c4fb47$var$initialize","popup","openOptionsPage","log"],"version":3,"file":"popup.861d9116.js.map"}